[{"name":"abstract fun onScale(detector: FasterScaleGestureDetector): Boolean","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.OnScaleGestureListener.onScale","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/-on-scale-gesture-listener/on-scale.html","searchKeys":["onScale","abstract fun onScale(detector: FasterScaleGestureDetector): Boolean","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.OnScaleGestureListener.onScale"]},{"name":"abstract fun onScaleBegin(detector: FasterScaleGestureDetector): Boolean","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.OnScaleGestureListener.onScaleBegin","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/-on-scale-gesture-listener/on-scale-begin.html","searchKeys":["onScaleBegin","abstract fun onScaleBegin(detector: FasterScaleGestureDetector): Boolean","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.OnScaleGestureListener.onScaleBegin"]},{"name":"abstract fun onScaleEnd(detector: FasterScaleGestureDetector)","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.OnScaleGestureListener.onScaleEnd","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/-on-scale-gesture-listener/on-scale-end.html","searchKeys":["onScaleEnd","abstract fun onScaleEnd(detector: FasterScaleGestureDetector)","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.OnScaleGestureListener.onScaleEnd"]},{"name":"abstract fun onViewLongPress(view: View, offset: OffsetCompat)","description":"com.github.panpf.zoomimage.view.zoom.OnViewLongPressListener.onViewLongPress","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-on-view-long-press-listener/on-view-long-press.html","searchKeys":["onViewLongPress","abstract fun onViewLongPress(view: View, offset: OffsetCompat)","com.github.panpf.zoomimage.view.zoom.OnViewLongPressListener.onViewLongPress"]},{"name":"abstract fun onViewTap(view: View, offset: OffsetCompat)","description":"com.github.panpf.zoomimage.view.zoom.OnViewTapListener.onViewTap","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-on-view-tap-listener/on-view-tap.html","searchKeys":["onViewTap","abstract fun onViewTap(view: View, offset: OffsetCompat)","com.github.panpf.zoomimage.view.zoom.OnViewTapListener.onViewTap"]},{"name":"class FasterScaleGestureDetector constructor(mContext: Context, mListener: FasterScaleGestureDetector.OnScaleGestureListener, handler: Handler? = null)","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/index.html","searchKeys":["FasterScaleGestureDetector","class FasterScaleGestureDetector constructor(mContext: Context, mListener: FasterScaleGestureDetector.OnScaleGestureListener, handler: Handler? = null)","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector"]},{"name":"class SimpleOnScaleGestureListener : FasterScaleGestureDetector.OnScaleGestureListener","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.SimpleOnScaleGestureListener","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/-simple-on-scale-gesture-listener/index.html","searchKeys":["SimpleOnScaleGestureListener","class SimpleOnScaleGestureListener : FasterScaleGestureDetector.OnScaleGestureListener","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.SimpleOnScaleGestureListener"]},{"name":"class SubsamplingEngine(val zoomableEngine: ZoomableEngine)","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/index.html","searchKeys":["SubsamplingEngine","class SubsamplingEngine(val zoomableEngine: ZoomableEngine)","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine"]},{"name":"class TileDrawHelper(logger: Logger, view: View, zoomableEngine: ZoomableEngine, subsamplingEngine: SubsamplingEngine)","description":"com.github.panpf.zoomimage.view.subsampling.internal.TileDrawHelper","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling.internal/-tile-draw-helper/index.html","searchKeys":["TileDrawHelper","class TileDrawHelper(logger: Logger, view: View, zoomableEngine: ZoomableEngine, subsamplingEngine: SubsamplingEngine)","com.github.panpf.zoomimage.view.subsampling.internal.TileDrawHelper"]},{"name":"class ViewAnimationAdapter(val view: View) : AnimationAdapter","description":"com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-view-animation-adapter/index.html","searchKeys":["ViewAnimationAdapter","class ViewAnimationAdapter(val view: View) : AnimationAdapter","com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter"]},{"name":"class ZoomableEngine(val logger: Logger, val view: View)","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/index.html","searchKeys":["ZoomableEngine","class ZoomableEngine(val logger: Logger, val view: View)","com.github.panpf.zoomimage.view.zoom.ZoomableEngine"]},{"name":"const val DEFAULT_COLOR: Int","description":"com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.Companion.DEFAULT_COLOR","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-scroll-bar-spec/-companion/-d-e-f-a-u-l-t_-c-o-l-o-r.html","searchKeys":["DEFAULT_COLOR","const val DEFAULT_COLOR: Int","com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.Companion.DEFAULT_COLOR"]},{"name":"const val DEFAULT_MARGIN: Float = 6.0f","description":"com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.Companion.DEFAULT_MARGIN","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-scroll-bar-spec/-companion/-d-e-f-a-u-l-t_-m-a-r-g-i-n.html","searchKeys":["DEFAULT_MARGIN","const val DEFAULT_MARGIN: Float = 6.0f","com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.Companion.DEFAULT_MARGIN"]},{"name":"const val DEFAULT_SIZE: Float = 3.0f","description":"com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.Companion.DEFAULT_SIZE","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-scroll-bar-spec/-companion/-d-e-f-a-u-l-t_-s-i-z-e.html","searchKeys":["DEFAULT_SIZE","const val DEFAULT_SIZE: Float = 3.0f","com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.Companion.DEFAULT_SIZE"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.SimpleOnScaleGestureListener.SimpleOnScaleGestureListener","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/-simple-on-scale-gesture-listener/-simple-on-scale-gesture-listener.html","searchKeys":["SimpleOnScaleGestureListener","constructor()","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.SimpleOnScaleGestureListener.SimpleOnScaleGestureListener"]},{"name":"constructor(color: Int = DEFAULT_COLOR, size: Float = DEFAULT_SIZE * Resources.getSystem().displayMetrics.density, margin: Float = DEFAULT_MARGIN * Resources.getSystem().displayMetrics.density)","description":"com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.ScrollBarSpec","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-scroll-bar-spec/-scroll-bar-spec.html","searchKeys":["ScrollBarSpec","constructor(color: Int = DEFAULT_COLOR, size: Float = DEFAULT_SIZE * Resources.getSystem().displayMetrics.density, margin: Float = DEFAULT_MARGIN * Resources.getSystem().displayMetrics.density)","com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.ScrollBarSpec"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"com.github.panpf.zoomimage.ZoomImageView.ZoomImageView","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/-zoom-image-view.html","searchKeys":["ZoomImageView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","com.github.panpf.zoomimage.ZoomImageView.ZoomImageView"]},{"name":"constructor(durationMillis: Int = DEFAULT_DURATION_MILLIS, interpolator: Interpolator = DEFAULT_INTERPOLATOR)","description":"com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.ZoomAnimationSpec","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoom-animation-spec/-zoom-animation-spec.html","searchKeys":["ZoomAnimationSpec","constructor(durationMillis: Int = DEFAULT_DURATION_MILLIS, interpolator: Interpolator = DEFAULT_INTERPOLATOR)","com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.ZoomAnimationSpec"]},{"name":"constructor(logger: Logger, view: View)","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.ZoomableEngine","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/-zoomable-engine.html","searchKeys":["ZoomableEngine","constructor(logger: Logger, view: View)","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.ZoomableEngine"]},{"name":"constructor(logger: Logger, view: View, zoomableEngine: ZoomableEngine, subsamplingEngine: SubsamplingEngine)","description":"com.github.panpf.zoomimage.view.subsampling.internal.TileDrawHelper.TileDrawHelper","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling.internal/-tile-draw-helper/-tile-draw-helper.html","searchKeys":["TileDrawHelper","constructor(logger: Logger, view: View, zoomableEngine: ZoomableEngine, subsamplingEngine: SubsamplingEngine)","com.github.panpf.zoomimage.view.subsampling.internal.TileDrawHelper.TileDrawHelper"]},{"name":"constructor(mContext: Context, mListener: FasterScaleGestureDetector.OnScaleGestureListener, handler: Handler? = null)","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.FasterScaleGestureDetector","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/-faster-scale-gesture-detector.html","searchKeys":["FasterScaleGestureDetector","constructor(mContext: Context, mListener: FasterScaleGestureDetector.OnScaleGestureListener, handler: Handler? = null)","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.FasterScaleGestureDetector"]},{"name":"constructor(view: View)","description":"com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter.ViewAnimationAdapter","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-view-animation-adapter/-view-animation-adapter.html","searchKeys":["ViewAnimationAdapter","constructor(view: View)","com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter.ViewAnimationAdapter"]},{"name":"constructor(zoomableEngine: ZoomableEngine)","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.SubsamplingEngine","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/-subsampling-engine.html","searchKeys":["SubsamplingEngine","constructor(zoomableEngine: ZoomableEngine)","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.SubsamplingEngine"]},{"name":"data class ScrollBarSpec(val color: Int = DEFAULT_COLOR, val size: Float = DEFAULT_SIZE * Resources.getSystem().displayMetrics.density, val margin: Float = DEFAULT_MARGIN * Resources.getSystem().displayMetrics.density)","description":"com.github.panpf.zoomimage.view.zoom.ScrollBarSpec","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-scroll-bar-spec/index.html","searchKeys":["ScrollBarSpec","data class ScrollBarSpec(val color: Int = DEFAULT_COLOR, val size: Float = DEFAULT_SIZE * Resources.getSystem().displayMetrics.density, val margin: Float = DEFAULT_MARGIN * Resources.getSystem().displayMetrics.density)","com.github.panpf.zoomimage.view.zoom.ScrollBarSpec"]},{"name":"data class ZoomAnimationSpec(val durationMillis: Int = DEFAULT_DURATION_MILLIS, val interpolator: Interpolator = DEFAULT_INTERPOLATOR) : BaseZoomAnimationSpec","description":"com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoom-animation-spec/index.html","searchKeys":["ZoomAnimationSpec","data class ZoomAnimationSpec(val durationMillis: Int = DEFAULT_DURATION_MILLIS, val interpolator: Interpolator = DEFAULT_INTERPOLATOR) : BaseZoomAnimationSpec","com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec"]},{"name":"fun AlignmentCompat.rtlFlipped(layoutDirection: Int? = null): AlignmentCompat","description":"com.github.panpf.zoomimage.view.util.rtlFlipped","location":"zoomimage-view/com.github.panpf.zoomimage.view.util/rtl-flipped.html","searchKeys":["rtlFlipped","fun AlignmentCompat.rtlFlipped(layoutDirection: Int? = null): AlignmentCompat","com.github.panpf.zoomimage.view.util.rtlFlipped"]},{"name":"fun canScroll(horizontal: Boolean, direction: Int): Boolean","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.canScroll","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/can-scroll.html","searchKeys":["canScroll","fun canScroll(horizontal: Boolean, direction: Int): Boolean","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.canScroll"]},{"name":"fun drawTiles(canvas: Canvas)","description":"com.github.panpf.zoomimage.view.subsampling.internal.TileDrawHelper.drawTiles","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling.internal/-tile-draw-helper/draw-tiles.html","searchKeys":["drawTiles","fun drawTiles(canvas: Canvas)","com.github.panpf.zoomimage.view.subsampling.internal.TileDrawHelper.drawTiles"]},{"name":"fun getNextStepScale(): Float","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.getNextStepScale","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/get-next-step-scale.html","searchKeys":["getNextStepScale","fun getNextStepScale(): Float","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.getNextStepScale"]},{"name":"fun interface OnViewLongPressListener","description":"com.github.panpf.zoomimage.view.zoom.OnViewLongPressListener","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-on-view-long-press-listener/index.html","searchKeys":["OnViewLongPressListener","fun interface OnViewLongPressListener","com.github.panpf.zoomimage.view.zoom.OnViewLongPressListener"]},{"name":"fun interface OnViewTapListener","description":"com.github.panpf.zoomimage.view.zoom.OnViewTapListener","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-on-view-tap-listener/index.html","searchKeys":["OnViewTapListener","fun interface OnViewTapListener","com.github.panpf.zoomimage.view.zoom.OnViewTapListener"]},{"name":"fun onAttachToWindow()","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.onAttachToWindow","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/on-attach-to-window.html","searchKeys":["onAttachToWindow","fun onAttachToWindow()","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.onAttachToWindow"]},{"name":"fun onAttachToWindow()","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.onAttachToWindow","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/on-attach-to-window.html","searchKeys":["onAttachToWindow","fun onAttachToWindow()","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.onAttachToWindow"]},{"name":"fun onDetachFromWindow()","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.onDetachFromWindow","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/on-detach-from-window.html","searchKeys":["onDetachFromWindow","fun onDetachFromWindow()","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.onDetachFromWindow"]},{"name":"fun onDetachFromWindow()","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.onDetachFromWindow","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/on-detach-from-window.html","searchKeys":["onDetachFromWindow","fun onDetachFromWindow()","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.onDetachFromWindow"]},{"name":"fun onTouchEvent(event: MotionEvent): Boolean","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.onTouchEvent","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/on-touch-event.html","searchKeys":["onTouchEvent","fun onTouchEvent(event: MotionEvent): Boolean","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.onTouchEvent"]},{"name":"fun setImage(imageSource: ImageSource.Factory?, imageInfo: ImageInfo? = null): Boolean","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.setImage","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/set-image.html","searchKeys":["setImage","fun setImage(imageSource: ImageSource.Factory?, imageInfo: ImageInfo? = null): Boolean","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.setImage"]},{"name":"fun setImage(imageSource: ImageSource?, imageInfo: ImageInfo? = null): Boolean","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.setImage","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/set-image.html","searchKeys":["setImage","fun setImage(imageSource: ImageSource?, imageInfo: ImageInfo? = null): Boolean","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.setImage"]},{"name":"fun setImage(subsamplingImage: SubsamplingImage?): Boolean","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.setImage","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/set-image.html","searchKeys":["setImage","fun setImage(subsamplingImage: SubsamplingImage?): Boolean","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.setImage"]},{"name":"fun setImageSource(imageSource: ImageSource.Factory?): Boolean","description":"com.github.panpf.zoomimage.ZoomImageView.setImageSource","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/set-image-source.html","searchKeys":["setImageSource","fun setImageSource(imageSource: ImageSource.Factory?): Boolean","com.github.panpf.zoomimage.ZoomImageView.setImageSource"]},{"name":"fun setImageSource(imageSource: ImageSource.Factory?): Boolean","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.setImageSource","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/set-image-source.html","searchKeys":["setImageSource","fun setImageSource(imageSource: ImageSource.Factory?): Boolean","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.setImageSource"]},{"name":"fun setImageSource(imageSource: ImageSource?): Boolean","description":"com.github.panpf.zoomimage.ZoomImageView.setImageSource","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/set-image-source.html","searchKeys":["setImageSource","fun setImageSource(imageSource: ImageSource?): Boolean","com.github.panpf.zoomimage.ZoomImageView.setImageSource"]},{"name":"fun setImageSource(imageSource: ImageSource?): Boolean","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.setImageSource","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/set-image-source.html","searchKeys":["setImageSource","fun setImageSource(imageSource: ImageSource?): Boolean","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.setImageSource"]},{"name":"fun setSubsamplingImage(imageSource: ImageSource.Factory?, imageInfo: ImageInfo? = null): Boolean","description":"com.github.panpf.zoomimage.ZoomImageView.setSubsamplingImage","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/set-subsampling-image.html","searchKeys":["setSubsamplingImage","fun setSubsamplingImage(imageSource: ImageSource.Factory?, imageInfo: ImageInfo? = null): Boolean","com.github.panpf.zoomimage.ZoomImageView.setSubsamplingImage"]},{"name":"fun setSubsamplingImage(imageSource: ImageSource?, imageInfo: ImageInfo? = null): Boolean","description":"com.github.panpf.zoomimage.ZoomImageView.setSubsamplingImage","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/set-subsampling-image.html","searchKeys":["setSubsamplingImage","fun setSubsamplingImage(imageSource: ImageSource?, imageInfo: ImageInfo? = null): Boolean","com.github.panpf.zoomimage.ZoomImageView.setSubsamplingImage"]},{"name":"fun setSubsamplingImage(subsamplingImage: SubsamplingImage?): Boolean","description":"com.github.panpf.zoomimage.ZoomImageView.setSubsamplingImage","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/set-subsampling-image.html","searchKeys":["setSubsamplingImage","fun setSubsamplingImage(subsamplingImage: SubsamplingImage?): Boolean","com.github.panpf.zoomimage.ZoomImageView.setSubsamplingImage"]},{"name":"fun touchPointToContentPoint(touchPoint: OffsetCompat): IntOffsetCompat","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.touchPointToContentPoint","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/touch-point-to-content-point.html","searchKeys":["touchPointToContentPoint","fun touchPointToContentPoint(touchPoint: OffsetCompat): IntOffsetCompat","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.touchPointToContentPoint"]},{"name":"fun touchPointToContentPointF(touchPoint: OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.touchPointToContentPointF","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/touch-point-to-content-point-f.html","searchKeys":["touchPointToContentPointF","fun touchPointToContentPointF(touchPoint: OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.touchPointToContentPointF"]},{"name":"interface OnScaleGestureListener","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.OnScaleGestureListener","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/-on-scale-gesture-listener/index.html","searchKeys":["OnScaleGestureListener","interface OnScaleGestureListener","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.OnScaleGestureListener"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.Companion","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-scroll-bar-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.Companion","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoom-animation-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.Companion","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.Companion"]},{"name":"open class ZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AppCompatImageView","description":"com.github.panpf.zoomimage.ZoomImageView","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/index.html","searchKeys":["ZoomImageView","open class ZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AppCompatImageView","com.github.panpf.zoomimage.ZoomImageView"]},{"name":"open fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","description":"com.github.panpf.zoomimage.ZoomImageView.onDrawableChanged","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/on-drawable-changed.html","searchKeys":["onDrawableChanged","open fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","com.github.panpf.zoomimage.ZoomImageView.onDrawableChanged"]},{"name":"open override fun canScrollHorizontally(direction: Int): Boolean","description":"com.github.panpf.zoomimage.ZoomImageView.canScrollHorizontally","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/can-scroll-horizontally.html","searchKeys":["canScrollHorizontally","open override fun canScrollHorizontally(direction: Int): Boolean","com.github.panpf.zoomimage.ZoomImageView.canScrollHorizontally"]},{"name":"open override fun canScrollVertically(direction: Int): Boolean","description":"com.github.panpf.zoomimage.ZoomImageView.canScrollVertically","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/can-scroll-vertically.html","searchKeys":["canScrollVertically","open override fun canScrollVertically(direction: Int): Boolean","com.github.panpf.zoomimage.ZoomImageView.canScrollVertically"]},{"name":"open override fun getScaleType(): ImageView.ScaleType","description":"com.github.panpf.zoomimage.ZoomImageView.getScaleType","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/get-scale-type.html","searchKeys":["getScaleType","open override fun getScaleType(): ImageView.ScaleType","com.github.panpf.zoomimage.ZoomImageView.getScaleType"]},{"name":"open override fun onScale(detector: FasterScaleGestureDetector): Boolean","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.SimpleOnScaleGestureListener.onScale","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/-simple-on-scale-gesture-listener/on-scale.html","searchKeys":["onScale","open override fun onScale(detector: FasterScaleGestureDetector): Boolean","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.SimpleOnScaleGestureListener.onScale"]},{"name":"open override fun onScaleBegin(detector: FasterScaleGestureDetector): Boolean","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.SimpleOnScaleGestureListener.onScaleBegin","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/-simple-on-scale-gesture-listener/on-scale-begin.html","searchKeys":["onScaleBegin","open override fun onScaleBegin(detector: FasterScaleGestureDetector): Boolean","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.SimpleOnScaleGestureListener.onScaleBegin"]},{"name":"open override fun onScaleEnd(detector: FasterScaleGestureDetector)","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.SimpleOnScaleGestureListener.onScaleEnd","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/-simple-on-scale-gesture-listener/on-scale-end.html","searchKeys":["onScaleEnd","open override fun onScaleEnd(detector: FasterScaleGestureDetector)","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.SimpleOnScaleGestureListener.onScaleEnd"]},{"name":"open override fun onTouchEvent(event: MotionEvent): Boolean","description":"com.github.panpf.zoomimage.ZoomImageView.onTouchEvent","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/on-touch-event.html","searchKeys":["onTouchEvent","open override fun onTouchEvent(event: MotionEvent): Boolean","com.github.panpf.zoomimage.ZoomImageView.onTouchEvent"]},{"name":"open override fun setImageDrawable(drawable: Drawable?)","description":"com.github.panpf.zoomimage.ZoomImageView.setImageDrawable","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/set-image-drawable.html","searchKeys":["setImageDrawable","open override fun setImageDrawable(drawable: Drawable?)","com.github.panpf.zoomimage.ZoomImageView.setImageDrawable"]},{"name":"open override fun setImageMatrix(matrix: Matrix?)","description":"com.github.panpf.zoomimage.ZoomImageView.setImageMatrix","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/set-image-matrix.html","searchKeys":["setImageMatrix","open override fun setImageMatrix(matrix: Matrix?)","com.github.panpf.zoomimage.ZoomImageView.setImageMatrix"]},{"name":"open override fun setImageURI(uri: Uri?)","description":"com.github.panpf.zoomimage.ZoomImageView.setImageURI","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/set-image-u-r-i.html","searchKeys":["setImageURI","open override fun setImageURI(uri: Uri?)","com.github.panpf.zoomimage.ZoomImageView.setImageURI"]},{"name":"open override fun setScaleType(scaleType: ImageView.ScaleType)","description":"com.github.panpf.zoomimage.ZoomImageView.setScaleType","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/set-scale-type.html","searchKeys":["setScaleType","open override fun setScaleType(scaleType: ImageView.ScaleType)","com.github.panpf.zoomimage.ZoomImageView.setScaleType"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.toString","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.toString"]},{"name":"open override val durationMillis: Int","description":"com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.durationMillis","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoom-animation-spec/duration-millis.html","searchKeys":["durationMillis","open override val durationMillis: Int","com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.durationMillis"]},{"name":"open suspend override fun startAnimation(animationSpec: BaseZoomAnimationSpec?, onProgress: (progress: Float) -> Unit, onEnd: () -> Unit)","description":"com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter.startAnimation","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-view-animation-adapter/start-animation.html","searchKeys":["startAnimation","open suspend override fun startAnimation(animationSpec: BaseZoomAnimationSpec?, onProgress: (progress: Float) -> Unit, onEnd: () -> Unit)","com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter.startAnimation"]},{"name":"open suspend override fun startFlingAnimation(startUserOffset: OffsetCompat, userOffsetBounds: RectCompat?, velocity: OffsetCompat, extras: Map<String, Any>, onUpdateValue: (value: OffsetCompat) -> Boolean, onEnd: () -> Unit)","description":"com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter.startFlingAnimation","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-view-animation-adapter/start-fling-animation.html","searchKeys":["startFlingAnimation","open suspend override fun startFlingAnimation(startUserOffset: OffsetCompat, userOffsetBounds: RectCompat?, velocity: OffsetCompat, extras: Map<String, Any>, onUpdateValue: (value: OffsetCompat) -> Boolean, onEnd: () -> Unit)","com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter.startFlingAnimation"]},{"name":"open suspend override fun stopAnimation(): Boolean","description":"com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter.stopAnimation","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-view-animation-adapter/stop-animation.html","searchKeys":["stopAnimation","open suspend override fun stopAnimation(): Boolean","com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter.stopAnimation"]},{"name":"open suspend override fun stopFlingAnimation(): Boolean","description":"com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter.stopFlingAnimation","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-view-animation-adapter/stop-fling-animation.html","searchKeys":["stopFlingAnimation","open suspend override fun stopFlingAnimation(): Boolean","com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter.stopFlingAnimation"]},{"name":"suspend fun locate(contentPoint: IntOffsetCompat, targetScale: Float = transformState.value.scaleX, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.locate","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/locate.html","searchKeys":["locate","suspend fun locate(contentPoint: IntOffsetCompat, targetScale: Float = transformState.value.scaleX, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.locate"]},{"name":"suspend fun locate(contentPoint: OffsetCompat, targetScale: Float = transformState.value.scaleX, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.locate","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/locate.html","searchKeys":["locate","suspend fun locate(contentPoint: OffsetCompat, targetScale: Float = transformState.value.scaleX, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.locate"]},{"name":"suspend fun offset(targetOffset: OffsetCompat, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.offset","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/offset.html","searchKeys":["offset","suspend fun offset(targetOffset: OffsetCompat, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.offset"]},{"name":"suspend fun offsetBy(addOffset: OffsetCompat, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.offsetBy","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/offset-by.html","searchKeys":["offsetBy","suspend fun offsetBy(addOffset: OffsetCompat, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.offsetBy"]},{"name":"suspend fun reset()","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.reset","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/reset.html","searchKeys":["reset","suspend fun reset()","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.reset"]},{"name":"suspend fun rotate(targetRotation: Int)","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.rotate","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/rotate.html","searchKeys":["rotate","suspend fun rotate(targetRotation: Int)","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.rotate"]},{"name":"suspend fun rotateBy(addRotation: Int)","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.rotateBy","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/rotate-by.html","searchKeys":["rotateBy","suspend fun rotateBy(addRotation: Int)","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.rotateBy"]},{"name":"suspend fun scale(targetScale: Float, centroidContentPoint: IntOffsetCompat? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: OffsetCompat = contentVisibleRectFState.value.center): Boolean","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.scale","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/scale.html","searchKeys":["scale","suspend fun scale(targetScale: Float, centroidContentPoint: IntOffsetCompat? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: OffsetCompat = contentVisibleRectFState.value.center): Boolean","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.scale"]},{"name":"suspend fun scaleBy(addScale: Float, centroidContentPoint: IntOffsetCompat? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: OffsetCompat = contentVisibleRectFState.value.center): Boolean","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.scaleBy","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/scale-by.html","searchKeys":["scaleBy","suspend fun scaleBy(addScale: Float, centroidContentPoint: IntOffsetCompat? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: OffsetCompat = contentVisibleRectFState.value.center): Boolean","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.scaleBy"]},{"name":"suspend fun scaleByPlus(addScale: Float, centroidContentPoint: IntOffsetCompat? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: OffsetCompat = contentVisibleRectFState.value.center): Boolean","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.scaleByPlus","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/scale-by-plus.html","searchKeys":["scaleByPlus","suspend fun scaleByPlus(addScale: Float, centroidContentPoint: IntOffsetCompat? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: OffsetCompat = contentVisibleRectFState.value.center): Boolean","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.scaleByPlus"]},{"name":"suspend fun switchScale(centroidContentPoint: IntOffsetCompat? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: OffsetCompat = contentVisibleRectFState.value.center): Float?","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.switchScale","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/switch-scale.html","searchKeys":["switchScale","suspend fun switchScale(centroidContentPoint: IntOffsetCompat? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: OffsetCompat = contentVisibleRectFState.value.center): Float?","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.switchScale"]},{"name":"val DEFAULT_DURATION_MILLIS: Int","description":"com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.Companion.DEFAULT_DURATION_MILLIS","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoom-animation-spec/-companion/-d-e-f-a-u-l-t_-d-u-r-a-t-i-o-n_-m-i-l-l-i-s.html","searchKeys":["DEFAULT_DURATION_MILLIS","val DEFAULT_DURATION_MILLIS: Int","com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.Companion.DEFAULT_DURATION_MILLIS"]},{"name":"val DEFAULT_INTERPOLATOR: AccelerateDecelerateInterpolator","description":"com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.Companion.DEFAULT_INTERPOLATOR","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoom-animation-spec/-companion/-d-e-f-a-u-l-t_-i-n-t-e-r-p-o-l-a-t-o-r.html","searchKeys":["DEFAULT_INTERPOLATOR","val DEFAULT_INTERPOLATOR: AccelerateDecelerateInterpolator","com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.Companion.DEFAULT_INTERPOLATOR"]},{"name":"val Default: ScrollBarSpec","description":"com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.Companion.Default","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-scroll-bar-spec/-companion/-default.html","searchKeys":["Default","val Default: ScrollBarSpec","com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.Companion.Default"]},{"name":"val Default: ZoomAnimationSpec","description":"com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.Companion.Default","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoom-animation-spec/-companion/-default.html","searchKeys":["Default","val Default: ZoomAnimationSpec","com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.Companion.Default"]},{"name":"val None: ZoomAnimationSpec","description":"com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.Companion.None","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoom-animation-spec/-companion/-none.html","searchKeys":["None","val None: ZoomAnimationSpec","com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.Companion.None"]},{"name":"val alignmentState: MutableStateFlow<AlignmentCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.alignmentState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/alignment-state.html","searchKeys":["alignmentState","val alignmentState: MutableStateFlow<AlignmentCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.alignmentState"]},{"name":"val animationSpecState: MutableStateFlow<ZoomAnimationSpec>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.animationSpecState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/animation-spec-state.html","searchKeys":["animationSpecState","val animationSpecState: MutableStateFlow<ZoomAnimationSpec>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.animationSpecState"]},{"name":"val backgroundTilesState: StateFlow<List<TileSnapshot>>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.backgroundTilesState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/background-tiles-state.html","searchKeys":["backgroundTilesState","val backgroundTilesState: StateFlow<List<TileSnapshot>>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.backgroundTilesState"]},{"name":"val baseTransformState: StateFlow<TransformCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.baseTransformState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/base-transform-state.html","searchKeys":["baseTransformState","val baseTransformState: StateFlow<TransformCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.baseTransformState"]},{"name":"val color: Int","description":"com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.color","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-scroll-bar-spec/color.html","searchKeys":["color","val color: Int","com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.color"]},{"name":"val containerSizeState: MutableStateFlow<IntSizeCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.containerSizeState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/container-size-state.html","searchKeys":["containerSizeState","val containerSizeState: MutableStateFlow<IntSizeCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.containerSizeState"]},{"name":"val contentBaseDisplayRectFState: StateFlow<RectCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentBaseDisplayRectFState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/content-base-display-rect-f-state.html","searchKeys":["contentBaseDisplayRectFState","val contentBaseDisplayRectFState: StateFlow<RectCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentBaseDisplayRectFState"]},{"name":"val contentBaseDisplayRectState: StateFlow<IntRectCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentBaseDisplayRectState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/content-base-display-rect-state.html","searchKeys":["contentBaseDisplayRectState","val contentBaseDisplayRectState: StateFlow<IntRectCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentBaseDisplayRectState"]},{"name":"val contentBaseVisibleRectFState: StateFlow<RectCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentBaseVisibleRectFState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/content-base-visible-rect-f-state.html","searchKeys":["contentBaseVisibleRectFState","val contentBaseVisibleRectFState: StateFlow<RectCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentBaseVisibleRectFState"]},{"name":"val contentBaseVisibleRectState: StateFlow<IntRectCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentBaseVisibleRectState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/content-base-visible-rect-state.html","searchKeys":["contentBaseVisibleRectState","val contentBaseVisibleRectState: StateFlow<IntRectCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentBaseVisibleRectState"]},{"name":"val contentDisplayRectFState: StateFlow<RectCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentDisplayRectFState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/content-display-rect-f-state.html","searchKeys":["contentDisplayRectFState","val contentDisplayRectFState: StateFlow<RectCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentDisplayRectFState"]},{"name":"val contentDisplayRectState: StateFlow<IntRectCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentDisplayRectState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/content-display-rect-state.html","searchKeys":["contentDisplayRectState","val contentDisplayRectState: StateFlow<IntRectCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentDisplayRectState"]},{"name":"val contentOriginSizeState: MutableStateFlow<IntSizeCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentOriginSizeState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/content-origin-size-state.html","searchKeys":["contentOriginSizeState","val contentOriginSizeState: MutableStateFlow<IntSizeCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentOriginSizeState"]},{"name":"val contentScaleState: MutableStateFlow<ContentScaleCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentScaleState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/content-scale-state.html","searchKeys":["contentScaleState","val contentScaleState: MutableStateFlow<ContentScaleCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentScaleState"]},{"name":"val contentSizeState: MutableStateFlow<IntSizeCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentSizeState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/content-size-state.html","searchKeys":["contentSizeState","val contentSizeState: MutableStateFlow<IntSizeCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentSizeState"]},{"name":"val contentVisibleRectFState: StateFlow<RectCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentVisibleRectFState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/content-visible-rect-f-state.html","searchKeys":["contentVisibleRectFState","val contentVisibleRectFState: StateFlow<RectCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentVisibleRectFState"]},{"name":"val contentVisibleRectState: StateFlow<IntRectCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentVisibleRectState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/content-visible-rect-state.html","searchKeys":["contentVisibleRectState","val contentVisibleRectState: StateFlow<IntRectCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.contentVisibleRectState"]},{"name":"val continuousTransformTypeState: StateFlow<Int>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.continuousTransformTypeState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/continuous-transform-type-state.html","searchKeys":["continuousTransformTypeState","val continuousTransformTypeState: StateFlow<Int>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.continuousTransformTypeState"]},{"name":"val disabledBackgroundTilesState: MutableStateFlow<Boolean>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.disabledBackgroundTilesState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/disabled-background-tiles-state.html","searchKeys":["disabledBackgroundTilesState","val disabledBackgroundTilesState: MutableStateFlow<Boolean>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.disabledBackgroundTilesState"]},{"name":"val disabledTileImageCacheState: MutableStateFlow<Boolean>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.disabledTileImageCacheState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/disabled-tile-image-cache-state.html","searchKeys":["disabledTileImageCacheState","val disabledTileImageCacheState: MutableStateFlow<Boolean>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.disabledTileImageCacheState"]},{"name":"val foregroundTilesState: StateFlow<List<TileSnapshot>>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.foregroundTilesState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/foreground-tiles-state.html","searchKeys":["foregroundTilesState","val foregroundTilesState: StateFlow<List<TileSnapshot>>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.foregroundTilesState"]},{"name":"val imageInfoState: StateFlow<ImageInfo?>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.imageInfoState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/image-info-state.html","searchKeys":["imageInfoState","val imageInfoState: StateFlow<ImageInfo?>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.imageInfoState"]},{"name":"val imageLoadRectState: StateFlow<IntRectCompat>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.imageLoadRectState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/image-load-rect-state.html","searchKeys":["imageLoadRectState","val imageLoadRectState: StateFlow<IntRectCompat>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.imageLoadRectState"]},{"name":"val interpolator: Interpolator","description":"com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.interpolator","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoom-animation-spec/interpolator.html","searchKeys":["interpolator","val interpolator: Interpolator","com.github.panpf.zoomimage.view.zoom.ZoomAnimationSpec.interpolator"]},{"name":"val limitOffsetWithinBaseVisibleRectState: MutableStateFlow<Boolean>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.limitOffsetWithinBaseVisibleRectState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/limit-offset-within-base-visible-rect-state.html","searchKeys":["limitOffsetWithinBaseVisibleRectState","val limitOffsetWithinBaseVisibleRectState: MutableStateFlow<Boolean>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.limitOffsetWithinBaseVisibleRectState"]},{"name":"val logger: Logger","description":"com.github.panpf.zoomimage.ZoomImageView.logger","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/logger.html","searchKeys":["logger","val logger: Logger","com.github.panpf.zoomimage.ZoomImageView.logger"]},{"name":"val logger: Logger","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.logger","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/logger.html","searchKeys":["logger","val logger: Logger","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.logger"]},{"name":"val logger: Logger","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.logger","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/logger.html","searchKeys":["logger","val logger: Logger","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.logger"]},{"name":"val margin: Float","description":"com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.margin","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-scroll-bar-spec/margin.html","searchKeys":["margin","val margin: Float","com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.margin"]},{"name":"val maxScaleState: StateFlow<Float>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.maxScaleState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/max-scale-state.html","searchKeys":["maxScaleState","val maxScaleState: StateFlow<Float>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.maxScaleState"]},{"name":"val mediumScaleState: StateFlow<Float>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.mediumScaleState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/medium-scale-state.html","searchKeys":["mediumScaleState","val mediumScaleState: StateFlow<Float>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.mediumScaleState"]},{"name":"val minScaleState: StateFlow<Float>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.minScaleState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/min-scale-state.html","searchKeys":["minScaleState","val minScaleState: StateFlow<Float>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.minScaleState"]},{"name":"val oneFingerScaleSpecState: MutableStateFlow<OneFingerScaleSpec>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.oneFingerScaleSpecState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/one-finger-scale-spec-state.html","searchKeys":["oneFingerScaleSpecState","val oneFingerScaleSpecState: MutableStateFlow<OneFingerScaleSpec>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.oneFingerScaleSpecState"]},{"name":"val pausedContinuousTransformTypesState: MutableStateFlow<Int>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.pausedContinuousTransformTypesState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/paused-continuous-transform-types-state.html","searchKeys":["pausedContinuousTransformTypesState","val pausedContinuousTransformTypesState: MutableStateFlow<Int>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.pausedContinuousTransformTypesState"]},{"name":"val readModeState: MutableStateFlow<ReadMode?>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.readModeState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/read-mode-state.html","searchKeys":["readModeState","val readModeState: MutableStateFlow<ReadMode?>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.readModeState"]},{"name":"val readyState: StateFlow<Boolean>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.readyState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/ready-state.html","searchKeys":["readyState","val readyState: StateFlow<Boolean>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.readyState"]},{"name":"val rubberBandScaleState: MutableStateFlow<Boolean>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.rubberBandScaleState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/rubber-band-scale-state.html","searchKeys":["rubberBandScaleState","val rubberBandScaleState: MutableStateFlow<Boolean>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.rubberBandScaleState"]},{"name":"val sampleSizeState: StateFlow<Int>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.sampleSizeState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/sample-size-state.html","searchKeys":["sampleSizeState","val sampleSizeState: StateFlow<Int>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.sampleSizeState"]},{"name":"val scaleFactor: Float","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.scaleFactor","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/scale-factor.html","searchKeys":["scaleFactor","val scaleFactor: Float","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.scaleFactor"]},{"name":"val scalesCalculatorState: MutableStateFlow<ScalesCalculator>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.scalesCalculatorState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/scales-calculator-state.html","searchKeys":["scalesCalculatorState","val scalesCalculatorState: MutableStateFlow<ScalesCalculator>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.scalesCalculatorState"]},{"name":"val scrollEdgeState: StateFlow<ScrollEdge>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.scrollEdgeState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/scroll-edge-state.html","searchKeys":["scrollEdgeState","val scrollEdgeState: StateFlow<ScrollEdge>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.scrollEdgeState"]},{"name":"val showTileBoundsState: MutableStateFlow<Boolean>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.showTileBoundsState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/show-tile-bounds-state.html","searchKeys":["showTileBoundsState","val showTileBoundsState: MutableStateFlow<Boolean>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.showTileBoundsState"]},{"name":"val size: Float","description":"com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.size","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-scroll-bar-spec/size.html","searchKeys":["size","val size: Float","com.github.panpf.zoomimage.view.zoom.ScrollBarSpec.size"]},{"name":"val stoppedState: MutableStateFlow<Boolean>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.stoppedState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/stopped-state.html","searchKeys":["stoppedState","val stoppedState: MutableStateFlow<Boolean>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.stoppedState"]},{"name":"val subsampling: SubsamplingEngine","description":"com.github.panpf.zoomimage.ZoomImageView.subsampling","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/subsampling.html","searchKeys":["subsampling","val subsampling: SubsamplingEngine","com.github.panpf.zoomimage.ZoomImageView.subsampling"]},{"name":"val subsamplingImage: SubsamplingImage?","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.subsamplingImage","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/subsampling-image.html","searchKeys":["subsamplingImage","val subsamplingImage: SubsamplingImage?","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.subsamplingImage"]},{"name":"val threeStepScaleState: MutableStateFlow<Boolean>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.threeStepScaleState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/three-step-scale-state.html","searchKeys":["threeStepScaleState","val threeStepScaleState: MutableStateFlow<Boolean>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.threeStepScaleState"]},{"name":"val tileAnimationSpecState: MutableStateFlow<TileAnimationSpec>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.tileAnimationSpecState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/tile-animation-spec-state.html","searchKeys":["tileAnimationSpecState","val tileAnimationSpecState: MutableStateFlow<TileAnimationSpec>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.tileAnimationSpecState"]},{"name":"val tileGridSizeMapState: StateFlow<Map<Int, IntOffsetCompat>>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.tileGridSizeMapState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/tile-grid-size-map-state.html","searchKeys":["tileGridSizeMapState","val tileGridSizeMapState: StateFlow<Map<Int, IntOffsetCompat>>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.tileGridSizeMapState"]},{"name":"val tileImageCacheState: MutableStateFlow<TileImageCache?>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.tileImageCacheState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/tile-image-cache-state.html","searchKeys":["tileImageCacheState","val tileImageCacheState: MutableStateFlow<TileImageCache?>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.tileImageCacheState"]},{"name":"val timeDelta: Long","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.timeDelta","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/time-delta.html","searchKeys":["timeDelta","val timeDelta: Long","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.timeDelta"]},{"name":"val transformState: StateFlow<TransformCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.transformState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/transform-state.html","searchKeys":["transformState","val transformState: StateFlow<TransformCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.transformState"]},{"name":"val userOffsetBoundsRectFState: StateFlow<RectCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.userOffsetBoundsRectFState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/user-offset-bounds-rect-f-state.html","searchKeys":["userOffsetBoundsRectFState","val userOffsetBoundsRectFState: StateFlow<RectCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.userOffsetBoundsRectFState"]},{"name":"val userOffsetBoundsRectState: StateFlow<IntRectCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.userOffsetBoundsRectState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/user-offset-bounds-rect-state.html","searchKeys":["userOffsetBoundsRectState","val userOffsetBoundsRectState: StateFlow<IntRectCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.userOffsetBoundsRectState"]},{"name":"val userOffsetBoundsState: StateFlow<IntRectCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.userOffsetBoundsState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/user-offset-bounds-state.html","searchKeys":["userOffsetBoundsState","val userOffsetBoundsState: StateFlow<IntRectCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.userOffsetBoundsState"]},{"name":"val userTransformState: StateFlow<TransformCompat>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.userTransformState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/user-transform-state.html","searchKeys":["userTransformState","val userTransformState: StateFlow<TransformCompat>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.userTransformState"]},{"name":"val view: View","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.view","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/view.html","searchKeys":["view","val view: View","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.view"]},{"name":"val view: View","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.view","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/view.html","searchKeys":["view","val view: View","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.view"]},{"name":"val view: View","description":"com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter.view","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-view-animation-adapter/view.html","searchKeys":["view","val view: View","com.github.panpf.zoomimage.view.zoom.internal.ViewAnimationAdapter.view"]},{"name":"val zoomable: ZoomableEngine","description":"com.github.panpf.zoomimage.ZoomImageView.zoomable","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/zoomable.html","searchKeys":["zoomable","val zoomable: ZoomableEngine","com.github.panpf.zoomimage.ZoomImageView.zoomable"]},{"name":"val zoomableEngine: ZoomableEngine","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.zoomableEngine","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/zoomable-engine.html","searchKeys":["zoomableEngine","val zoomableEngine: ZoomableEngine","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.zoomableEngine"]},{"name":"var containerWhitespaceMultipleState: MutableStateFlow<Float>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.containerWhitespaceMultipleState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/container-whitespace-multiple-state.html","searchKeys":["containerWhitespaceMultipleState","var containerWhitespaceMultipleState: MutableStateFlow<Float>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.containerWhitespaceMultipleState"]},{"name":"var containerWhitespaceState: MutableStateFlow<ContainerWhitespace>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.containerWhitespaceState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/container-whitespace-state.html","searchKeys":["containerWhitespaceState","var containerWhitespaceState: MutableStateFlow<ContainerWhitespace>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.containerWhitespaceState"]},{"name":"var currentSpan: Float","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.currentSpan","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/current-span.html","searchKeys":["currentSpan","var currentSpan: Float","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.currentSpan"]},{"name":"var currentSpanX: Float","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.currentSpanX","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/current-span-x.html","searchKeys":["currentSpanX","var currentSpanX: Float","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.currentSpanX"]},{"name":"var currentSpanY: Float","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.currentSpanY","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/current-span-y.html","searchKeys":["currentSpanY","var currentSpanY: Float","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.currentSpanY"]},{"name":"var disabledGestureTypesState: MutableStateFlow<Int>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.disabledGestureTypesState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/disabled-gesture-types-state.html","searchKeys":["disabledGestureTypesState","var disabledGestureTypesState: MutableStateFlow<Int>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.disabledGestureTypesState"]},{"name":"var eventTime: Long","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.eventTime","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/event-time.html","searchKeys":["eventTime","var eventTime: Long","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.eventTime"]},{"name":"var focusX: Float","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.focusX","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/focus-x.html","searchKeys":["focusX","var focusX: Float","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.focusX"]},{"name":"var focusY: Float","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.focusY","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/focus-y.html","searchKeys":["focusY","var focusY: Float","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.focusY"]},{"name":"var isInProgress: Boolean","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.isInProgress","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/is-in-progress.html","searchKeys":["isInProgress","var isInProgress: Boolean","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.isInProgress"]},{"name":"var isQuickScaleEnabled: Boolean","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.isQuickScaleEnabled","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/is-quick-scale-enabled.html","searchKeys":["isQuickScaleEnabled","var isQuickScaleEnabled: Boolean","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.isQuickScaleEnabled"]},{"name":"var isStylusScaleEnabled: Boolean","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.isStylusScaleEnabled","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/is-stylus-scale-enabled.html","searchKeys":["isStylusScaleEnabled","var isStylusScaleEnabled: Boolean","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.isStylusScaleEnabled"]},{"name":"var keepTransformWhenSameAspectRatioContentSizeChangedState: MutableStateFlow<Boolean>","description":"com.github.panpf.zoomimage.view.zoom.ZoomableEngine.keepTransformWhenSameAspectRatioContentSizeChangedState","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom/-zoomable-engine/keep-transform-when-same-aspect-ratio-content-size-changed-state.html","searchKeys":["keepTransformWhenSameAspectRatioContentSizeChangedState","var keepTransformWhenSameAspectRatioContentSizeChangedState: MutableStateFlow<Boolean>","com.github.panpf.zoomimage.view.zoom.ZoomableEngine.keepTransformWhenSameAspectRatioContentSizeChangedState"]},{"name":"var lifecycle: Lifecycle?","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.lifecycle","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/lifecycle.html","searchKeys":["lifecycle","var lifecycle: Lifecycle?","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.lifecycle"]},{"name":"var onViewLongPressListener: OnViewLongPressListener?","description":"com.github.panpf.zoomimage.ZoomImageView.onViewLongPressListener","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/on-view-long-press-listener.html","searchKeys":["onViewLongPressListener","var onViewLongPressListener: OnViewLongPressListener?","com.github.panpf.zoomimage.ZoomImageView.onViewLongPressListener"]},{"name":"var onViewTapListener: OnViewTapListener?","description":"com.github.panpf.zoomimage.ZoomImageView.onViewTapListener","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/on-view-tap-listener.html","searchKeys":["onViewTapListener","var onViewTapListener: OnViewTapListener?","com.github.panpf.zoomimage.ZoomImageView.onViewTapListener"]},{"name":"var previousSpan: Float","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.previousSpan","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/previous-span.html","searchKeys":["previousSpan","var previousSpan: Float","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.previousSpan"]},{"name":"var previousSpanX: Float","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.previousSpanX","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/previous-span-x.html","searchKeys":["previousSpanX","var previousSpanX: Float","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.previousSpanX"]},{"name":"var previousSpanY: Float","description":"com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.previousSpanY","location":"zoomimage-view/com.github.panpf.zoomimage.view.zoom.internal/-faster-scale-gesture-detector/previous-span-y.html","searchKeys":["previousSpanY","var previousSpanY: Float","com.github.panpf.zoomimage.view.zoom.internal.FasterScaleGestureDetector.previousSpanY"]},{"name":"var regionDecodersState: MutableStateFlow<List<RegionDecoder.Factory>>","description":"com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.regionDecodersState","location":"zoomimage-view/com.github.panpf.zoomimage.view.subsampling/-subsampling-engine/region-decoders-state.html","searchKeys":["regionDecodersState","var regionDecodersState: MutableStateFlow<List<RegionDecoder.Factory>>","com.github.panpf.zoomimage.view.subsampling.SubsamplingEngine.regionDecodersState"]},{"name":"var scrollBar: ScrollBarSpec?","description":"com.github.panpf.zoomimage.ZoomImageView.scrollBar","location":"zoomimage-view/com.github.panpf.zoomimage/-zoom-image-view/scroll-bar.html","searchKeys":["scrollBar","var scrollBar: ScrollBarSpec?","com.github.panpf.zoomimage.ZoomImageView.scrollBar"]},{"name":"Assert","description":"com.github.panpf.zoomimage.util.Logger.Level.Assert","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-level/-assert/index.html","searchKeys":["Assert","Assert","com.github.panpf.zoomimage.util.Logger.Level.Assert"]},{"name":"BOTH","description":"com.github.panpf.zoomimage.zoom.Edge.BOTH","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-edge/-b-o-t-h/index.html","searchKeys":["BOTH","BOTH","com.github.panpf.zoomimage.zoom.Edge.BOTH"]},{"name":"Debug","description":"com.github.panpf.zoomimage.util.Logger.Level.Debug","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-level/-debug/index.html","searchKeys":["Debug","Debug","com.github.panpf.zoomimage.util.Logger.Level.Debug"]},{"name":"END","description":"com.github.panpf.zoomimage.zoom.Edge.END","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-edge/-e-n-d/index.html","searchKeys":["END","END","com.github.panpf.zoomimage.zoom.Edge.END"]},{"name":"Error","description":"com.github.panpf.zoomimage.util.Logger.Level.Error","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-level/-error/index.html","searchKeys":["Error","Error","com.github.panpf.zoomimage.util.Logger.Level.Error"]},{"name":"Info","description":"com.github.panpf.zoomimage.util.Logger.Level.Info","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-level/-info/index.html","searchKeys":["Info","Info","com.github.panpf.zoomimage.util.Logger.Level.Info"]},{"name":"NONE","description":"com.github.panpf.zoomimage.zoom.Edge.NONE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-edge/-n-o-n-e/index.html","searchKeys":["NONE","NONE","com.github.panpf.zoomimage.zoom.Edge.NONE"]},{"name":"START","description":"com.github.panpf.zoomimage.zoom.Edge.START","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-edge/-s-t-a-r-t/index.html","searchKeys":["START","START","com.github.panpf.zoomimage.zoom.Edge.START"]},{"name":"Verbose","description":"com.github.panpf.zoomimage.util.Logger.Level.Verbose","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-level/-verbose/index.html","searchKeys":["Verbose","Verbose","com.github.panpf.zoomimage.util.Logger.Level.Verbose"]},{"name":"Warn","description":"com.github.panpf.zoomimage.util.Logger.Level.Warn","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-level/-warn/index.html","searchKeys":["Warn","Warn","com.github.panpf.zoomimage.util.Logger.Level.Warn"]},{"name":"abstract fun align(size: IntSizeCompat, space: IntSizeCompat, ltrLayout: Boolean): IntOffsetCompat","description":"com.github.panpf.zoomimage.zoom.AlignmentCompat.align","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-alignment-compat/align.html","searchKeys":["align","abstract fun align(size: IntSizeCompat, space: IntSizeCompat, ltrLayout: Boolean): IntOffsetCompat","com.github.panpf.zoomimage.zoom.AlignmentCompat.align"]},{"name":"abstract fun calculate(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, contentScale: ContentScaleCompat, minScale: Float, initialScale: Float): ScalesCalculator.Result","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.calculate","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/calculate.html","searchKeys":["calculate","abstract fun calculate(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, contentScale: ContentScaleCompat, minScale: Float, initialScale: Float): ScalesCalculator.Result","com.github.panpf.zoomimage.zoom.ScalesCalculator.calculate"]},{"name":"abstract fun checkSupport(mimeType: String): Boolean?","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory.checkSupport","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/-factory/check-support.html","searchKeys":["checkSupport","abstract fun checkSupport(mimeType: String): Boolean?","com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory.checkSupport"]},{"name":"abstract fun computeScaleFactor(srcSize: SizeCompat, dstSize: SizeCompat): ScaleFactorCompat","description":"com.github.panpf.zoomimage.zoom.ContentScaleCompat.computeScaleFactor","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-content-scale-compat/compute-scale-factor.html","searchKeys":["computeScaleFactor","abstract fun computeScaleFactor(srcSize: SizeCompat, dstSize: SizeCompat): ScaleFactorCompat","com.github.panpf.zoomimage.zoom.ContentScaleCompat.computeScaleFactor"]},{"name":"abstract fun copy(): RegionDecoder","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.copy","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/copy.html","searchKeys":["copy","abstract fun copy(): RegionDecoder","com.github.panpf.zoomimage.subsampling.RegionDecoder.copy"]},{"name":"abstract fun create(subsamplingImage: SubsamplingImage, imageSource: ImageSource): RegionDecoder","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory.create","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/-factory/create.html","searchKeys":["create","abstract fun create(subsamplingImage: SubsamplingImage, imageSource: ImageSource): RegionDecoder","com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory.create"]},{"name":"abstract fun decodeRegion(key: String, region: IntRectCompat, sampleSize: Int): TileImage","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.decodeRegion","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/decode-region.html","searchKeys":["decodeRegion","abstract fun decodeRegion(key: String, region: IntRectCompat, sampleSize: Int): TileImage","com.github.panpf.zoomimage.subsampling.RegionDecoder.decodeRegion"]},{"name":"abstract fun flush()","description":"com.github.panpf.zoomimage.util.Logger.Pipeline.flush","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-pipeline/flush.html","searchKeys":["flush","abstract fun flush()","com.github.panpf.zoomimage.util.Logger.Pipeline.flush"]},{"name":"abstract fun get(key: String): TileImage?","description":"com.github.panpf.zoomimage.subsampling.TileImageCache.get","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-image-cache/get.html","searchKeys":["get","abstract fun get(key: String): TileImage?","com.github.panpf.zoomimage.subsampling.TileImageCache.get"]},{"name":"abstract fun log(level: Logger.Level, tag: String, msg: String, tr: Throwable?)","description":"com.github.panpf.zoomimage.util.Logger.Pipeline.log","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-pipeline/log.html","searchKeys":["log","abstract fun log(level: Logger.Level, tag: String, msg: String, tr: Throwable?)","com.github.panpf.zoomimage.util.Logger.Pipeline.log"]},{"name":"abstract fun openSource(): Source","description":"com.github.panpf.zoomimage.subsampling.ImageSource.openSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/open-source.html","searchKeys":["openSource","abstract fun openSource(): Source","com.github.panpf.zoomimage.subsampling.ImageSource.openSource"]},{"name":"abstract fun prepare()","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.prepare","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/prepare.html","searchKeys":["prepare","abstract fun prepare()","com.github.panpf.zoomimage.subsampling.RegionDecoder.prepare"]},{"name":"abstract fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","description":"com.github.panpf.zoomimage.subsampling.TileImageCache.put","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-image-cache/put.html","searchKeys":["put","abstract fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","com.github.panpf.zoomimage.subsampling.TileImageCache.put"]},{"name":"abstract fun recycle()","description":"com.github.panpf.zoomimage.subsampling.TileImage.recycle","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-image/recycle.html","searchKeys":["recycle","abstract fun recycle()","com.github.panpf.zoomimage.subsampling.TileImage.recycle"]},{"name":"abstract fun setContentOriginSize(contentOriginSize: IntSizeCompat)","description":"com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge.setContentOriginSize","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-zoomable-bridge/set-content-origin-size.html","searchKeys":["setContentOriginSize","abstract fun setContentOriginSize(contentOriginSize: IntSizeCompat)","com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge.setContentOriginSize"]},{"name":"abstract fun should(contentSize: IntSizeCompat, containerSize: IntSizeCompat): Boolean","description":"com.github.panpf.zoomimage.zoom.ReadMode.Decider.should","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-decider/should.html","searchKeys":["should","abstract fun should(contentSize: IntSizeCompat, containerSize: IntSizeCompat): Boolean","com.github.panpf.zoomimage.zoom.ReadMode.Decider.should"]},{"name":"abstract fun transform(panY: Float): Float","description":"com.github.panpf.zoomimage.zoom.PanToScaleTransformer.transform","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-pan-to-scale-transformer/transform.html","searchKeys":["transform","abstract fun transform(panY: Float): Float","com.github.panpf.zoomimage.zoom.PanToScaleTransformer.transform"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/-factory/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.RegionDecoder.equals"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/-factory/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.RegionDecoder.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/-factory/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.zoomimage.subsampling.RegionDecoder.toString"]},{"name":"abstract suspend fun accept(subsamplingImage: SubsamplingImage): Boolean","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory.accept","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/-factory/accept.html","searchKeys":["accept","abstract suspend fun accept(subsamplingImage: SubsamplingImage): Boolean","com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory.accept"]},{"name":"abstract suspend fun convert(tileImage: TileImage): TileImage","description":"com.github.panpf.zoomimage.subsampling.internal.TileImageConvertor.convert","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-image-convertor/convert.html","searchKeys":["convert","abstract suspend fun convert(tileImage: TileImage): TileImage","com.github.panpf.zoomimage.subsampling.internal.TileImageConvertor.convert"]},{"name":"abstract suspend fun create(): ImageSource","description":"com.github.panpf.zoomimage.subsampling.ImageSource.Factory.create","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/-factory/create.html","searchKeys":["create","abstract suspend fun create(): ImageSource","com.github.panpf.zoomimage.subsampling.ImageSource.Factory.create"]},{"name":"abstract suspend fun startAnimation(animationSpec: BaseZoomAnimationSpec?, onProgress: (progress: Float) -> Unit, onEnd: () -> Unit)","description":"com.github.panpf.zoomimage.zoom.internal.AnimationAdapter.startAnimation","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-animation-adapter/start-animation.html","searchKeys":["startAnimation","abstract suspend fun startAnimation(animationSpec: BaseZoomAnimationSpec?, onProgress: (progress: Float) -> Unit, onEnd: () -> Unit)","com.github.panpf.zoomimage.zoom.internal.AnimationAdapter.startAnimation"]},{"name":"abstract suspend fun startFlingAnimation(startUserOffset: OffsetCompat, userOffsetBounds: RectCompat?, velocity: OffsetCompat, extras: Map<String, Any>, onUpdateValue: (value: OffsetCompat) -> Boolean, onEnd: () -> Unit = {})","description":"com.github.panpf.zoomimage.zoom.internal.AnimationAdapter.startFlingAnimation","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-animation-adapter/start-fling-animation.html","searchKeys":["startFlingAnimation","abstract suspend fun startFlingAnimation(startUserOffset: OffsetCompat, userOffsetBounds: RectCompat?, velocity: OffsetCompat, extras: Map<String, Any>, onUpdateValue: (value: OffsetCompat) -> Boolean, onEnd: () -> Unit = {})","com.github.panpf.zoomimage.zoom.internal.AnimationAdapter.startFlingAnimation"]},{"name":"abstract suspend fun stopAnimation(): Boolean","description":"com.github.panpf.zoomimage.zoom.internal.AnimationAdapter.stopAnimation","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-animation-adapter/stop-animation.html","searchKeys":["stopAnimation","abstract suspend fun stopAnimation(): Boolean","com.github.panpf.zoomimage.zoom.internal.AnimationAdapter.stopAnimation"]},{"name":"abstract suspend fun stopFlingAnimation(): Boolean","description":"com.github.panpf.zoomimage.zoom.internal.AnimationAdapter.stopFlingAnimation","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-animation-adapter/stop-fling-animation.html","searchKeys":["stopFlingAnimation","abstract suspend fun stopFlingAnimation(): Boolean","com.github.panpf.zoomimage.zoom.internal.AnimationAdapter.stopFlingAnimation"]},{"name":"abstract val byteCount: Long","description":"com.github.panpf.zoomimage.subsampling.TileImage.byteCount","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-image/byte-count.html","searchKeys":["byteCount","abstract val byteCount: Long","com.github.panpf.zoomimage.subsampling.TileImage.byteCount"]},{"name":"abstract val contentVisibleRect: RectCompat","description":"com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge.contentVisibleRect","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-zoomable-bridge/content-visible-rect.html","searchKeys":["contentVisibleRect","abstract val contentVisibleRect: RectCompat","com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge.contentVisibleRect"]},{"name":"abstract val continuousTransformType: Int","description":"com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge.continuousTransformType","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-zoomable-bridge/continuous-transform-type.html","searchKeys":["continuousTransformType","abstract val continuousTransformType: Int","com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge.continuousTransformType"]},{"name":"abstract val continuousTransformTypeFlow: Flow<Int>","description":"com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge.continuousTransformTypeFlow","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-zoomable-bridge/continuous-transform-type-flow.html","searchKeys":["continuousTransformTypeFlow","abstract val continuousTransformTypeFlow: Flow<Int>","com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge.continuousTransformTypeFlow"]},{"name":"abstract val durationMillis: Int","description":"com.github.panpf.zoomimage.zoom.BaseZoomAnimationSpec.durationMillis","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-base-zoom-animation-spec/duration-millis.html","searchKeys":["durationMillis","abstract val durationMillis: Int","com.github.panpf.zoomimage.zoom.BaseZoomAnimationSpec.durationMillis"]},{"name":"abstract val fromCache: Boolean","description":"com.github.panpf.zoomimage.subsampling.TileImage.fromCache","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-image/from-cache.html","searchKeys":["fromCache","abstract val fromCache: Boolean","com.github.panpf.zoomimage.subsampling.TileImage.fromCache"]},{"name":"abstract val height: Int","description":"com.github.panpf.zoomimage.subsampling.TileImage.height","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-image/height.html","searchKeys":["height","abstract val height: Int","com.github.panpf.zoomimage.subsampling.TileImage.height"]},{"name":"abstract val imageInfo: ImageInfo","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.imageInfo","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/image-info.html","searchKeys":["imageInfo","abstract val imageInfo: ImageInfo","com.github.panpf.zoomimage.subsampling.RegionDecoder.imageInfo"]},{"name":"abstract val isRecycled: Boolean","description":"com.github.panpf.zoomimage.subsampling.TileImage.isRecycled","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-image/is-recycled.html","searchKeys":["isRecycled","abstract val isRecycled: Boolean","com.github.panpf.zoomimage.subsampling.TileImage.isRecycled"]},{"name":"abstract val key: String","description":"com.github.panpf.zoomimage.subsampling.ImageSource.Factory.key","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/-factory/key.html","searchKeys":["key","abstract val key: String","com.github.panpf.zoomimage.subsampling.ImageSource.Factory.key"]},{"name":"abstract val key: String","description":"com.github.panpf.zoomimage.subsampling.ImageSource.key","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/key.html","searchKeys":["key","abstract val key: String","com.github.panpf.zoomimage.subsampling.ImageSource.key"]},{"name":"abstract val key: String","description":"com.github.panpf.zoomimage.subsampling.TileImage.key","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-image/key.html","searchKeys":["key","abstract val key: String","com.github.panpf.zoomimage.subsampling.TileImage.key"]},{"name":"abstract val subsamplingImage: SubsamplingImage","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.subsamplingImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/subsampling-image.html","searchKeys":["subsamplingImage","abstract val subsamplingImage: SubsamplingImage","com.github.panpf.zoomimage.subsampling.RegionDecoder.subsamplingImage"]},{"name":"abstract val transform: TransformCompat","description":"com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge.transform","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-zoomable-bridge/transform.html","searchKeys":["transform","abstract val transform: TransformCompat","com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge.transform"]},{"name":"abstract val transformFlow: Flow<TransformCompat>","description":"com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge.transformFlow","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-zoomable-bridge/transform-flow.html","searchKeys":["transformFlow","abstract val transformFlow: Flow<TransformCompat>","com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge.transformFlow"]},{"name":"abstract val width: Int","description":"com.github.panpf.zoomimage.subsampling.TileImage.width","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-image/width.html","searchKeys":["width","abstract val width: Int","com.github.panpf.zoomimage.subsampling.TileImage.width"]},{"name":"annotation class ContinuousTransformType","description":"com.github.panpf.zoomimage.zoom.ContinuousTransformType","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-continuous-transform-type/index.html","searchKeys":["ContinuousTransformType","annotation class ContinuousTransformType","com.github.panpf.zoomimage.zoom.ContinuousTransformType"]},{"name":"annotation class GestureType","description":"com.github.panpf.zoomimage.zoom.GestureType","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-gesture-type/index.html","searchKeys":["GestureType","annotation class GestureType","com.github.panpf.zoomimage.zoom.GestureType"]},{"name":"annotation class TileState","description":"com.github.panpf.zoomimage.subsampling.TileState","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-state/index.html","searchKeys":["TileState","annotation class TileState","com.github.panpf.zoomimage.subsampling.TileState"]},{"name":"class AndroidRegionDecoder(val subsamplingImage: <Error class: unknown class>, val imageSource: <Error class: unknown class>, imageInfo: <Error class: unknown class>? = subsamplingImage.imageInfo)","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/index.html","searchKeys":["AndroidRegionDecoder","class AndroidRegionDecoder(val subsamplingImage: <Error class: unknown class>, val imageSource: <Error class: unknown class>, imageInfo: <Error class: unknown class>? = subsamplingImage.imageInfo)","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder"]},{"name":"class AnimationState","description":"com.github.panpf.zoomimage.subsampling.Tile.AnimationState","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/-animation-state/index.html","searchKeys":["AnimationState","class AnimationState","com.github.panpf.zoomimage.subsampling.Tile.AnimationState"]},{"name":"class AssetImageSource(val context: Context, val assetFileName: String)","description":"com.github.panpf.zoomimage.subsampling.AssetImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-asset-image-source/index.html","searchKeys":["AssetImageSource","class AssetImageSource(val context: Context, val assetFileName: String)","com.github.panpf.zoomimage.subsampling.AssetImageSource"]},{"name":"class ByteArrayImageSource(val byteArray: ByteArray) : ImageSource","description":"com.github.panpf.zoomimage.subsampling.ByteArrayImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-byte-array-image-source/index.html","searchKeys":["ByteArrayImageSource","class ByteArrayImageSource(val byteArray: ByteArray) : ImageSource","com.github.panpf.zoomimage.subsampling.ByteArrayImageSource"]},{"name":"class ContentImageSource(val context: Context, val uri: Uri)","description":"com.github.panpf.zoomimage.subsampling.ContentImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-content-image-source/index.html","searchKeys":["ContentImageSource","class ContentImageSource(val context: Context, val uri: Uri)","com.github.panpf.zoomimage.subsampling.ContentImageSource"]},{"name":"class DefaultPanToScaleTransformer(val reference: Int = 200) : PanToScaleTransformer","description":"com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-default-pan-to-scale-transformer/index.html","searchKeys":["DefaultPanToScaleTransformer","class DefaultPanToScaleTransformer(val reference: Int = 200) : PanToScaleTransformer","com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer"]},{"name":"class ExifOrientationHelper(val exifOrientation: Int)","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/index.html","searchKeys":["ExifOrientationHelper","class ExifOrientationHelper(val exifOrientation: Int)","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper"]},{"name":"class Factory","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/-factory/index.html","searchKeys":["Factory","class Factory","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory"]},{"name":"class Factory : RegionDecoder.Factory","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/-factory/index.html","searchKeys":["Factory","class Factory : RegionDecoder.Factory","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory"]},{"name":"class FileImageSource(val path: Path) : ImageSource","description":"com.github.panpf.zoomimage.subsampling.FileImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-file-image-source/index.html","searchKeys":["FileImageSource","class FileImageSource(val path: Path) : ImageSource","com.github.panpf.zoomimage.subsampling.FileImageSource"]},{"name":"class KotlinResourceImageSource(val resourcePath: String)","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[desktop]-kotlin-resource-image-source/index.html","searchKeys":["KotlinResourceImageSource","class KotlinResourceImageSource(val resourcePath: String)","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource"]},{"name":"class KotlinResourceImageSource(val resourcePath: String)","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[ios]-kotlin-resource-image-source/index.html","searchKeys":["KotlinResourceImageSource","class KotlinResourceImageSource(val resourcePath: String)","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource"]},{"name":"class Logger(val tag: String, level: Logger.Level = Level.Info, var pipeline: Logger.Pipeline = defaultLogPipeline())","description":"com.github.panpf.zoomimage.util.Logger","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/index.html","searchKeys":["Logger","class Logger(val tag: String, level: Logger.Level = Level.Info, var pipeline: Logger.Pipeline = defaultLogPipeline())","com.github.panpf.zoomimage.util.Logger"]},{"name":"class LongImageDecider(val sameDirectionMultiple: Float = 2.5f, val notSameDirectionMultiple: Float = 5.0f) : ReadMode.Decider","description":"com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-long-image-decider/index.html","searchKeys":["LongImageDecider","class LongImageDecider(val sameDirectionMultiple: Float = 2.5f, val notSameDirectionMultiple: Float = 5.0f) : ReadMode.Decider","com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider"]},{"name":"class ResetParamsDiffResult(val result: Int)","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/index.html","searchKeys":["ResetParamsDiffResult","class ResetParamsDiffResult(val result: Int)","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult"]},{"name":"class ResourceImageSource(val resources: Resources, val resId: Int)","description":"com.github.panpf.zoomimage.subsampling.ResourceImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-resource-image-source/index.html","searchKeys":["ResourceImageSource","class ResourceImageSource(val resources: Resources, val resId: Int)","com.github.panpf.zoomimage.subsampling.ResourceImageSource"]},{"name":"class SkiaRegionDecoder(val subsamplingImage: SubsamplingImage, val imageSource: ImageSource, imageInfo: ImageInfo? = subsamplingImage.imageInfo, bytes: ByteArray? = null) : RegionDecoder","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/index.html","searchKeys":["SkiaRegionDecoder","class SkiaRegionDecoder(val subsamplingImage: SubsamplingImage, val imageSource: ImageSource, imageInfo: ImageInfo? = subsamplingImage.imageInfo, bytes: ByteArray? = null) : RegionDecoder","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder"]},{"name":"class SubsamplingCore(val module: String, val logger: Logger, val tileImageConvertor: TileImageConvertor?, val zoomableCore: ZoomableBridge, val onReadyChanged: (SubsamplingCore) -> Unit, val onTileChanged: (SubsamplingCore) -> Unit)","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/index.html","searchKeys":["SubsamplingCore","class SubsamplingCore(val module: String, val logger: Logger, val tileImageConvertor: TileImageConvertor?, val zoomableCore: ZoomableBridge, val onReadyChanged: (SubsamplingCore) -> Unit, val onTileChanged: (SubsamplingCore) -> Unit)","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore"]},{"name":"class Tile(val coordinate: IntOffsetCompat, val srcRect: IntRectCompat, val sampleSize: Int)","description":"com.github.panpf.zoomimage.subsampling.Tile","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/index.html","searchKeys":["Tile","class Tile(val coordinate: IntOffsetCompat, val srcRect: IntRectCompat, val sampleSize: Int)","com.github.panpf.zoomimage.subsampling.Tile"]},{"name":"class TileDecoder(val logger: Logger, regionDecoder: RegionDecoder) : AutoCloseable","description":"com.github.panpf.zoomimage.subsampling.internal.TileDecoder","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-decoder/index.html","searchKeys":["TileDecoder","class TileDecoder(val logger: Logger, regionDecoder: RegionDecoder) : AutoCloseable","com.github.panpf.zoomimage.subsampling.internal.TileDecoder"]},{"name":"class TileImageCacheHelper","description":"com.github.panpf.zoomimage.subsampling.internal.TileImageCacheHelper","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-image-cache-helper/index.html","searchKeys":["TileImageCacheHelper","class TileImageCacheHelper","com.github.panpf.zoomimage.subsampling.internal.TileImageCacheHelper"]},{"name":"class TileManager(logger: Logger, subsamplingImage: SubsamplingImage, tileDecoder: TileDecoder, tileImageConvertor: TileImageConvertor?, tileImageCacheHelper: TileImageCacheHelper, imageInfo: ImageInfo, contentSize: IntSizeCompat, preferredTileSize: IntSizeCompat, onTileChanged: (tileManager: TileManager) -> Unit, onSampleSizeChanged: (tileManager: TileManager) -> Unit, onImageLoadRectChanged: (tileManager: TileManager) -> Unit)","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/index.html","searchKeys":["TileManager","class TileManager(logger: Logger, subsamplingImage: SubsamplingImage, tileDecoder: TileDecoder, tileImageConvertor: TileImageConvertor?, tileImageCacheHelper: TileImageCacheHelper, imageInfo: ImageInfo, contentSize: IntSizeCompat, preferredTileSize: IntSizeCompat, onTileChanged: (tileManager: TileManager) -> Unit, onSampleSizeChanged: (tileManager: TileManager) -> Unit, onImageLoadRectChanged: (tileManager: TileManager) -> Unit)","com.github.panpf.zoomimage.subsampling.internal.TileManager"]},{"name":"class WrapperFactory(val imageSource: ImageSource) : ImageSource.Factory","description":"com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/-wrapper-factory/index.html","searchKeys":["WrapperFactory","class WrapperFactory(val imageSource: ImageSource) : ImageSource.Factory","com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory"]},{"name":"class ZoomableCore(val logger: Logger, val module: String, val rtlLayoutDirection: Boolean, val animationAdapter: AnimationAdapter, val onTransformChanged: (zoomableCore: ZoomableCore) -> Unit)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/index.html","searchKeys":["ZoomableCore","class ZoomableCore(val logger: Logger, val module: String, val rtlLayoutDirection: Boolean, val animationAdapter: AnimationAdapter, val onTransformChanged: (zoomableCore: ZoomableCore) -> Unit)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore"]},{"name":"const val DEFAULT_DURATION: Long = 200","description":"com.github.panpf.zoomimage.subsampling.TileAnimationSpec.Companion.DEFAULT_DURATION","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-animation-spec/-companion/-d-e-f-a-u-l-t_-d-u-r-a-t-i-o-n.html","searchKeys":["DEFAULT_DURATION","const val DEFAULT_DURATION: Long = 200","com.github.panpf.zoomimage.subsampling.TileAnimationSpec.Companion.DEFAULT_DURATION"]},{"name":"const val DEFAULT_INTERVAL: Long = 8","description":"com.github.panpf.zoomimage.subsampling.TileAnimationSpec.Companion.DEFAULT_INTERVAL","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-animation-spec/-companion/-d-e-f-a-u-l-t_-i-n-t-e-r-v-a-l.html","searchKeys":["DEFAULT_INTERVAL","const val DEFAULT_INTERVAL: Long = 8","com.github.panpf.zoomimage.subsampling.TileAnimationSpec.Companion.DEFAULT_INTERVAL"]},{"name":"const val DOUBLE_TAP_SCALE: Int = 8","description":"com.github.panpf.zoomimage.zoom.GestureType.Companion.DOUBLE_TAP_SCALE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-gesture-type/-companion/-d-o-u-b-l-e_-t-a-p_-s-c-a-l-e.html","searchKeys":["DOUBLE_TAP_SCALE","const val DOUBLE_TAP_SCALE: Int = 8","com.github.panpf.zoomimage.zoom.GestureType.Companion.DOUBLE_TAP_SCALE"]},{"name":"const val DefaultPausedContinuousTransformTypes: Int","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager.Companion.DefaultPausedContinuousTransformTypes","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/-companion/-default-paused-continuous-transform-types.html","searchKeys":["DefaultPausedContinuousTransformTypes","const val DefaultPausedContinuousTransformTypes: Int","com.github.panpf.zoomimage.subsampling.internal.TileManager.Companion.DefaultPausedContinuousTransformTypes"]},{"name":"const val FLAG_ALIGNMENT: Int = 32","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_ALIGNMENT","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/-companion/-f-l-a-g_-a-l-i-g-n-m-e-n-t.html","searchKeys":["FLAG_ALIGNMENT","const val FLAG_ALIGNMENT: Int = 32","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_ALIGNMENT"]},{"name":"const val FLAG_CONTAINER_SIZE: Int = 1","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_CONTAINER_SIZE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/-companion/-f-l-a-g_-c-o-n-t-a-i-n-e-r_-s-i-z-e.html","searchKeys":["FLAG_CONTAINER_SIZE","const val FLAG_CONTAINER_SIZE: Int = 1","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_CONTAINER_SIZE"]},{"name":"const val FLAG_CONTAINER_WHITESPACE: Int = 1024","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_CONTAINER_WHITESPACE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/-companion/-f-l-a-g_-c-o-n-t-a-i-n-e-r_-w-h-i-t-e-s-p-a-c-e.html","searchKeys":["FLAG_CONTAINER_WHITESPACE","const val FLAG_CONTAINER_WHITESPACE: Int = 1024","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_CONTAINER_WHITESPACE"]},{"name":"const val FLAG_CONTAINER_WHITESPACE_MULTIPLE: Int = 512","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_CONTAINER_WHITESPACE_MULTIPLE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/-companion/-f-l-a-g_-c-o-n-t-a-i-n-e-r_-w-h-i-t-e-s-p-a-c-e_-m-u-l-t-i-p-l-e.html","searchKeys":["FLAG_CONTAINER_WHITESPACE_MULTIPLE","const val FLAG_CONTAINER_WHITESPACE_MULTIPLE: Int = 512","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_CONTAINER_WHITESPACE_MULTIPLE"]},{"name":"const val FLAG_CONTENT_ORIGIN_SIZE: Int = 4","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_CONTENT_ORIGIN_SIZE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/-companion/-f-l-a-g_-c-o-n-t-e-n-t_-o-r-i-g-i-n_-s-i-z-e.html","searchKeys":["FLAG_CONTENT_ORIGIN_SIZE","const val FLAG_CONTENT_ORIGIN_SIZE: Int = 4","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_CONTENT_ORIGIN_SIZE"]},{"name":"const val FLAG_CONTENT_SCALE: Int = 16","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_CONTENT_SCALE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/-companion/-f-l-a-g_-c-o-n-t-e-n-t_-s-c-a-l-e.html","searchKeys":["FLAG_CONTENT_SCALE","const val FLAG_CONTENT_SCALE: Int = 16","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_CONTENT_SCALE"]},{"name":"const val FLAG_CONTENT_SIZE: Int = 2","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_CONTENT_SIZE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/-companion/-f-l-a-g_-c-o-n-t-e-n-t_-s-i-z-e.html","searchKeys":["FLAG_CONTENT_SIZE","const val FLAG_CONTENT_SIZE: Int = 2","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_CONTENT_SIZE"]},{"name":"const val FLAG_LIMIT_OFFSET_WITHIN_BASE_VISIBLE_RECT: Int = 256","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_LIMIT_OFFSET_WITHIN_BASE_VISIBLE_RECT","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/-companion/-f-l-a-g_-l-i-m-i-t_-o-f-f-s-e-t_-w-i-t-h-i-n_-b-a-s-e_-v-i-s-i-b-l-e_-r-e-c-t.html","searchKeys":["FLAG_LIMIT_OFFSET_WITHIN_BASE_VISIBLE_RECT","const val FLAG_LIMIT_OFFSET_WITHIN_BASE_VISIBLE_RECT: Int = 256","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_LIMIT_OFFSET_WITHIN_BASE_VISIBLE_RECT"]},{"name":"const val FLAG_READ_MODE: Int = 64","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_READ_MODE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/-companion/-f-l-a-g_-r-e-a-d_-m-o-d-e.html","searchKeys":["FLAG_READ_MODE","const val FLAG_READ_MODE: Int = 64","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_READ_MODE"]},{"name":"const val FLAG_ROTATION: Int = 8","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_ROTATION","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/-companion/-f-l-a-g_-r-o-t-a-t-i-o-n.html","searchKeys":["FLAG_ROTATION","const val FLAG_ROTATION: Int = 8","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_ROTATION"]},{"name":"const val FLAG_SCALES_CALCULATOR: Int = 128","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_SCALES_CALCULATOR","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/-companion/-f-l-a-g_-s-c-a-l-e-s_-c-a-l-c-u-l-a-t-o-r.html","searchKeys":["FLAG_SCALES_CALCULATOR","const val FLAG_SCALES_CALCULATOR: Int = 128","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion.FLAG_SCALES_CALCULATOR"]},{"name":"const val FLING: Int = 16","description":"com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.FLING","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-continuous-transform-type/-companion/-f-l-i-n-g.html","searchKeys":["FLING","const val FLING: Int = 16","com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.FLING"]},{"name":"const val GESTURE: Int = 8","description":"com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.GESTURE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-continuous-transform-type/-companion/-g-e-s-t-u-r-e.html","searchKeys":["GESTURE","const val GESTURE: Int = 8","com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.GESTURE"]},{"name":"const val KEYBOARD_DRAG: Int = 64","description":"com.github.panpf.zoomimage.zoom.GestureType.Companion.KEYBOARD_DRAG","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-gesture-type/-companion/-k-e-y-b-o-a-r-d_-d-r-a-g.html","searchKeys":["KEYBOARD_DRAG","const val KEYBOARD_DRAG: Int = 64","com.github.panpf.zoomimage.zoom.GestureType.Companion.KEYBOARD_DRAG"]},{"name":"const val KEYBOARD_SCALE: Int = 32","description":"com.github.panpf.zoomimage.zoom.GestureType.Companion.KEYBOARD_SCALE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-gesture-type/-companion/-k-e-y-b-o-a-r-d_-s-c-a-l-e.html","searchKeys":["KEYBOARD_SCALE","const val KEYBOARD_SCALE: Int = 32","com.github.panpf.zoomimage.zoom.GestureType.Companion.KEYBOARD_SCALE"]},{"name":"const val LOCATE: Int = 4","description":"com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.LOCATE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-continuous-transform-type/-companion/-l-o-c-a-t-e.html","searchKeys":["LOCATE","const val LOCATE: Int = 4","com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.LOCATE"]},{"name":"const val MOUSE_WHEEL_SCALE: Int = 16","description":"com.github.panpf.zoomimage.zoom.GestureType.Companion.MOUSE_WHEEL_SCALE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-gesture-type/-companion/-m-o-u-s-e_-w-h-e-e-l_-s-c-a-l-e.html","searchKeys":["MOUSE_WHEEL_SCALE","const val MOUSE_WHEEL_SCALE: Int = 16","com.github.panpf.zoomimage.zoom.GestureType.Companion.MOUSE_WHEEL_SCALE"]},{"name":"const val MULTIPLE: Float = 3.0f","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.Companion.MULTIPLE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/-companion/-m-u-l-t-i-p-l-e.html","searchKeys":["MULTIPLE","const val MULTIPLE: Float = 3.0f","com.github.panpf.zoomimage.zoom.ScalesCalculator.Companion.MULTIPLE"]},{"name":"const val OFFSET: Int = 2","description":"com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.OFFSET","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-continuous-transform-type/-companion/-o-f-f-s-e-t.html","searchKeys":["OFFSET","const val OFFSET: Int = 2","com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.OFFSET"]},{"name":"const val ONE_FINGER_DRAG: Int = 1","description":"com.github.panpf.zoomimage.zoom.GestureType.Companion.ONE_FINGER_DRAG","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-gesture-type/-companion/-o-n-e_-f-i-n-g-e-r_-d-r-a-g.html","searchKeys":["ONE_FINGER_DRAG","const val ONE_FINGER_DRAG: Int = 1","com.github.panpf.zoomimage.zoom.GestureType.Companion.ONE_FINGER_DRAG"]},{"name":"const val ONE_FINGER_SCALE: Int = 4","description":"com.github.panpf.zoomimage.zoom.GestureType.Companion.ONE_FINGER_SCALE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-gesture-type/-companion/-o-n-e_-f-i-n-g-e-r_-s-c-a-l-e.html","searchKeys":["ONE_FINGER_SCALE","const val ONE_FINGER_SCALE: Int = 4","com.github.panpf.zoomimage.zoom.GestureType.Companion.ONE_FINGER_SCALE"]},{"name":"const val ORIENTATION_FLIP_HORIZONTAL: Int = 2","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_FLIP_HORIZONTAL","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/-companion/-o-r-i-e-n-t-a-t-i-o-n_-f-l-i-p_-h-o-r-i-z-o-n-t-a-l.html","searchKeys":["ORIENTATION_FLIP_HORIZONTAL","const val ORIENTATION_FLIP_HORIZONTAL: Int = 2","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_FLIP_HORIZONTAL"]},{"name":"const val ORIENTATION_FLIP_VERTICAL: Int = 4","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_FLIP_VERTICAL","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/-companion/-o-r-i-e-n-t-a-t-i-o-n_-f-l-i-p_-v-e-r-t-i-c-a-l.html","searchKeys":["ORIENTATION_FLIP_VERTICAL","const val ORIENTATION_FLIP_VERTICAL: Int = 4","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_FLIP_VERTICAL"]},{"name":"const val ORIENTATION_NORMAL: Int = 1","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_NORMAL","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/-companion/-o-r-i-e-n-t-a-t-i-o-n_-n-o-r-m-a-l.html","searchKeys":["ORIENTATION_NORMAL","const val ORIENTATION_NORMAL: Int = 1","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_NORMAL"]},{"name":"const val ORIENTATION_ROTATE_180: Int = 3","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_ROTATE_180","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/-companion/-o-r-i-e-n-t-a-t-i-o-n_-r-o-t-a-t-e_180.html","searchKeys":["ORIENTATION_ROTATE_180","const val ORIENTATION_ROTATE_180: Int = 3","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_ROTATE_180"]},{"name":"const val ORIENTATION_ROTATE_270: Int = 8","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_ROTATE_270","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/-companion/-o-r-i-e-n-t-a-t-i-o-n_-r-o-t-a-t-e_270.html","searchKeys":["ORIENTATION_ROTATE_270","const val ORIENTATION_ROTATE_270: Int = 8","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_ROTATE_270"]},{"name":"const val ORIENTATION_ROTATE_90: Int = 6","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_ROTATE_90","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/-companion/-o-r-i-e-n-t-a-t-i-o-n_-r-o-t-a-t-e_90.html","searchKeys":["ORIENTATION_ROTATE_90","const val ORIENTATION_ROTATE_90: Int = 6","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_ROTATE_90"]},{"name":"const val ORIENTATION_TRANSPOSE: Int = 5","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_TRANSPOSE","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/-companion/-o-r-i-e-n-t-a-t-i-o-n_-t-r-a-n-s-p-o-s-e.html","searchKeys":["ORIENTATION_TRANSPOSE","const val ORIENTATION_TRANSPOSE: Int = 5","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_TRANSPOSE"]},{"name":"const val ORIENTATION_TRANSVERSE: Int = 7","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_TRANSVERSE","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/-companion/-o-r-i-e-n-t-a-t-i-o-n_-t-r-a-n-s-v-e-r-s-e.html","searchKeys":["ORIENTATION_TRANSVERSE","const val ORIENTATION_TRANSVERSE: Int = 7","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_TRANSVERSE"]},{"name":"const val ORIENTATION_UNDEFINED: Int = 0","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_UNDEFINED","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/-companion/-o-r-i-e-n-t-a-t-i-o-n_-u-n-d-e-f-i-n-e-d.html","searchKeys":["ORIENTATION_UNDEFINED","const val ORIENTATION_UNDEFINED: Int = 0","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.ORIENTATION_UNDEFINED"]},{"name":"const val SCALE: Int = 1","description":"com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.SCALE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-continuous-transform-type/-companion/-s-c-a-l-e.html","searchKeys":["SCALE","const val SCALE: Int = 1","com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.SCALE"]},{"name":"const val SIZE_TYPE_HORIZONTAL: Int = 1","description":"com.github.panpf.zoomimage.zoom.ReadMode.Companion.SIZE_TYPE_HORIZONTAL","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-companion/-s-i-z-e_-t-y-p-e_-h-o-r-i-z-o-n-t-a-l.html","searchKeys":["SIZE_TYPE_HORIZONTAL","const val SIZE_TYPE_HORIZONTAL: Int = 1","com.github.panpf.zoomimage.zoom.ReadMode.Companion.SIZE_TYPE_HORIZONTAL"]},{"name":"const val SIZE_TYPE_VERTICAL: Int = 2","description":"com.github.panpf.zoomimage.zoom.ReadMode.Companion.SIZE_TYPE_VERTICAL","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-companion/-s-i-z-e_-t-y-p-e_-v-e-r-t-i-c-a-l.html","searchKeys":["SIZE_TYPE_VERTICAL","const val SIZE_TYPE_VERTICAL: Int = 2","com.github.panpf.zoomimage.zoom.ReadMode.Companion.SIZE_TYPE_VERTICAL"]},{"name":"const val STATE_ERROR: Int = 3","description":"com.github.panpf.zoomimage.subsampling.TileState.Companion.STATE_ERROR","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-state/-companion/-s-t-a-t-e_-e-r-r-o-r.html","searchKeys":["STATE_ERROR","const val STATE_ERROR: Int = 3","com.github.panpf.zoomimage.subsampling.TileState.Companion.STATE_ERROR"]},{"name":"const val STATE_LOADED: Int = 2","description":"com.github.panpf.zoomimage.subsampling.TileState.Companion.STATE_LOADED","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-state/-companion/-s-t-a-t-e_-l-o-a-d-e-d.html","searchKeys":["STATE_LOADED","const val STATE_LOADED: Int = 2","com.github.panpf.zoomimage.subsampling.TileState.Companion.STATE_LOADED"]},{"name":"const val STATE_LOADING: Int = 1","description":"com.github.panpf.zoomimage.subsampling.TileState.Companion.STATE_LOADING","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-state/-companion/-s-t-a-t-e_-l-o-a-d-i-n-g.html","searchKeys":["STATE_LOADING","const val STATE_LOADING: Int = 1","com.github.panpf.zoomimage.subsampling.TileState.Companion.STATE_LOADING"]},{"name":"const val STATE_NONE: Int = 0","description":"com.github.panpf.zoomimage.subsampling.TileState.Companion.STATE_NONE","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-state/-companion/-s-t-a-t-e_-n-o-n-e.html","searchKeys":["STATE_NONE","const val STATE_NONE: Int = 0","com.github.panpf.zoomimage.subsampling.TileState.Companion.STATE_NONE"]},{"name":"const val TILE_COLOR_GREEN: Int","description":"com.github.panpf.zoomimage.subsampling.TILE_COLOR_GREEN","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-t-i-l-e_-c-o-l-o-r_-g-r-e-e-n.html","searchKeys":["TILE_COLOR_GREEN","const val TILE_COLOR_GREEN: Int","com.github.panpf.zoomimage.subsampling.TILE_COLOR_GREEN"]},{"name":"const val TILE_COLOR_LIGHT_GRAY: Int","description":"com.github.panpf.zoomimage.subsampling.TILE_COLOR_LIGHT_GRAY","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-t-i-l-e_-c-o-l-o-r_-l-i-g-h-t_-g-r-a-y.html","searchKeys":["TILE_COLOR_LIGHT_GRAY","const val TILE_COLOR_LIGHT_GRAY: Int","com.github.panpf.zoomimage.subsampling.TILE_COLOR_LIGHT_GRAY"]},{"name":"const val TILE_COLOR_RED: Int","description":"com.github.panpf.zoomimage.subsampling.TILE_COLOR_RED","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-t-i-l-e_-c-o-l-o-r_-r-e-d.html","searchKeys":["TILE_COLOR_RED","const val TILE_COLOR_RED: Int","com.github.panpf.zoomimage.subsampling.TILE_COLOR_RED"]},{"name":"const val TILE_COLOR_SKY_BLUE: Int","description":"com.github.panpf.zoomimage.subsampling.TILE_COLOR_SKY_BLUE","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-t-i-l-e_-c-o-l-o-r_-s-k-y_-b-l-u-e.html","searchKeys":["TILE_COLOR_SKY_BLUE","const val TILE_COLOR_SKY_BLUE: Int","com.github.panpf.zoomimage.subsampling.TILE_COLOR_SKY_BLUE"]},{"name":"const val TILE_COLOR_YELLOW: Int","description":"com.github.panpf.zoomimage.subsampling.TILE_COLOR_YELLOW","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-t-i-l-e_-c-o-l-o-r_-y-e-l-l-o-w.html","searchKeys":["TILE_COLOR_YELLOW","const val TILE_COLOR_YELLOW: Int","com.github.panpf.zoomimage.subsampling.TILE_COLOR_YELLOW"]},{"name":"const val TWO_FINGER_SCALE: Int = 2","description":"com.github.panpf.zoomimage.zoom.GestureType.Companion.TWO_FINGER_SCALE","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-gesture-type/-companion/-t-w-o_-f-i-n-g-e-r_-s-c-a-l-e.html","searchKeys":["TWO_FINGER_SCALE","const val TWO_FINGER_SCALE: Int = 2","com.github.panpf.zoomimage.zoom.GestureType.Companion.TWO_FINGER_SCALE"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.subsampling.Tile.AnimationState.AnimationState","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/-animation-state/-animation-state.html","searchKeys":["AnimationState","constructor()","com.github.panpf.zoomimage.subsampling.Tile.AnimationState.AnimationState"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.Factory","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.Factory","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.subsampling.internal.TileImageCacheHelper.TileImageCacheHelper","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-image-cache-helper/-tile-image-cache-helper.html","searchKeys":["TileImageCacheHelper","constructor()","com.github.panpf.zoomimage.subsampling.internal.TileImageCacheHelper.TileImageCacheHelper"]},{"name":"constructor(bitmap: TileBitmap, key: String, fromCache: Boolean)","description":"com.github.panpf.zoomimage.subsampling.BitmapTileImage.BitmapTileImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-bitmap-tile-image/-bitmap-tile-image.html","searchKeys":["BitmapTileImage","constructor(bitmap: TileBitmap, key: String, fromCache: Boolean)","com.github.panpf.zoomimage.subsampling.BitmapTileImage.BitmapTileImage"]},{"name":"constructor(byteArray: ByteArray)","description":"com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.ByteArrayImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-byte-array-image-source/-byte-array-image-source.html","searchKeys":["ByteArrayImageSource","constructor(byteArray: ByteArray)","com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.ByteArrayImageSource"]},{"name":"constructor(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, rotation: Int, contentScale: ContentScaleCompat, alignment: AlignmentCompat, readMode: ReadMode?, scalesCalculator: ScalesCalculator, limitOffsetWithinBaseVisibleRect: Boolean, containerWhitespaceMultiple: Float, containerWhitespace: ContainerWhitespace)","description":"com.github.panpf.zoomimage.zoom.internal.ResetParams.ResetParams","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params/-reset-params.html","searchKeys":["ResetParams","constructor(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, rotation: Int, contentScale: ContentScaleCompat, alignment: AlignmentCompat, readMode: ReadMode?, scalesCalculator: ScalesCalculator, limitOffsetWithinBaseVisibleRect: Boolean, containerWhitespaceMultiple: Float, containerWhitespace: ContainerWhitespace)","com.github.panpf.zoomimage.zoom.internal.ResetParams.ResetParams"]},{"name":"constructor(context: Context, assetFileName: String)","description":"com.github.panpf.zoomimage.subsampling.AssetImageSource.AssetImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-asset-image-source/-asset-image-source.html","searchKeys":["AssetImageSource","constructor(context: Context, assetFileName: String)","com.github.panpf.zoomimage.subsampling.AssetImageSource.AssetImageSource"]},{"name":"constructor(context: Context, drawableId: Int)","description":"com.github.panpf.zoomimage.subsampling.ResourceImageSource.ResourceImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-resource-image-source/-resource-image-source.html","searchKeys":["ResourceImageSource","constructor(context: Context, drawableId: Int)","com.github.panpf.zoomimage.subsampling.ResourceImageSource.ResourceImageSource"]},{"name":"constructor(context: Context, uri: Uri)","description":"com.github.panpf.zoomimage.subsampling.ContentImageSource.ContentImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-content-image-source/-content-image-source.html","searchKeys":["ContentImageSource","constructor(context: Context, uri: Uri)","com.github.panpf.zoomimage.subsampling.ContentImageSource.ContentImageSource"]},{"name":"constructor(coordinate: IntOffsetCompat, srcRect: IntRectCompat, sampleSize: Int)","description":"com.github.panpf.zoomimage.subsampling.Tile.Tile","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/-tile.html","searchKeys":["Tile","constructor(coordinate: IntOffsetCompat, srcRect: IntRectCompat, sampleSize: Int)","com.github.panpf.zoomimage.subsampling.Tile.Tile"]},{"name":"constructor(coordinate: IntOffsetCompat, srcRect: IntRectCompat, sampleSize: Int, tileImage: TileImage?, state: Int, alpha: Int)","description":"com.github.panpf.zoomimage.subsampling.TileSnapshot.TileSnapshot","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-snapshot/-tile-snapshot.html","searchKeys":["TileSnapshot","constructor(coordinate: IntOffsetCompat, srcRect: IntRectCompat, sampleSize: Int, tileImage: TileImage?, state: Int, alpha: Int)","com.github.panpf.zoomimage.subsampling.TileSnapshot.TileSnapshot"]},{"name":"constructor(duration: Long = DEFAULT_DURATION, interval: Long = DEFAULT_INTERVAL)","description":"com.github.panpf.zoomimage.subsampling.TileAnimationSpec.TileAnimationSpec","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-animation-spec/-tile-animation-spec.html","searchKeys":["TileAnimationSpec","constructor(duration: Long = DEFAULT_DURATION, interval: Long = DEFAULT_INTERVAL)","com.github.panpf.zoomimage.subsampling.TileAnimationSpec.TileAnimationSpec"]},{"name":"constructor(exifOrientation: Int)","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.ExifOrientationHelper","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/-exif-orientation-helper.html","searchKeys":["ExifOrientationHelper","constructor(exifOrientation: Int)","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.ExifOrientationHelper"]},{"name":"constructor(horizontal: Edge, vertical: Edge)","description":"com.github.panpf.zoomimage.zoom.ScrollEdge.ScrollEdge","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scroll-edge/-scroll-edge.html","searchKeys":["ScrollEdge","constructor(horizontal: Edge, vertical: Edge)","com.github.panpf.zoomimage.zoom.ScrollEdge.ScrollEdge"]},{"name":"constructor(horizontal: Float, vertical: Float)","description":"com.github.panpf.zoomimage.zoom.ContainerWhitespace.ContainerWhitespace","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-container-whitespace/-container-whitespace.html","searchKeys":["ContainerWhitespace","constructor(horizontal: Float, vertical: Float)","com.github.panpf.zoomimage.zoom.ContainerWhitespace.ContainerWhitespace"]},{"name":"constructor(horizontalBias: Float, verticalBias: Float)","description":"com.github.panpf.zoomimage.zoom.BiasAlignmentCompat.BiasAlignmentCompat","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-bias-alignment-compat/-bias-alignment-compat.html","searchKeys":["BiasAlignmentCompat","constructor(horizontalBias: Float, verticalBias: Float)","com.github.panpf.zoomimage.zoom.BiasAlignmentCompat.BiasAlignmentCompat"]},{"name":"constructor(imageSource: ImageSource)","description":"com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.WrapperFactory","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/-wrapper-factory/-wrapper-factory.html","searchKeys":["WrapperFactory","constructor(imageSource: ImageSource)","com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.WrapperFactory"]},{"name":"constructor(imageSource: ImageSource, imageInfo: ImageInfo? = null)","description":"com.github.panpf.zoomimage.subsampling.SubsamplingImage.SubsamplingImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-subsampling-image/-subsampling-image.html","searchKeys":["SubsamplingImage","constructor(imageSource: ImageSource, imageInfo: ImageInfo? = null)","com.github.panpf.zoomimage.subsampling.SubsamplingImage.SubsamplingImage"]},{"name":"constructor(imageSource: ImageSource.Factory, imageInfo: ImageInfo? = null)","description":"com.github.panpf.zoomimage.subsampling.SubsamplingImage.SubsamplingImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-subsampling-image/-subsampling-image.html","searchKeys":["SubsamplingImage","constructor(imageSource: ImageSource.Factory, imageInfo: ImageInfo? = null)","com.github.panpf.zoomimage.subsampling.SubsamplingImage.SubsamplingImage"]},{"name":"constructor(left: Float, top: Float, right: Float, bottom: Float)","description":"com.github.panpf.zoomimage.util.RectCompat.RectCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/-rect-compat.html","searchKeys":["RectCompat","constructor(left: Float, top: Float, right: Float, bottom: Float)","com.github.panpf.zoomimage.util.RectCompat.RectCompat"]},{"name":"constructor(left: Float, top: Float, right: Float, bottom: Float)","description":"com.github.panpf.zoomimage.zoom.ContainerWhitespace.ContainerWhitespace","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-container-whitespace/-container-whitespace.html","searchKeys":["ContainerWhitespace","constructor(left: Float, top: Float, right: Float, bottom: Float)","com.github.panpf.zoomimage.zoom.ContainerWhitespace.ContainerWhitespace"]},{"name":"constructor(left: Int, top: Int, right: Int, bottom: Int)","description":"com.github.panpf.zoomimage.util.IntRectCompat.IntRectCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/-int-rect-compat.html","searchKeys":["IntRectCompat","constructor(left: Int, top: Int, right: Int, bottom: Int)","com.github.panpf.zoomimage.util.IntRectCompat.IntRectCompat"]},{"name":"constructor(logger: Logger, module: String, rtlLayoutDirection: Boolean, animationAdapter: AnimationAdapter, onTransformChanged: (zoomableCore: ZoomableCore) -> Unit)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.ZoomableCore","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/-zoomable-core.html","searchKeys":["ZoomableCore","constructor(logger: Logger, module: String, rtlLayoutDirection: Boolean, animationAdapter: AnimationAdapter, onTransformChanged: (zoomableCore: ZoomableCore) -> Unit)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.ZoomableCore"]},{"name":"constructor(logger: Logger, regionDecoder: RegionDecoder)","description":"com.github.panpf.zoomimage.subsampling.internal.TileDecoder.TileDecoder","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-decoder/-tile-decoder.html","searchKeys":["TileDecoder","constructor(logger: Logger, regionDecoder: RegionDecoder)","com.github.panpf.zoomimage.subsampling.internal.TileDecoder.TileDecoder"]},{"name":"constructor(logger: Logger, subsamplingImage: SubsamplingImage, tileDecoder: TileDecoder, tileImageConvertor: TileImageConvertor?, tileImageCacheHelper: TileImageCacheHelper, imageInfo: ImageInfo, contentSize: IntSizeCompat, preferredTileSize: IntSizeCompat, onTileChanged: (tileManager: TileManager) -> Unit, onSampleSizeChanged: (tileManager: TileManager) -> Unit, onImageLoadRectChanged: (tileManager: TileManager) -> Unit)","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager.TileManager","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/-tile-manager.html","searchKeys":["TileManager","constructor(logger: Logger, subsamplingImage: SubsamplingImage, tileDecoder: TileDecoder, tileImageConvertor: TileImageConvertor?, tileImageCacheHelper: TileImageCacheHelper, imageInfo: ImageInfo, contentSize: IntSizeCompat, preferredTileSize: IntSizeCompat, onTileChanged: (tileManager: TileManager) -> Unit, onSampleSizeChanged: (tileManager: TileManager) -> Unit, onImageLoadRectChanged: (tileManager: TileManager) -> Unit)","com.github.panpf.zoomimage.subsampling.internal.TileManager.TileManager"]},{"name":"constructor(message: String)","description":"com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult.Error.Error","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-subsampling-image-generate-result/-error/-error.html","searchKeys":["Error","constructor(message: String)","com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult.Error.Error"]},{"name":"constructor(minScale: Float, mediumScale: Float, maxScale: Float)","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.Result.Result","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/-result/-result.html","searchKeys":["Result","constructor(minScale: Float, mediumScale: Float, maxScale: Float)","com.github.panpf.zoomimage.zoom.ScalesCalculator.Result.Result"]},{"name":"constructor(minScale: Float, mediumScale: Float, maxScale: Float, baseTransform: TransformCompat, userTransform: TransformCompat)","description":"com.github.panpf.zoomimage.zoom.internal.InitialZoom.InitialZoom","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-initial-zoom/-initial-zoom.html","searchKeys":["InitialZoom","constructor(minScale: Float, mediumScale: Float, maxScale: Float, baseTransform: TransformCompat, userTransform: TransformCompat)","com.github.panpf.zoomimage.zoom.internal.InitialZoom.InitialZoom"]},{"name":"constructor(module: String, logger: Logger, tileImageConvertor: TileImageConvertor?, zoomableCore: ZoomableBridge, onReadyChanged: (SubsamplingCore) -> Unit, onTileChanged: (SubsamplingCore) -> Unit)","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.SubsamplingCore","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/-subsampling-core.html","searchKeys":["SubsamplingCore","constructor(module: String, logger: Logger, tileImageConvertor: TileImageConvertor?, zoomableCore: ZoomableBridge, onReadyChanged: (SubsamplingCore) -> Unit, onTileChanged: (SubsamplingCore) -> Unit)","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.SubsamplingCore"]},{"name":"constructor(multiple: Float = MULTIPLE)","description":"com.github.panpf.zoomimage.zoom.DynamicScalesCalculator.DynamicScalesCalculator","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-dynamic-scales-calculator/-dynamic-scales-calculator.html","searchKeys":["DynamicScalesCalculator","constructor(multiple: Float = MULTIPLE)","com.github.panpf.zoomimage.zoom.DynamicScalesCalculator.DynamicScalesCalculator"]},{"name":"constructor(multiple: Float = MULTIPLE)","description":"com.github.panpf.zoomimage.zoom.FixedScalesCalculator.FixedScalesCalculator","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-fixed-scales-calculator/-fixed-scales-calculator.html","searchKeys":["FixedScalesCalculator","constructor(multiple: Float = MULTIPLE)","com.github.panpf.zoomimage.zoom.FixedScalesCalculator.FixedScalesCalculator"]},{"name":"constructor(panToScaleTransformer: PanToScaleTransformer = PanToScaleTransformer.Default)","description":"com.github.panpf.zoomimage.zoom.OneFingerScaleSpec.OneFingerScaleSpec","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-one-finger-scale-spec/-one-finger-scale-spec.html","searchKeys":["OneFingerScaleSpec","constructor(panToScaleTransformer: PanToScaleTransformer = PanToScaleTransformer.Default)","com.github.panpf.zoomimage.zoom.OneFingerScaleSpec.OneFingerScaleSpec"]},{"name":"constructor(path: Path)","description":"com.github.panpf.zoomimage.subsampling.FileImageSource.FileImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-file-image-source/-file-image-source.html","searchKeys":["FileImageSource","constructor(path: Path)","com.github.panpf.zoomimage.subsampling.FileImageSource.FileImageSource"]},{"name":"constructor(reference: Int = 200)","description":"com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer.DefaultPanToScaleTransformer","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-default-pan-to-scale-transformer/-default-pan-to-scale-transformer.html","searchKeys":["DefaultPanToScaleTransformer","constructor(reference: Int = 200)","com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer.DefaultPanToScaleTransformer"]},{"name":"constructor(resourcePath: String)","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.KotlinResourceImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[desktop]-kotlin-resource-image-source/-kotlin-resource-image-source.html","searchKeys":["KotlinResourceImageSource","constructor(resourcePath: String)","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.KotlinResourceImageSource"]},{"name":"constructor(resourcePath: String)","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.KotlinResourceImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[ios]-kotlin-resource-image-source/-kotlin-resource-image-source.html","searchKeys":["KotlinResourceImageSource","constructor(resourcePath: String)","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.KotlinResourceImageSource"]},{"name":"constructor(resources: Resources, resId: Int)","description":"com.github.panpf.zoomimage.subsampling.ResourceImageSource.ResourceImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-resource-image-source/-resource-image-source.html","searchKeys":["ResourceImageSource","constructor(resources: Resources, resId: Int)","com.github.panpf.zoomimage.subsampling.ResourceImageSource.ResourceImageSource"]},{"name":"constructor(result: Int)","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.ResetParamsDiffResult","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/-reset-params-diff-result.html","searchKeys":["ResetParamsDiffResult","constructor(result: Int)","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.ResetParamsDiffResult"]},{"name":"constructor(sameDirectionMultiple: Float = 2.5f, notSameDirectionMultiple: Float = 5.0f)","description":"com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.LongImageDecider","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-long-image-decider/-long-image-decider.html","searchKeys":["LongImageDecider","constructor(sameDirectionMultiple: Float = 2.5f, notSameDirectionMultiple: Float = 5.0f)","com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.LongImageDecider"]},{"name":"constructor(sampleSize: Int, tiles: List<Tile>)","description":"com.github.panpf.zoomimage.subsampling.SamplingTiles.SamplingTiles","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-sampling-tiles/-sampling-tiles.html","searchKeys":["SamplingTiles","constructor(sampleSize: Int, tiles: List<Tile>)","com.github.panpf.zoomimage.subsampling.SamplingTiles.SamplingTiles"]},{"name":"constructor(scale: ScaleFactorCompat, offset: OffsetCompat, rotation: Float = 0.0f, scaleOrigin: TransformOriginCompat = TransformOriginCompat.TopStart, rotationOrigin: TransformOriginCompat = TransformOriginCompat.TopStart)","description":"com.github.panpf.zoomimage.util.TransformCompat.TransformCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/-transform-compat.html","searchKeys":["TransformCompat","constructor(scale: ScaleFactorCompat, offset: OffsetCompat, rotation: Float = 0.0f, scaleOrigin: TransformOriginCompat = TransformOriginCompat.TopStart, rotationOrigin: TransformOriginCompat = TransformOriginCompat.TopStart)","com.github.panpf.zoomimage.util.TransformCompat.TransformCompat"]},{"name":"constructor(size: Float)","description":"com.github.panpf.zoomimage.zoom.ContainerWhitespace.ContainerWhitespace","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-container-whitespace/-container-whitespace.html","searchKeys":["ContainerWhitespace","constructor(size: Float)","com.github.panpf.zoomimage.zoom.ContainerWhitespace.ContainerWhitespace"]},{"name":"constructor(size: IntSizeCompat, mimeType: String)","description":"com.github.panpf.zoomimage.subsampling.ImageInfo.ImageInfo","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-info/-image-info.html","searchKeys":["ImageInfo","constructor(size: IntSizeCompat, mimeType: String)","com.github.panpf.zoomimage.subsampling.ImageInfo.ImageInfo"]},{"name":"constructor(sizeType: Int = SIZE_TYPE_HORIZONTAL or SIZE_TYPE_VERTICAL, decider: ReadMode.Decider = Decider.Default)","description":"com.github.panpf.zoomimage.zoom.ReadMode.ReadMode","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-read-mode.html","searchKeys":["ReadMode","constructor(sizeType: Int = SIZE_TYPE_HORIZONTAL or SIZE_TYPE_VERTICAL, decider: ReadMode.Decider = Decider.Default)","com.github.panpf.zoomimage.zoom.ReadMode.ReadMode"]},{"name":"constructor(subsamplingImage: <Error class: unknown class>, imageSource: <Error class: unknown class>, imageInfo: <Error class: unknown class>? = subsamplingImage.imageInfo)","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.AndroidRegionDecoder","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/-android-region-decoder.html","searchKeys":["AndroidRegionDecoder","constructor(subsamplingImage: <Error class: unknown class>, imageSource: <Error class: unknown class>, imageInfo: <Error class: unknown class>? = subsamplingImage.imageInfo)","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.AndroidRegionDecoder"]},{"name":"constructor(subsamplingImage: SubsamplingImage)","description":"com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult.Success.Success","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-subsampling-image-generate-result/-success/-success.html","searchKeys":["Success","constructor(subsamplingImage: SubsamplingImage)","com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult.Success.Success"]},{"name":"constructor(subsamplingImage: SubsamplingImage, imageSource: ImageSource, imageInfo: ImageInfo? = subsamplingImage.imageInfo, bytes: ByteArray? = null)","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.SkiaRegionDecoder","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/-skia-region-decoder.html","searchKeys":["SkiaRegionDecoder","constructor(subsamplingImage: SubsamplingImage, imageSource: ImageSource, imageInfo: ImageInfo? = subsamplingImage.imageInfo, bytes: ByteArray? = null)","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.SkiaRegionDecoder"]},{"name":"constructor(tag: String, level: Logger.Level = Level.Info, pipeline: Logger.Pipeline = defaultLogPipeline())","description":"com.github.panpf.zoomimage.util.Logger.Logger","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-logger.html","searchKeys":["Logger","constructor(tag: String, level: Logger.Level = Level.Info, pipeline: Logger.Pipeline = defaultLogPipeline())","com.github.panpf.zoomimage.util.Logger.Logger"]},{"name":"constructor(value: Float)","description":"com.github.panpf.zoomimage.zoom.FixedScale.FixedScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-fixed-scale/-fixed-scale.html","searchKeys":["FixedScale","constructor(value: Float)","com.github.panpf.zoomimage.zoom.FixedScale.FixedScale"]},{"name":"constructor(width: Int, height: Int, mimeType: String)","description":"com.github.panpf.zoomimage.subsampling.ImageInfo.ImageInfo","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-info/-image-info.html","searchKeys":["ImageInfo","constructor(width: Int, height: Int, mimeType: String)","com.github.panpf.zoomimage.subsampling.ImageInfo.ImageInfo"]},{"name":"data class BiasAlignmentCompat(val horizontalBias: Float, val verticalBias: Float) : AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.BiasAlignmentCompat","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-bias-alignment-compat/index.html","searchKeys":["BiasAlignmentCompat","data class BiasAlignmentCompat(val horizontalBias: Float, val verticalBias: Float) : AlignmentCompat","com.github.panpf.zoomimage.zoom.BiasAlignmentCompat"]},{"name":"data class ContainerWhitespace(val left: Float, val top: Float, val right: Float, val bottom: Float)","description":"com.github.panpf.zoomimage.zoom.ContainerWhitespace","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-container-whitespace/index.html","searchKeys":["ContainerWhitespace","data class ContainerWhitespace(val left: Float, val top: Float, val right: Float, val bottom: Float)","com.github.panpf.zoomimage.zoom.ContainerWhitespace"]},{"name":"data class DynamicScalesCalculator(val multiple: Float = MULTIPLE) : ScalesCalculator","description":"com.github.panpf.zoomimage.zoom.DynamicScalesCalculator","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-dynamic-scales-calculator/index.html","searchKeys":["DynamicScalesCalculator","data class DynamicScalesCalculator(val multiple: Float = MULTIPLE) : ScalesCalculator","com.github.panpf.zoomimage.zoom.DynamicScalesCalculator"]},{"name":"data class Error(val message: String) : SubsamplingImageGenerateResult","description":"com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult.Error","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-subsampling-image-generate-result/-error/index.html","searchKeys":["Error","data class Error(val message: String) : SubsamplingImageGenerateResult","com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult.Error"]},{"name":"data class FixedScale(val value: Float) : ContentScaleCompat","description":"com.github.panpf.zoomimage.zoom.FixedScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-fixed-scale/index.html","searchKeys":["FixedScale","data class FixedScale(val value: Float) : ContentScaleCompat","com.github.panpf.zoomimage.zoom.FixedScale"]},{"name":"data class FixedScalesCalculator(val multiple: Float = MULTIPLE) : ScalesCalculator","description":"com.github.panpf.zoomimage.zoom.FixedScalesCalculator","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-fixed-scales-calculator/index.html","searchKeys":["FixedScalesCalculator","data class FixedScalesCalculator(val multiple: Float = MULTIPLE) : ScalesCalculator","com.github.panpf.zoomimage.zoom.FixedScalesCalculator"]},{"name":"data class ImageInfo(val size: IntSizeCompat, val mimeType: String)","description":"com.github.panpf.zoomimage.subsampling.ImageInfo","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-info/index.html","searchKeys":["ImageInfo","data class ImageInfo(val size: IntSizeCompat, val mimeType: String)","com.github.panpf.zoomimage.subsampling.ImageInfo"]},{"name":"data class InitialZoom(val minScale: Float, val mediumScale: Float, val maxScale: Float, val baseTransform: TransformCompat, val userTransform: TransformCompat)","description":"com.github.panpf.zoomimage.zoom.internal.InitialZoom","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-initial-zoom/index.html","searchKeys":["InitialZoom","data class InitialZoom(val minScale: Float, val mediumScale: Float, val maxScale: Float, val baseTransform: TransformCompat, val userTransform: TransformCompat)","com.github.panpf.zoomimage.zoom.internal.InitialZoom"]},{"name":"data class IntRectCompat(val left: Int, val top: Int, val right: Int, val bottom: Int)","description":"com.github.panpf.zoomimage.util.IntRectCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/index.html","searchKeys":["IntRectCompat","data class IntRectCompat(val left: Int, val top: Int, val right: Int, val bottom: Int)","com.github.panpf.zoomimage.util.IntRectCompat"]},{"name":"data class OneFingerScaleSpec(val panToScaleTransformer: PanToScaleTransformer = PanToScaleTransformer.Default)","description":"com.github.panpf.zoomimage.zoom.OneFingerScaleSpec","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-one-finger-scale-spec/index.html","searchKeys":["OneFingerScaleSpec","data class OneFingerScaleSpec(val panToScaleTransformer: PanToScaleTransformer = PanToScaleTransformer.Default)","com.github.panpf.zoomimage.zoom.OneFingerScaleSpec"]},{"name":"data class ReadMode(val sizeType: Int = SIZE_TYPE_HORIZONTAL or SIZE_TYPE_VERTICAL, val decider: ReadMode.Decider = Decider.Default)","description":"com.github.panpf.zoomimage.zoom.ReadMode","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/index.html","searchKeys":["ReadMode","data class ReadMode(val sizeType: Int = SIZE_TYPE_HORIZONTAL or SIZE_TYPE_VERTICAL, val decider: ReadMode.Decider = Decider.Default)","com.github.panpf.zoomimage.zoom.ReadMode"]},{"name":"data class RectCompat(val left: Float, val top: Float, val right: Float, val bottom: Float)","description":"com.github.panpf.zoomimage.util.RectCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/index.html","searchKeys":["RectCompat","data class RectCompat(val left: Float, val top: Float, val right: Float, val bottom: Float)","com.github.panpf.zoomimage.util.RectCompat"]},{"name":"data class ResetParams(val containerSize: IntSizeCompat, val contentSize: IntSizeCompat, val contentOriginSize: IntSizeCompat, val rotation: Int, val contentScale: ContentScaleCompat, val alignment: AlignmentCompat, val readMode: ReadMode?, val scalesCalculator: ScalesCalculator, val limitOffsetWithinBaseVisibleRect: Boolean, val containerWhitespaceMultiple: Float, val containerWhitespace: ContainerWhitespace)","description":"com.github.panpf.zoomimage.zoom.internal.ResetParams","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params/index.html","searchKeys":["ResetParams","data class ResetParams(val containerSize: IntSizeCompat, val contentSize: IntSizeCompat, val contentOriginSize: IntSizeCompat, val rotation: Int, val contentScale: ContentScaleCompat, val alignment: AlignmentCompat, val readMode: ReadMode?, val scalesCalculator: ScalesCalculator, val limitOffsetWithinBaseVisibleRect: Boolean, val containerWhitespaceMultiple: Float, val containerWhitespace: ContainerWhitespace)","com.github.panpf.zoomimage.zoom.internal.ResetParams"]},{"name":"data class Result(val minScale: Float, val mediumScale: Float, val maxScale: Float)","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.Result","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/-result/index.html","searchKeys":["Result","data class Result(val minScale: Float, val mediumScale: Float, val maxScale: Float)","com.github.panpf.zoomimage.zoom.ScalesCalculator.Result"]},{"name":"data class SamplingTiles(val sampleSize: Int, val tiles: List<Tile>)","description":"com.github.panpf.zoomimage.subsampling.SamplingTiles","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-sampling-tiles/index.html","searchKeys":["SamplingTiles","data class SamplingTiles(val sampleSize: Int, val tiles: List<Tile>)","com.github.panpf.zoomimage.subsampling.SamplingTiles"]},{"name":"data class ScrollEdge(val horizontal: Edge, val vertical: Edge)","description":"com.github.panpf.zoomimage.zoom.ScrollEdge","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scroll-edge/index.html","searchKeys":["ScrollEdge","data class ScrollEdge(val horizontal: Edge, val vertical: Edge)","com.github.panpf.zoomimage.zoom.ScrollEdge"]},{"name":"data class SubsamplingImage(val imageSource: ImageSource.Factory, val imageInfo: ImageInfo? = null)","description":"com.github.panpf.zoomimage.subsampling.SubsamplingImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-subsampling-image/index.html","searchKeys":["SubsamplingImage","data class SubsamplingImage(val imageSource: ImageSource.Factory, val imageInfo: ImageInfo? = null)","com.github.panpf.zoomimage.subsampling.SubsamplingImage"]},{"name":"data class Success(val subsamplingImage: SubsamplingImage) : SubsamplingImageGenerateResult","description":"com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult.Success","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-subsampling-image-generate-result/-success/index.html","searchKeys":["Success","data class Success(val subsamplingImage: SubsamplingImage) : SubsamplingImageGenerateResult","com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult.Success"]},{"name":"data class TileAnimationSpec(val duration: Long = DEFAULT_DURATION, val interval: Long = DEFAULT_INTERVAL)","description":"com.github.panpf.zoomimage.subsampling.TileAnimationSpec","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-animation-spec/index.html","searchKeys":["TileAnimationSpec","data class TileAnimationSpec(val duration: Long = DEFAULT_DURATION, val interval: Long = DEFAULT_INTERVAL)","com.github.panpf.zoomimage.subsampling.TileAnimationSpec"]},{"name":"data class TileSnapshot(val coordinate: IntOffsetCompat, val srcRect: IntRectCompat, val sampleSize: Int, val tileImage: TileImage?, val state: Int, val alpha: Int)","description":"com.github.panpf.zoomimage.subsampling.TileSnapshot","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-snapshot/index.html","searchKeys":["TileSnapshot","data class TileSnapshot(val coordinate: IntOffsetCompat, val srcRect: IntRectCompat, val sampleSize: Int, val tileImage: TileImage?, val state: Int, val alpha: Int)","com.github.panpf.zoomimage.subsampling.TileSnapshot"]},{"name":"data class TransformCompat(val scale: ScaleFactorCompat, val offset: OffsetCompat, val rotation: Float = 0.0f, val scaleOrigin: TransformOriginCompat = TransformOriginCompat.TopStart, val rotationOrigin: TransformOriginCompat = TransformOriginCompat.TopStart)","description":"com.github.panpf.zoomimage.util.TransformCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/index.html","searchKeys":["TransformCompat","data class TransformCompat(val scale: ScaleFactorCompat, val offset: OffsetCompat, val rotation: Float = 0.0f, val scaleOrigin: TransformOriginCompat = TransformOriginCompat.TopStart, val rotationOrigin: TransformOriginCompat = TransformOriginCompat.TopStart)","com.github.panpf.zoomimage.util.TransformCompat"]},{"name":"data object AndroidLogPipeline","description":"com.github.panpf.zoomimage.util.AndroidLogPipeline","location":"zoomimage-core/com.github.panpf.zoomimage.util/-android-log-pipeline/index.html","searchKeys":["AndroidLogPipeline","data object AndroidLogPipeline","com.github.panpf.zoomimage.util.AndroidLogPipeline"]},{"name":"data object PrintlnLogPipeline : Logger.Pipeline","description":"com.github.panpf.zoomimage.util.PrintlnLogPipeline","location":"zoomimage-core/com.github.panpf.zoomimage.util/-println-log-pipeline/index.html","searchKeys":["PrintlnLogPipeline","data object PrintlnLogPipeline : Logger.Pipeline","com.github.panpf.zoomimage.util.PrintlnLogPipeline"]},{"name":"enum Edge : Enum<Edge> ","description":"com.github.panpf.zoomimage.zoom.Edge","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-edge/index.html","searchKeys":["Edge","enum Edge : Enum<Edge> ","com.github.panpf.zoomimage.zoom.Edge"]},{"name":"enum Level : Enum<Logger.Level> ","description":"com.github.panpf.zoomimage.util.Logger.Level","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-level/index.html","searchKeys":["Level","enum Level : Enum<Logger.Level> ","com.github.panpf.zoomimage.util.Logger.Level"]},{"name":"expect class TileBitmap","description":"com.github.panpf.zoomimage.subsampling.TileBitmap","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-bitmap/index.html","searchKeys":["TileBitmap","expect class TileBitmap","com.github.panpf.zoomimage.subsampling.TileBitmap"]},{"name":"expect fun TileBitmap.recycle()","description":"com.github.panpf.zoomimage.subsampling.recycle","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/recycle.html","searchKeys":["recycle","expect fun TileBitmap.recycle()","com.github.panpf.zoomimage.subsampling.recycle"]},{"name":"expect fun TileBitmap.toLogString(): String","description":"com.github.panpf.zoomimage.subsampling.toLogString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/to-log-string.html","searchKeys":["toLogString","expect fun TileBitmap.toLogString(): String","com.github.panpf.zoomimage.subsampling.toLogString"]},{"name":"expect fun defaultLogPipeline(): Logger.Pipeline","description":"com.github.panpf.zoomimage.util.defaultLogPipeline","location":"zoomimage-core/com.github.panpf.zoomimage.util/default-log-pipeline.html","searchKeys":["defaultLogPipeline","expect fun defaultLogPipeline(): Logger.Pipeline","com.github.panpf.zoomimage.util.defaultLogPipeline"]},{"name":"expect fun defaultRegionDecoder(): RegionDecoder.Factory","description":"com.github.panpf.zoomimage.subsampling.internal.defaultRegionDecoder","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/default-region-decoder.html","searchKeys":["defaultRegionDecoder","expect fun defaultRegionDecoder(): RegionDecoder.Factory","com.github.panpf.zoomimage.subsampling.internal.defaultRegionDecoder"]},{"name":"expect fun ioCoroutineDispatcher(): CoroutineDispatcher","description":"com.github.panpf.zoomimage.util.ioCoroutineDispatcher","location":"zoomimage-core/com.github.panpf.zoomimage.util/io-coroutine-dispatcher.html","searchKeys":["ioCoroutineDispatcher","expect fun ioCoroutineDispatcher(): CoroutineDispatcher","com.github.panpf.zoomimage.util.ioCoroutineDispatcher"]},{"name":"expect val TileBitmap.byteCount: Long","description":"com.github.panpf.zoomimage.subsampling.byteCount","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/byte-count.html","searchKeys":["byteCount","expect val TileBitmap.byteCount: Long","com.github.panpf.zoomimage.subsampling.byteCount"]},{"name":"expect val TileBitmap.height: Int","description":"com.github.panpf.zoomimage.subsampling.height","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/height.html","searchKeys":["height","expect val TileBitmap.height: Int","com.github.panpf.zoomimage.subsampling.height"]},{"name":"expect val TileBitmap.isImmutable: Boolean","description":"com.github.panpf.zoomimage.subsampling.isImmutable","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/is-immutable.html","searchKeys":["isImmutable","expect val TileBitmap.isImmutable: Boolean","com.github.panpf.zoomimage.subsampling.isImmutable"]},{"name":"expect val TileBitmap.isMutable: Boolean","description":"com.github.panpf.zoomimage.subsampling.isMutable","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/is-mutable.html","searchKeys":["isMutable","expect val TileBitmap.isMutable: Boolean","com.github.panpf.zoomimage.subsampling.isMutable"]},{"name":"expect val TileBitmap.isRecycled: Boolean","description":"com.github.panpf.zoomimage.subsampling.isRecycled","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/is-recycled.html","searchKeys":["isRecycled","expect val TileBitmap.isRecycled: Boolean","com.github.panpf.zoomimage.subsampling.isRecycled"]},{"name":"expect val TileBitmap.width: Int","description":"com.github.panpf.zoomimage.subsampling.width","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/width.html","searchKeys":["width","expect val TileBitmap.width: Int","com.github.panpf.zoomimage.subsampling.width"]},{"name":"fun <Error class: unknown class>.fromAsset(context: Context, assetFileName: String): AssetImageSource","description":"com.github.panpf.zoomimage.subsampling.fromAsset","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/from-asset.html","searchKeys":["fromAsset","fun <Error class: unknown class>.fromAsset(context: Context, assetFileName: String): AssetImageSource","com.github.panpf.zoomimage.subsampling.fromAsset"]},{"name":"fun <Error class: unknown class>.fromContent(context: Context, uri: Uri): ContentImageSource","description":"com.github.panpf.zoomimage.subsampling.fromContent","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/from-content.html","searchKeys":["fromContent","fun <Error class: unknown class>.fromContent(context: Context, uri: Uri): ContentImageSource","com.github.panpf.zoomimage.subsampling.fromContent"]},{"name":"fun <Error class: unknown class>.fromKotlinResource(resourcePath: String): KotlinResourceImageSource","description":"com.github.panpf.zoomimage.subsampling.fromKotlinResource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[desktop]from-kotlin-resource.html","searchKeys":["fromKotlinResource","fun <Error class: unknown class>.fromKotlinResource(resourcePath: String): KotlinResourceImageSource","com.github.panpf.zoomimage.subsampling.fromKotlinResource"]},{"name":"fun <Error class: unknown class>.fromKotlinResource(resourcePath: String): KotlinResourceImageSource","description":"com.github.panpf.zoomimage.subsampling.fromKotlinResource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[ios]from-kotlin-resource.html","searchKeys":["fromKotlinResource","fun <Error class: unknown class>.fromKotlinResource(resourcePath: String): KotlinResourceImageSource","com.github.panpf.zoomimage.subsampling.fromKotlinResource"]},{"name":"fun <Error class: unknown class>.fromResource(context: Context, resId: Int): ResourceImageSource","description":"com.github.panpf.zoomimage.subsampling.fromResource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/from-resource.html","searchKeys":["fromResource","fun <Error class: unknown class>.fromResource(context: Context, resId: Int): ResourceImageSource","com.github.panpf.zoomimage.subsampling.fromResource"]},{"name":"fun <Error class: unknown class>.fromResource(resources: Resources, resId: Int): ResourceImageSource","description":"com.github.panpf.zoomimage.subsampling.fromResource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/from-resource.html","searchKeys":["fromResource","fun <Error class: unknown class>.fromResource(resources: Resources, resId: Int): ResourceImageSource","com.github.panpf.zoomimage.subsampling.fromResource"]},{"name":"fun AlignmentCompat.Companion.valueOf(name: String): AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.valueOf","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/value-of.html","searchKeys":["valueOf","fun AlignmentCompat.Companion.valueOf(name: String): AlignmentCompat","com.github.panpf.zoomimage.zoom.valueOf"]},{"name":"fun AlignmentCompat.rtlFlipped(rtl: Boolean? = null): AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.rtlFlipped","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/rtl-flipped.html","searchKeys":["rtlFlipped","fun AlignmentCompat.rtlFlipped(rtl: Boolean? = null): AlignmentCompat","com.github.panpf.zoomimage.zoom.rtlFlipped"]},{"name":"fun ContainerWhitespace.check(): Boolean","description":"com.github.panpf.zoomimage.zoom.check","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/check.html","searchKeys":["check","fun ContainerWhitespace.check(): Boolean","com.github.panpf.zoomimage.zoom.check"]},{"name":"fun ContainerWhitespace.isEmpty(): Boolean","description":"com.github.panpf.zoomimage.zoom.isEmpty","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/is-empty.html","searchKeys":["isEmpty","fun ContainerWhitespace.isEmpty(): Boolean","com.github.panpf.zoomimage.zoom.isEmpty"]},{"name":"fun ContainerWhitespace.rtlFlipped(rtl: Boolean? = null): ContainerWhitespace","description":"com.github.panpf.zoomimage.zoom.rtlFlipped","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/rtl-flipped.html","searchKeys":["rtlFlipped","fun ContainerWhitespace.rtlFlipped(rtl: Boolean? = null): ContainerWhitespace","com.github.panpf.zoomimage.zoom.rtlFlipped"]},{"name":"fun ContainerWhitespace.toShortString(): String","description":"com.github.panpf.zoomimage.zoom.toShortString","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/to-short-string.html","searchKeys":["toShortString","fun ContainerWhitespace.toShortString(): String","com.github.panpf.zoomimage.zoom.toShortString"]},{"name":"fun ContentScaleCompat.Companion.valueOf(name: String): ContentScaleCompat","description":"com.github.panpf.zoomimage.zoom.valueOf","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/value-of.html","searchKeys":["valueOf","fun ContentScaleCompat.Companion.valueOf(name: String): ContentScaleCompat","com.github.panpf.zoomimage.zoom.valueOf"]},{"name":"fun ExifOrientationHelper.applyToImageInfo(imageInfo: <Error class: unknown class>): <Error class: unknown class>","description":"com.github.panpf.zoomimage.subsampling.internal.applyToImageInfo","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/apply-to-image-info.html","searchKeys":["applyToImageInfo","fun ExifOrientationHelper.applyToImageInfo(imageInfo: <Error class: unknown class>): <Error class: unknown class>","com.github.panpf.zoomimage.subsampling.internal.applyToImageInfo"]},{"name":"fun FileImageSource(file: <Error class: unknown class>): <Error class: unknown class>","description":"com.github.panpf.zoomimage.subsampling.FileImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-file-image-source.html","searchKeys":["FileImageSource","fun FileImageSource(file: <Error class: unknown class>): <Error class: unknown class>","com.github.panpf.zoomimage.subsampling.FileImageSource"]},{"name":"fun ImageSource.Companion.fromByteArray(byteArray: ByteArray): ByteArrayImageSource","description":"com.github.panpf.zoomimage.subsampling.fromByteArray","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/from-byte-array.html","searchKeys":["fromByteArray","fun ImageSource.Companion.fromByteArray(byteArray: ByteArray): ByteArrayImageSource","com.github.panpf.zoomimage.subsampling.fromByteArray"]},{"name":"fun ImageSource.Companion.fromFile(file: <Error class: unknown class>): FileImageSource","description":"com.github.panpf.zoomimage.subsampling.fromFile","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/from-file.html","searchKeys":["fromFile","fun ImageSource.Companion.fromFile(file: <Error class: unknown class>): FileImageSource","com.github.panpf.zoomimage.subsampling.fromFile"]},{"name":"fun ImageSource.Companion.fromFile(path: Path): FileImageSource","description":"com.github.panpf.zoomimage.subsampling.fromFile","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/from-file.html","searchKeys":["fromFile","fun ImageSource.Companion.fromFile(path: Path): FileImageSource","com.github.panpf.zoomimage.subsampling.fromFile"]},{"name":"fun ImageSource.Companion.fromFile(path: String): FileImageSource","description":"com.github.panpf.zoomimage.subsampling.fromFile","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/from-file.html","searchKeys":["fromFile","fun ImageSource.Companion.fromFile(path: String): FileImageSource","com.github.panpf.zoomimage.subsampling.fromFile"]},{"name":"fun ImageSource.toFactory(): ImageSource.Factory","description":"com.github.panpf.zoomimage.subsampling.toFactory","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/to-factory.html","searchKeys":["toFactory","fun ImageSource.toFactory(): ImageSource.Factory","com.github.panpf.zoomimage.subsampling.toFactory"]},{"name":"fun IntOffsetCompat(x: Int, y: Int): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntOffsetCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat.html","searchKeys":["IntOffsetCompat","fun IntOffsetCompat(x: Int, y: Int): IntOffsetCompat","com.github.panpf.zoomimage.util.IntOffsetCompat"]},{"name":"fun IntOffsetCompat.limitTo(rect: IntRectCompat): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.limitTo","location":"zoomimage-core/com.github.panpf.zoomimage.util/limit-to.html","searchKeys":["limitTo","fun IntOffsetCompat.limitTo(rect: IntRectCompat): IntOffsetCompat","com.github.panpf.zoomimage.util.limitTo"]},{"name":"fun IntOffsetCompat.limitTo(size: IntSizeCompat): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.limitTo","location":"zoomimage-core/com.github.panpf.zoomimage.util/limit-to.html","searchKeys":["limitTo","fun IntOffsetCompat.limitTo(size: IntSizeCompat): IntOffsetCompat","com.github.panpf.zoomimage.util.limitTo"]},{"name":"fun IntOffsetCompat.reverseRotateInSpace(spaceSize: IntSizeCompat, rotation: Int): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.reverseRotateInSpace","location":"zoomimage-core/com.github.panpf.zoomimage.util/reverse-rotate-in-space.html","searchKeys":["reverseRotateInSpace","fun IntOffsetCompat.reverseRotateInSpace(spaceSize: IntSizeCompat, rotation: Int): IntOffsetCompat","com.github.panpf.zoomimage.util.reverseRotateInSpace"]},{"name":"fun IntOffsetCompat.rotateInSpace(spaceSize: IntSizeCompat, rotation: Int): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.rotateInSpace","location":"zoomimage-core/com.github.panpf.zoomimage.util/rotate-in-space.html","searchKeys":["rotateInSpace","fun IntOffsetCompat.rotateInSpace(spaceSize: IntSizeCompat, rotation: Int): IntOffsetCompat","com.github.panpf.zoomimage.util.rotateInSpace"]},{"name":"fun IntOffsetCompat.toShortString(): String","description":"com.github.panpf.zoomimage.util.toShortString","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-short-string.html","searchKeys":["toShortString","fun IntOffsetCompat.toShortString(): String","com.github.panpf.zoomimage.util.toShortString"]},{"name":"fun IntRectCompat(center: IntOffsetCompat, radius: Int): IntRectCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat.html","searchKeys":["IntRectCompat","fun IntRectCompat(center: IntOffsetCompat, radius: Int): IntRectCompat","com.github.panpf.zoomimage.util.IntRectCompat"]},{"name":"fun IntRectCompat(offset: IntOffsetCompat, size: IntSizeCompat): IntRectCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat.html","searchKeys":["IntRectCompat","fun IntRectCompat(offset: IntOffsetCompat, size: IntSizeCompat): IntRectCompat","com.github.panpf.zoomimage.util.IntRectCompat"]},{"name":"fun IntRectCompat(topLeft: IntOffsetCompat, bottomRight: IntOffsetCompat): IntRectCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat.html","searchKeys":["IntRectCompat","fun IntRectCompat(topLeft: IntOffsetCompat, bottomRight: IntOffsetCompat): IntRectCompat","com.github.panpf.zoomimage.util.IntRectCompat"]},{"name":"fun IntRectCompat.flip(spaceSize: IntSizeCompat, vertical: Boolean = false): IntRectCompat","description":"com.github.panpf.zoomimage.util.flip","location":"zoomimage-core/com.github.panpf.zoomimage.util/flip.html","searchKeys":["flip","fun IntRectCompat.flip(spaceSize: IntSizeCompat, vertical: Boolean = false): IntRectCompat","com.github.panpf.zoomimage.util.flip"]},{"name":"fun IntRectCompat.limitTo(rect: IntRectCompat): IntRectCompat","description":"com.github.panpf.zoomimage.util.limitTo","location":"zoomimage-core/com.github.panpf.zoomimage.util/limit-to.html","searchKeys":["limitTo","fun IntRectCompat.limitTo(rect: IntRectCompat): IntRectCompat","com.github.panpf.zoomimage.util.limitTo"]},{"name":"fun IntRectCompat.limitTo(size: IntSizeCompat): IntRectCompat","description":"com.github.panpf.zoomimage.util.limitTo","location":"zoomimage-core/com.github.panpf.zoomimage.util/limit-to.html","searchKeys":["limitTo","fun IntRectCompat.limitTo(size: IntSizeCompat): IntRectCompat","com.github.panpf.zoomimage.util.limitTo"]},{"name":"fun IntRectCompat.reverseRotateInSpace(spaceSize: IntSizeCompat, rotation: Int): IntRectCompat","description":"com.github.panpf.zoomimage.util.reverseRotateInSpace","location":"zoomimage-core/com.github.panpf.zoomimage.util/reverse-rotate-in-space.html","searchKeys":["reverseRotateInSpace","fun IntRectCompat.reverseRotateInSpace(spaceSize: IntSizeCompat, rotation: Int): IntRectCompat","com.github.panpf.zoomimage.util.reverseRotateInSpace"]},{"name":"fun IntRectCompat.rotateInSpace(spaceSize: IntSizeCompat, rotation: Int): IntRectCompat","description":"com.github.panpf.zoomimage.util.rotateInSpace","location":"zoomimage-core/com.github.panpf.zoomimage.util/rotate-in-space.html","searchKeys":["rotateInSpace","fun IntRectCompat.rotateInSpace(spaceSize: IntSizeCompat, rotation: Int): IntRectCompat","com.github.panpf.zoomimage.util.rotateInSpace"]},{"name":"fun IntRectCompat.toRect(): RectCompat","description":"com.github.panpf.zoomimage.util.toRect","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-rect.html","searchKeys":["toRect","fun IntRectCompat.toRect(): RectCompat","com.github.panpf.zoomimage.util.toRect"]},{"name":"fun IntRectCompat.toShortString(): String","description":"com.github.panpf.zoomimage.util.toShortString","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-short-string.html","searchKeys":["toShortString","fun IntRectCompat.toShortString(): String","com.github.panpf.zoomimage.util.toShortString"]},{"name":"fun IntSizeCompat(width: Int, height: Int): IntSizeCompat","description":"com.github.panpf.zoomimage.util.IntSizeCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-size-compat.html","searchKeys":["IntSizeCompat","fun IntSizeCompat(width: Int, height: Int): IntSizeCompat","com.github.panpf.zoomimage.util.IntSizeCompat"]},{"name":"fun IntSizeCompat.copy(width: Int = this.width, height: Int = this.height): IntSizeCompat","description":"com.github.panpf.zoomimage.util.copy","location":"zoomimage-core/com.github.panpf.zoomimage.util/copy.html","searchKeys":["copy","fun IntSizeCompat.copy(width: Int = this.width, height: Int = this.height): IntSizeCompat","com.github.panpf.zoomimage.util.copy"]},{"name":"fun IntSizeCompat.isEmpty(): Boolean","description":"com.github.panpf.zoomimage.util.isEmpty","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-empty.html","searchKeys":["isEmpty","fun IntSizeCompat.isEmpty(): Boolean","com.github.panpf.zoomimage.util.isEmpty"]},{"name":"fun IntSizeCompat.isNotEmpty(): Boolean","description":"com.github.panpf.zoomimage.util.isNotEmpty","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-not-empty.html","searchKeys":["isNotEmpty","fun IntSizeCompat.isNotEmpty(): Boolean","com.github.panpf.zoomimage.util.isNotEmpty"]},{"name":"fun IntSizeCompat.isSameAspectRatio(other: IntSizeCompat, delta: Float = 0.0f): Boolean","description":"com.github.panpf.zoomimage.util.isSameAspectRatio","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-same-aspect-ratio.html","searchKeys":["isSameAspectRatio","fun IntSizeCompat.isSameAspectRatio(other: IntSizeCompat, delta: Float = 0.0f): Boolean","com.github.panpf.zoomimage.util.isSameAspectRatio"]},{"name":"fun IntSizeCompat.reverseRotate(rotation: Int): IntSizeCompat","description":"com.github.panpf.zoomimage.util.reverseRotate","location":"zoomimage-core/com.github.panpf.zoomimage.util/reverse-rotate.html","searchKeys":["reverseRotate","fun IntSizeCompat.reverseRotate(rotation: Int): IntSizeCompat","com.github.panpf.zoomimage.util.reverseRotate"]},{"name":"fun IntSizeCompat.rotate(rotation: Int): IntSizeCompat","description":"com.github.panpf.zoomimage.util.rotate","location":"zoomimage-core/com.github.panpf.zoomimage.util/rotate.html","searchKeys":["rotate","fun IntSizeCompat.rotate(rotation: Int): IntSizeCompat","com.github.panpf.zoomimage.util.rotate"]},{"name":"fun IntSizeCompat.toIntOffset(): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.toIntOffset","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-int-offset.html","searchKeys":["toIntOffset","fun IntSizeCompat.toIntOffset(): IntOffsetCompat","com.github.panpf.zoomimage.util.toIntOffset"]},{"name":"fun IntSizeCompat.toIntRect(): IntRectCompat","description":"com.github.panpf.zoomimage.util.toIntRect","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-int-rect.html","searchKeys":["toIntRect","fun IntSizeCompat.toIntRect(): IntRectCompat","com.github.panpf.zoomimage.util.toIntRect"]},{"name":"fun IntSizeCompat.toShortString(): String","description":"com.github.panpf.zoomimage.util.toShortString","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-short-string.html","searchKeys":["toShortString","fun IntSizeCompat.toShortString(): String","com.github.panpf.zoomimage.util.toShortString"]},{"name":"fun IntSizeCompat.toSize(): SizeCompat","description":"com.github.panpf.zoomimage.util.toSize","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-size.html","searchKeys":["toSize","fun IntSizeCompat.toSize(): SizeCompat","com.github.panpf.zoomimage.util.toSize"]},{"name":"fun List<SamplingTiles>.toIntroString(): String","description":"com.github.panpf.zoomimage.subsampling.internal.toIntroString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/to-intro-string.html","searchKeys":["toIntroString","fun List<SamplingTiles>.toIntroString(): String","com.github.panpf.zoomimage.subsampling.internal.toIntroString"]},{"name":"fun OffsetCompat(x: Float, y: Float): OffsetCompat","description":"com.github.panpf.zoomimage.util.OffsetCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat.html","searchKeys":["OffsetCompat","fun OffsetCompat(x: Float, y: Float): OffsetCompat","com.github.panpf.zoomimage.util.OffsetCompat"]},{"name":"fun OffsetCompat.isEmpty(): Boolean","description":"com.github.panpf.zoomimage.util.isEmpty","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-empty.html","searchKeys":["isEmpty","fun OffsetCompat.isEmpty(): Boolean","com.github.panpf.zoomimage.util.isEmpty"]},{"name":"fun OffsetCompat.limitTo(rect: RectCompat): OffsetCompat","description":"com.github.panpf.zoomimage.util.limitTo","location":"zoomimage-core/com.github.panpf.zoomimage.util/limit-to.html","searchKeys":["limitTo","fun OffsetCompat.limitTo(rect: RectCompat): OffsetCompat","com.github.panpf.zoomimage.util.limitTo"]},{"name":"fun OffsetCompat.limitTo(size: SizeCompat): OffsetCompat","description":"com.github.panpf.zoomimage.util.limitTo","location":"zoomimage-core/com.github.panpf.zoomimage.util/limit-to.html","searchKeys":["limitTo","fun OffsetCompat.limitTo(size: SizeCompat): OffsetCompat","com.github.panpf.zoomimage.util.limitTo"]},{"name":"fun OffsetCompat.reverseRotateInSpace(spaceSize: SizeCompat, rotation: Int): OffsetCompat","description":"com.github.panpf.zoomimage.util.reverseRotateInSpace","location":"zoomimage-core/com.github.panpf.zoomimage.util/reverse-rotate-in-space.html","searchKeys":["reverseRotateInSpace","fun OffsetCompat.reverseRotateInSpace(spaceSize: SizeCompat, rotation: Int): OffsetCompat","com.github.panpf.zoomimage.util.reverseRotateInSpace"]},{"name":"fun OffsetCompat.rotateInSpace(spaceSize: SizeCompat, rotation: Int): OffsetCompat","description":"com.github.panpf.zoomimage.util.rotateInSpace","location":"zoomimage-core/com.github.panpf.zoomimage.util/rotate-in-space.html","searchKeys":["rotateInSpace","fun OffsetCompat.rotateInSpace(spaceSize: SizeCompat, rotation: Int): OffsetCompat","com.github.panpf.zoomimage.util.rotateInSpace"]},{"name":"fun OffsetCompat.toShortString(): String","description":"com.github.panpf.zoomimage.util.toShortString","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-short-string.html","searchKeys":["toShortString","fun OffsetCompat.toShortString(): String","com.github.panpf.zoomimage.util.toShortString"]},{"name":"fun RectCompat(center: OffsetCompat, radius: Float): RectCompat","description":"com.github.panpf.zoomimage.util.RectCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat.html","searchKeys":["RectCompat","fun RectCompat(center: OffsetCompat, radius: Float): RectCompat","com.github.panpf.zoomimage.util.RectCompat"]},{"name":"fun RectCompat(offset: OffsetCompat, size: SizeCompat): RectCompat","description":"com.github.panpf.zoomimage.util.RectCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat.html","searchKeys":["RectCompat","fun RectCompat(offset: OffsetCompat, size: SizeCompat): RectCompat","com.github.panpf.zoomimage.util.RectCompat"]},{"name":"fun RectCompat(topLeft: OffsetCompat, bottomRight: OffsetCompat): RectCompat","description":"com.github.panpf.zoomimage.util.RectCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat.html","searchKeys":["RectCompat","fun RectCompat(topLeft: OffsetCompat, bottomRight: OffsetCompat): RectCompat","com.github.panpf.zoomimage.util.RectCompat"]},{"name":"fun RectCompat.flip(spaceSize: SizeCompat, vertical: Boolean = false): RectCompat","description":"com.github.panpf.zoomimage.util.flip","location":"zoomimage-core/com.github.panpf.zoomimage.util/flip.html","searchKeys":["flip","fun RectCompat.flip(spaceSize: SizeCompat, vertical: Boolean = false): RectCompat","com.github.panpf.zoomimage.util.flip"]},{"name":"fun RectCompat.limitTo(rect: RectCompat): RectCompat","description":"com.github.panpf.zoomimage.util.limitTo","location":"zoomimage-core/com.github.panpf.zoomimage.util/limit-to.html","searchKeys":["limitTo","fun RectCompat.limitTo(rect: RectCompat): RectCompat","com.github.panpf.zoomimage.util.limitTo"]},{"name":"fun RectCompat.limitTo(size: SizeCompat): RectCompat","description":"com.github.panpf.zoomimage.util.limitTo","location":"zoomimage-core/com.github.panpf.zoomimage.util/limit-to.html","searchKeys":["limitTo","fun RectCompat.limitTo(size: SizeCompat): RectCompat","com.github.panpf.zoomimage.util.limitTo"]},{"name":"fun RectCompat.reverseRotateInSpace(spaceSize: SizeCompat, rotation: Int): RectCompat","description":"com.github.panpf.zoomimage.util.reverseRotateInSpace","location":"zoomimage-core/com.github.panpf.zoomimage.util/reverse-rotate-in-space.html","searchKeys":["reverseRotateInSpace","fun RectCompat.reverseRotateInSpace(spaceSize: SizeCompat, rotation: Int): RectCompat","com.github.panpf.zoomimage.util.reverseRotateInSpace"]},{"name":"fun RectCompat.rotateInSpace(spaceSize: SizeCompat, rotation: Int): RectCompat","description":"com.github.panpf.zoomimage.util.rotateInSpace","location":"zoomimage-core/com.github.panpf.zoomimage.util/rotate-in-space.html","searchKeys":["rotateInSpace","fun RectCompat.rotateInSpace(spaceSize: SizeCompat, rotation: Int): RectCompat","com.github.panpf.zoomimage.util.rotateInSpace"]},{"name":"fun RectCompat.round(): IntRectCompat","description":"com.github.panpf.zoomimage.util.round","location":"zoomimage-core/com.github.panpf.zoomimage.util/round.html","searchKeys":["round","fun RectCompat.round(): IntRectCompat","com.github.panpf.zoomimage.util.round"]},{"name":"fun RectCompat.roundToIntRect(): IntRectCompat","description":"com.github.panpf.zoomimage.util.roundToIntRect","location":"zoomimage-core/com.github.panpf.zoomimage.util/round-to-int-rect.html","searchKeys":["roundToIntRect","fun RectCompat.roundToIntRect(): IntRectCompat","com.github.panpf.zoomimage.util.roundToIntRect"]},{"name":"fun RectCompat.toShortString(): String","description":"com.github.panpf.zoomimage.util.toShortString","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-short-string.html","searchKeys":["toShortString","fun RectCompat.toShortString(): String","com.github.panpf.zoomimage.util.toShortString"]},{"name":"fun ResetParams.diff(other: ResetParams?): ResetParamsDiffResult","description":"com.github.panpf.zoomimage.zoom.internal.diff","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/diff.html","searchKeys":["diff","fun ResetParams.diff(other: ResetParams?): ResetParamsDiffResult","com.github.panpf.zoomimage.zoom.internal.diff"]},{"name":"fun ScaleFactorCompat(scale: Float): ScaleFactorCompat","description":"com.github.panpf.zoomimage.util.ScaleFactorCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-scale-factor-compat.html","searchKeys":["ScaleFactorCompat","fun ScaleFactorCompat(scale: Float): ScaleFactorCompat","com.github.panpf.zoomimage.util.ScaleFactorCompat"]},{"name":"fun ScaleFactorCompat(scaleX: Float, scaleY: Float): ScaleFactorCompat","description":"com.github.panpf.zoomimage.util.ScaleFactorCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-scale-factor-compat.html","searchKeys":["ScaleFactorCompat","fun ScaleFactorCompat(scaleX: Float, scaleY: Float): ScaleFactorCompat","com.github.panpf.zoomimage.util.ScaleFactorCompat"]},{"name":"fun ScaleFactorCompat.isOrigin(): Boolean","description":"com.github.panpf.zoomimage.util.isOrigin","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-origin.html","searchKeys":["isOrigin","fun ScaleFactorCompat.isOrigin(): Boolean","com.github.panpf.zoomimage.util.isOrigin"]},{"name":"fun ScaleFactorCompat.toShortString(): String","description":"com.github.panpf.zoomimage.util.toShortString","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-short-string.html","searchKeys":["toShortString","fun ScaleFactorCompat.toShortString(): String","com.github.panpf.zoomimage.util.toShortString"]},{"name":"fun ScrollEdge.toShortString(): String","description":"com.github.panpf.zoomimage.zoom.toShortString","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/to-short-string.html","searchKeys":["toShortString","fun ScrollEdge.toShortString(): String","com.github.panpf.zoomimage.zoom.toShortString"]},{"name":"fun SizeCompat(width: Float, height: Float): SizeCompat","description":"com.github.panpf.zoomimage.util.SizeCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat.html","searchKeys":["SizeCompat","fun SizeCompat(width: Float, height: Float): SizeCompat","com.github.panpf.zoomimage.util.SizeCompat"]},{"name":"fun SizeCompat.isNotEmpty(): Boolean","description":"com.github.panpf.zoomimage.util.isNotEmpty","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-not-empty.html","searchKeys":["isNotEmpty","fun SizeCompat.isNotEmpty(): Boolean","com.github.panpf.zoomimage.util.isNotEmpty"]},{"name":"fun SizeCompat.isSameAspectRatio(other: SizeCompat, delta: Float = 0.0f): Boolean","description":"com.github.panpf.zoomimage.util.isSameAspectRatio","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-same-aspect-ratio.html","searchKeys":["isSameAspectRatio","fun SizeCompat.isSameAspectRatio(other: SizeCompat, delta: Float = 0.0f): Boolean","com.github.panpf.zoomimage.util.isSameAspectRatio"]},{"name":"fun SizeCompat.reverseRotate(rotation: Int): SizeCompat","description":"com.github.panpf.zoomimage.util.reverseRotate","location":"zoomimage-core/com.github.panpf.zoomimage.util/reverse-rotate.html","searchKeys":["reverseRotate","fun SizeCompat.reverseRotate(rotation: Int): SizeCompat","com.github.panpf.zoomimage.util.reverseRotate"]},{"name":"fun SizeCompat.rotate(rotation: Int): SizeCompat","description":"com.github.panpf.zoomimage.util.rotate","location":"zoomimage-core/com.github.panpf.zoomimage.util/rotate.html","searchKeys":["rotate","fun SizeCompat.rotate(rotation: Int): SizeCompat","com.github.panpf.zoomimage.util.rotate"]},{"name":"fun SizeCompat.round(): IntSizeCompat","description":"com.github.panpf.zoomimage.util.round","location":"zoomimage-core/com.github.panpf.zoomimage.util/round.html","searchKeys":["round","fun SizeCompat.round(): IntSizeCompat","com.github.panpf.zoomimage.util.round"]},{"name":"fun SizeCompat.toOffset(): OffsetCompat","description":"com.github.panpf.zoomimage.util.toOffset","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-offset.html","searchKeys":["toOffset","fun SizeCompat.toOffset(): OffsetCompat","com.github.panpf.zoomimage.util.toOffset"]},{"name":"fun SizeCompat.toRect(): RectCompat","description":"com.github.panpf.zoomimage.util.toRect","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-rect.html","searchKeys":["toRect","fun SizeCompat.toRect(): RectCompat","com.github.panpf.zoomimage.util.toRect"]},{"name":"fun SizeCompat.toShortString(): String","description":"com.github.panpf.zoomimage.util.toShortString","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-short-string.html","searchKeys":["toShortString","fun SizeCompat.toShortString(): String","com.github.panpf.zoomimage.util.toShortString"]},{"name":"fun Tile.toSnapshot(): TileSnapshot","description":"com.github.panpf.zoomimage.subsampling.toSnapshot","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/to-snapshot.html","searchKeys":["toSnapshot","fun Tile.toSnapshot(): TileSnapshot","com.github.panpf.zoomimage.subsampling.toSnapshot"]},{"name":"fun TransformCompat.isEmpty(): Boolean","description":"com.github.panpf.zoomimage.util.isEmpty","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-empty.html","searchKeys":["isEmpty","fun TransformCompat.isEmpty(): Boolean","com.github.panpf.zoomimage.util.isEmpty"]},{"name":"fun TransformCompat.isNotEmpty(): Boolean","description":"com.github.panpf.zoomimage.util.isNotEmpty","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-not-empty.html","searchKeys":["isNotEmpty","fun TransformCompat.isNotEmpty(): Boolean","com.github.panpf.zoomimage.util.isNotEmpty"]},{"name":"fun TransformCompat.toShortString(): String","description":"com.github.panpf.zoomimage.util.toShortString","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-short-string.html","searchKeys":["toShortString","fun TransformCompat.toShortString(): String","com.github.panpf.zoomimage.util.toShortString"]},{"name":"fun TransformOriginCompat(pivotFractionX: Float, pivotFractionY: Float): TransformOriginCompat","description":"com.github.panpf.zoomimage.util.TransformOriginCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-origin-compat.html","searchKeys":["TransformOriginCompat","fun TransformOriginCompat(pivotFractionX: Float, pivotFractionY: Float): TransformOriginCompat","com.github.panpf.zoomimage.util.TransformOriginCompat"]},{"name":"fun TransformOriginCompat.toShortString(): String","description":"com.github.panpf.zoomimage.util.toShortString","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-short-string.html","searchKeys":["toShortString","fun TransformOriginCompat.toShortString(): String","com.github.panpf.zoomimage.util.toShortString"]},{"name":"fun accept(contentSize: IntSizeCompat, containerSize: IntSizeCompat): Boolean","description":"com.github.panpf.zoomimage.zoom.ReadMode.accept","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/accept.html","searchKeys":["accept","fun accept(contentSize: IntSizeCompat, containerSize: IntSizeCompat): Boolean","com.github.panpf.zoomimage.zoom.ReadMode.accept"]},{"name":"fun applyToRect(srcRect: <Error class: unknown class>, imageSize: <Error class: unknown class>, reverse: Boolean = false): <Error class: unknown class>","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.applyToRect","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/apply-to-rect.html","searchKeys":["applyToRect","fun applyToRect(srcRect: <Error class: unknown class>, imageSize: <Error class: unknown class>, reverse: Boolean = false): <Error class: unknown class>","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.applyToRect"]},{"name":"fun applyToSize(size: <Error class: unknown class>, reverse: Boolean = false): <Error class: unknown class>","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.applyToSize","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/apply-to-size.html","searchKeys":["applyToSize","fun applyToSize(size: <Error class: unknown class>, reverse: Boolean = false): <Error class: unknown class>","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.applyToSize"]},{"name":"fun applyToTileImage(tileImage: <Error class: unknown class>, reverse: Boolean = false): <Error class: unknown class>","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.applyToTileImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/apply-to-tile-image.html","searchKeys":["applyToTileImage","fun applyToTileImage(tileImage: <Error class: unknown class>, reverse: Boolean = false): <Error class: unknown class>","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.applyToTileImage"]},{"name":"fun calculate(duration: Long): Boolean","description":"com.github.panpf.zoomimage.subsampling.Tile.AnimationState.calculate","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/-animation-state/calculate.html","searchKeys":["calculate","fun calculate(duration: Long): Boolean","com.github.panpf.zoomimage.subsampling.Tile.AnimationState.calculate"]},{"name":"fun calculateBaseTransform(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int): TransformCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateBaseTransform","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-base-transform.html","searchKeys":["calculateBaseTransform","fun calculateBaseTransform(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int): TransformCompat","com.github.panpf.zoomimage.zoom.internal.calculateBaseTransform"]},{"name":"fun calculateContentBaseDisplayRect(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int): RectCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateContentBaseDisplayRect","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-content-base-display-rect.html","searchKeys":["calculateContentBaseDisplayRect","fun calculateContentBaseDisplayRect(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int): RectCompat","com.github.panpf.zoomimage.zoom.internal.calculateContentBaseDisplayRect"]},{"name":"fun calculateContentBaseVisibleRect(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int): RectCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateContentBaseVisibleRect","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-content-base-visible-rect.html","searchKeys":["calculateContentBaseVisibleRect","fun calculateContentBaseVisibleRect(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int): RectCompat","com.github.panpf.zoomimage.zoom.internal.calculateContentBaseVisibleRect"]},{"name":"fun calculateContentDisplayRect(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, userScale: Float, userOffset: OffsetCompat): RectCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateContentDisplayRect","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-content-display-rect.html","searchKeys":["calculateContentDisplayRect","fun calculateContentDisplayRect(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, userScale: Float, userOffset: OffsetCompat): RectCompat","com.github.panpf.zoomimage.zoom.internal.calculateContentDisplayRect"]},{"name":"fun calculateContentRotateOrigin(containerSize: IntSizeCompat, contentSize: IntSizeCompat): TransformOriginCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateContentRotateOrigin","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-content-rotate-origin.html","searchKeys":["calculateContentRotateOrigin","fun calculateContentRotateOrigin(containerSize: IntSizeCompat, contentSize: IntSizeCompat): TransformOriginCompat","com.github.panpf.zoomimage.zoom.internal.calculateContentRotateOrigin"]},{"name":"fun calculateContentVisibleRect(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, userScale: Float, userOffset: OffsetCompat): RectCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateContentVisibleRect","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-content-visible-rect.html","searchKeys":["calculateContentVisibleRect","fun calculateContentVisibleRect(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, userScale: Float, userOffset: OffsetCompat): RectCompat","com.github.panpf.zoomimage.zoom.internal.calculateContentVisibleRect"]},{"name":"fun calculateInitialZoom(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, readMode: ReadMode?, scalesCalculator: ScalesCalculator): InitialZoom","description":"com.github.panpf.zoomimage.zoom.internal.calculateInitialZoom","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-initial-zoom.html","searchKeys":["calculateInitialZoom","fun calculateInitialZoom(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, readMode: ReadMode?, scalesCalculator: ScalesCalculator): InitialZoom","com.github.panpf.zoomimage.zoom.internal.calculateInitialZoom"]},{"name":"fun calculateLocateUserOffset(containerSize: IntSizeCompat, containerPoint: OffsetCompat, userScale: Float): OffsetCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateLocateUserOffset","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-locate-user-offset.html","searchKeys":["calculateLocateUserOffset","fun calculateLocateUserOffset(containerSize: IntSizeCompat, containerPoint: OffsetCompat, userScale: Float): OffsetCompat","com.github.panpf.zoomimage.zoom.internal.calculateLocateUserOffset"]},{"name":"fun calculateMinScale(baseScale: Float, initialScale: Float): Float","description":"com.github.panpf.zoomimage.zoom.internal.calculateMinScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-min-scale.html","searchKeys":["calculateMinScale","fun calculateMinScale(baseScale: Float, initialScale: Float): Float","com.github.panpf.zoomimage.zoom.internal.calculateMinScale"]},{"name":"fun calculateNextStepScale(stepScales: FloatArray, currentScale: Float, delta: Float = 0.1f): Float","description":"com.github.panpf.zoomimage.zoom.internal.calculateNextStepScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-next-step-scale.html","searchKeys":["calculateNextStepScale","fun calculateNextStepScale(stepScales: FloatArray, currentScale: Float, delta: Float = 0.1f): Float","com.github.panpf.zoomimage.zoom.internal.calculateNextStepScale"]},{"name":"fun calculatePreferredTileSize(containerSize: IntSizeCompat): IntSizeCompat","description":"com.github.panpf.zoomimage.subsampling.internal.calculatePreferredTileSize","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/calculate-preferred-tile-size.html","searchKeys":["calculatePreferredTileSize","fun calculatePreferredTileSize(containerSize: IntSizeCompat): IntSizeCompat","com.github.panpf.zoomimage.subsampling.internal.calculatePreferredTileSize"]},{"name":"fun calculateReadModeTransform(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, readMode: ReadMode?): TransformCompat?","description":"com.github.panpf.zoomimage.zoom.internal.calculateReadModeTransform","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-read-mode-transform.html","searchKeys":["calculateReadModeTransform","fun calculateReadModeTransform(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, readMode: ReadMode?): TransformCompat?","com.github.panpf.zoomimage.zoom.internal.calculateReadModeTransform"]},{"name":"fun calculateRestoreContentVisibleCenterUserTransform(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, newBaseTransform: TransformCompat, lastTransform: TransformCompat, lastContentVisibleCenter: OffsetCompat): TransformCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateRestoreContentVisibleCenterUserTransform","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-restore-content-visible-center-user-transform.html","searchKeys":["calculateRestoreContentVisibleCenterUserTransform","fun calculateRestoreContentVisibleCenterUserTransform(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, newBaseTransform: TransformCompat, lastTransform: TransformCompat, lastContentVisibleCenter: OffsetCompat): TransformCompat","com.github.panpf.zoomimage.zoom.internal.calculateRestoreContentVisibleCenterUserTransform"]},{"name":"fun calculateRestoreVisibleCenterTransformWhenOnlyContainerSizeChanged(oldContainerSize: IntSizeCompat, newContainerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, transform: TransformCompat): TransformCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateRestoreVisibleCenterTransformWhenOnlyContainerSizeChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-restore-visible-center-transform-when-only-container-size-changed.html","searchKeys":["calculateRestoreVisibleCenterTransformWhenOnlyContainerSizeChanged","fun calculateRestoreVisibleCenterTransformWhenOnlyContainerSizeChanged(oldContainerSize: IntSizeCompat, newContainerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, transform: TransformCompat): TransformCompat","com.github.panpf.zoomimage.zoom.internal.calculateRestoreVisibleCenterTransformWhenOnlyContainerSizeChanged"]},{"name":"fun calculateRestoreVisibleRectTransformWhenOnlyContentSizeChanged(oldContentSize: IntSizeCompat, newContentSize: IntSizeCompat, transform: TransformCompat): TransformCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateRestoreVisibleRectTransformWhenOnlyContentSizeChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-restore-visible-rect-transform-when-only-content-size-changed.html","searchKeys":["calculateRestoreVisibleRectTransformWhenOnlyContentSizeChanged","fun calculateRestoreVisibleRectTransformWhenOnlyContentSizeChanged(oldContentSize: IntSizeCompat, newContentSize: IntSizeCompat, transform: TransformCompat): TransformCompat","com.github.panpf.zoomimage.zoom.internal.calculateRestoreVisibleRectTransformWhenOnlyContentSizeChanged"]},{"name":"fun calculateRotatedContentMoveToTopLeftOffset(containerSize: IntSizeCompat, contentSize: IntSizeCompat, rotation: Int): OffsetCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateRotatedContentMoveToTopLeftOffset","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-rotated-content-move-to-top-left-offset.html","searchKeys":["calculateRotatedContentMoveToTopLeftOffset","fun calculateRotatedContentMoveToTopLeftOffset(containerSize: IntSizeCompat, contentSize: IntSizeCompat, rotation: Int): OffsetCompat","com.github.panpf.zoomimage.zoom.internal.calculateRotatedContentMoveToTopLeftOffset"]},{"name":"fun calculateRotatedContentRect(containerSize: IntSizeCompat, contentSize: IntSizeCompat, rotation: Int): RectCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateRotatedContentRect","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-rotated-content-rect.html","searchKeys":["calculateRotatedContentRect","fun calculateRotatedContentRect(containerSize: IntSizeCompat, contentSize: IntSizeCompat, rotation: Int): RectCompat","com.github.panpf.zoomimage.zoom.internal.calculateRotatedContentRect"]},{"name":"fun calculateScaleUserOffset(currentUserScale: Float, currentUserOffset: OffsetCompat, targetUserScale: Float, centroid: OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateScaleUserOffset","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-scale-user-offset.html","searchKeys":["calculateScaleUserOffset","fun calculateScaleUserOffset(currentUserScale: Float, currentUserOffset: OffsetCompat, targetUserScale: Float, centroid: OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.zoom.internal.calculateScaleUserOffset"]},{"name":"fun calculateScales(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, contentScale: ContentScaleCompat, rotation: Int, initialScale: Float, calculator: ScalesCalculator): FloatArray","description":"com.github.panpf.zoomimage.zoom.internal.calculateScales","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-scales.html","searchKeys":["calculateScales","fun calculateScales(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, contentScale: ContentScaleCompat, rotation: Int, initialScale: Float, calculator: ScalesCalculator): FloatArray","com.github.panpf.zoomimage.zoom.internal.calculateScales"]},{"name":"fun calculateScrollEdge(userOffsetBounds: RectCompat, userOffset: OffsetCompat): ScrollEdge","description":"com.github.panpf.zoomimage.zoom.internal.calculateScrollEdge","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-scroll-edge.html","searchKeys":["calculateScrollEdge","fun calculateScrollEdge(userOffsetBounds: RectCompat, userOffset: OffsetCompat): ScrollEdge","com.github.panpf.zoomimage.zoom.internal.calculateScrollEdge"]},{"name":"fun calculateTransformOffset(currentScale: Float, currentOffset: OffsetCompat, targetScale: Float, centroid: OffsetCompat, pan: OffsetCompat, gestureRotate: Float): OffsetCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateTransformOffset","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-transform-offset.html","searchKeys":["calculateTransformOffset","fun calculateTransformOffset(currentScale: Float, currentOffset: OffsetCompat, targetScale: Float, centroid: OffsetCompat, pan: OffsetCompat, gestureRotate: Float): OffsetCompat","com.github.panpf.zoomimage.zoom.internal.calculateTransformOffset"]},{"name":"fun calculateUserOffsetBounds(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, userScale: Float, limitBaseVisibleRect: Boolean, containerWhitespace: ContainerWhitespace): RectCompat","description":"com.github.panpf.zoomimage.zoom.internal.calculateUserOffsetBounds","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/calculate-user-offset-bounds.html","searchKeys":["calculateUserOffsetBounds","fun calculateUserOffsetBounds(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, userScale: Float, limitBaseVisibleRect: Boolean, containerWhitespace: ContainerWhitespace): RectCompat","com.github.panpf.zoomimage.zoom.internal.calculateUserOffsetBounds"]},{"name":"fun canScroll(horizontal: Boolean, direction: Int): Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.canScroll","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/can-scroll.html","searchKeys":["canScroll","fun canScroll(horizontal: Boolean, direction: Int): Boolean","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.canScroll"]},{"name":"fun canScrollByEdge(scrollEdge: ScrollEdge, horizontal: Boolean, direction: Int): Boolean","description":"com.github.panpf.zoomimage.zoom.internal.canScrollByEdge","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/can-scroll-by-edge.html","searchKeys":["canScrollByEdge","fun canScrollByEdge(scrollEdge: ScrollEdge, horizontal: Boolean, direction: Int): Boolean","com.github.panpf.zoomimage.zoom.internal.canScrollByEdge"]},{"name":"fun canUseSubsamplingByAspectRatio(imageSize: IntSizeCompat, thumbnailSize: IntSizeCompat, maxDifference: Float = 1.0f): Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.canUseSubsamplingByAspectRatio","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/can-use-subsampling-by-aspect-ratio.html","searchKeys":["canUseSubsamplingByAspectRatio","fun canUseSubsamplingByAspectRatio(imageSize: IntSizeCompat, thumbnailSize: IntSizeCompat, maxDifference: Float = 1.0f): Boolean","com.github.panpf.zoomimage.subsampling.internal.canUseSubsamplingByAspectRatio"]},{"name":"fun checkImageInfo(imageInfo: ImageInfo, factory: RegionDecoder.Factory, contentSize: IntSizeCompat)","description":"com.github.panpf.zoomimage.subsampling.internal.checkImageInfo","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/check-image-info.html","searchKeys":["checkImageInfo","fun checkImageInfo(imageInfo: ImageInfo, factory: RegionDecoder.Factory, contentSize: IntSizeCompat)","com.github.panpf.zoomimage.subsampling.internal.checkImageInfo"]},{"name":"fun checkNewPreferredTileSize(oldPreferredTileSize: IntSizeCompat, newPreferredTileSize: IntSizeCompat): Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.checkNewPreferredTileSize","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/check-new-preferred-tile-size.html","searchKeys":["checkNewPreferredTileSize","fun checkNewPreferredTileSize(oldPreferredTileSize: IntSizeCompat, newPreferredTileSize: IntSizeCompat): Boolean","com.github.panpf.zoomimage.subsampling.internal.checkNewPreferredTileSize"]},{"name":"fun checkSupportGestureType(disabledGestureTypes: Int, gestureType: Int): Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.checkSupportGestureType","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/check-support-gesture-type.html","searchKeys":["checkSupportGestureType","fun checkSupportGestureType(disabledGestureTypes: Int, gestureType: Int): Boolean","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.checkSupportGestureType"]},{"name":"fun clean(caller: String)","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager.clean","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/clean.html","searchKeys":["clean","fun clean(caller: String)","com.github.panpf.zoomimage.subsampling.internal.TileManager.clean"]},{"name":"fun cleanTileImage()","description":"com.github.panpf.zoomimage.subsampling.Tile.cleanTileImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/clean-tile-image.html","searchKeys":["cleanTileImage","fun cleanTileImage()","com.github.panpf.zoomimage.subsampling.Tile.cleanTileImage"]},{"name":"fun containerPointToContentPoint(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, containerPoint: OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.zoom.internal.containerPointToContentPoint","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/container-point-to-content-point.html","searchKeys":["containerPointToContentPoint","fun containerPointToContentPoint(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, containerPoint: OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.zoom.internal.containerPointToContentPoint"]},{"name":"fun containerPointToTouchPoint(containerSize: IntSizeCompat, userScale: Float, userOffset: OffsetCompat, containerPoint: OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.zoom.internal.containerPointToTouchPoint","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/container-point-to-touch-point.html","searchKeys":["containerPointToTouchPoint","fun containerPointToTouchPoint(containerSize: IntSizeCompat, userScale: Float, userOffset: OffsetCompat, containerPoint: OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.zoom.internal.containerPointToTouchPoint"]},{"name":"fun contains(offset: IntOffsetCompat): Boolean","description":"com.github.panpf.zoomimage.util.IntRectCompat.contains","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/contains.html","searchKeys":["contains","fun contains(offset: IntOffsetCompat): Boolean","com.github.panpf.zoomimage.util.IntRectCompat.contains"]},{"name":"fun contentPointToContainerPoint(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, contentPoint: OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.zoom.internal.contentPointToContainerPoint","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/content-point-to-container-point.html","searchKeys":["contentPointToContainerPoint","fun contentPointToContainerPoint(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, contentPoint: OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.zoom.internal.contentPointToContainerPoint"]},{"name":"fun contentPointToTouchPoint(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, userScale: Float, userOffset: OffsetCompat, contentPoint: OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.zoom.internal.contentPointToTouchPoint","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/content-point-to-touch-point.html","searchKeys":["contentPointToTouchPoint","fun contentPointToTouchPoint(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, userScale: Float, userOffset: OffsetCompat, contentPoint: OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.zoom.internal.contentPointToTouchPoint"]},{"name":"fun copy(pivotFractionX: Float = this.pivotFractionX, pivotFractionY: Float = this.pivotFractionY): TransformOriginCompat","description":"com.github.panpf.zoomimage.util.TransformOriginCompat.copy","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-origin-compat/copy.html","searchKeys":["copy","fun copy(pivotFractionX: Float = this.pivotFractionX, pivotFractionY: Float = this.pivotFractionY): TransformOriginCompat","com.github.panpf.zoomimage.util.TransformOriginCompat.copy"]},{"name":"fun copy(scaleX: Float = this.scaleX, scaleY: Float = this.scaleY): ScaleFactorCompat","description":"com.github.panpf.zoomimage.util.ScaleFactorCompat.copy","location":"zoomimage-core/com.github.panpf.zoomimage.util/-scale-factor-compat/copy.html","searchKeys":["copy","fun copy(scaleX: Float = this.scaleX, scaleY: Float = this.scaleY): ScaleFactorCompat","com.github.panpf.zoomimage.util.ScaleFactorCompat.copy"]},{"name":"fun copy(width: Float = this.width, height: Float = this.height): SizeCompat","description":"com.github.panpf.zoomimage.util.SizeCompat.copy","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/copy.html","searchKeys":["copy","fun copy(width: Float = this.width, height: Float = this.height): SizeCompat","com.github.panpf.zoomimage.util.SizeCompat.copy"]},{"name":"fun copy(width: Int = this.width, height: Int = this.height, mimeType: String = this.mimeType): ImageInfo","description":"com.github.panpf.zoomimage.subsampling.ImageInfo.copy","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-info/copy.html","searchKeys":["copy","fun copy(width: Int = this.width, height: Int = this.height, mimeType: String = this.mimeType): ImageInfo","com.github.panpf.zoomimage.subsampling.ImageInfo.copy"]},{"name":"fun copy(x: Float = this.x, y: Float = this.y): OffsetCompat","description":"com.github.panpf.zoomimage.util.OffsetCompat.copy","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/copy.html","searchKeys":["copy","fun copy(x: Float = this.x, y: Float = this.y): OffsetCompat","com.github.panpf.zoomimage.util.OffsetCompat.copy"]},{"name":"fun copy(x: Int = this.x, y: Int = this.y): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.copy","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/copy.html","searchKeys":["copy","fun copy(x: Int = this.x, y: Int = this.y): IntOffsetCompat","com.github.panpf.zoomimage.util.IntOffsetCompat.copy"]},{"name":"fun d(lazyMsg: () -> String)","description":"com.github.panpf.zoomimage.util.Logger.d","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/d.html","searchKeys":["d","fun d(lazyMsg: () -> String)","com.github.panpf.zoomimage.util.Logger.d"]},{"name":"fun d(msg: String)","description":"com.github.panpf.zoomimage.util.Logger.d","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/d.html","searchKeys":["d","fun d(msg: String)","com.github.panpf.zoomimage.util.Logger.d"]},{"name":"fun d(tr: Throwable?, lazyMsg: () -> String)","description":"com.github.panpf.zoomimage.util.Logger.d","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/d.html","searchKeys":["d","fun d(tr: Throwable?, lazyMsg: () -> String)","com.github.panpf.zoomimage.util.Logger.d"]},{"name":"fun d(tr: Throwable?, msg: String)","description":"com.github.panpf.zoomimage.util.Logger.d","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/d.html","searchKeys":["d","fun d(tr: Throwable?, msg: String)","com.github.panpf.zoomimage.util.Logger.d"]},{"name":"fun decode(key: String, srcRect: IntRectCompat, sampleSize: Int): TileImage?","description":"com.github.panpf.zoomimage.subsampling.internal.TileDecoder.decode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-decoder/decode.html","searchKeys":["decode","fun decode(key: String, srcRect: IntRectCompat, sampleSize: Int): TileImage?","com.github.panpf.zoomimage.subsampling.internal.TileDecoder.decode"]},{"name":"fun deflate(delta: Float): RectCompat","description":"com.github.panpf.zoomimage.util.RectCompat.deflate","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/deflate.html","searchKeys":["deflate","fun deflate(delta: Float): RectCompat","com.github.panpf.zoomimage.util.RectCompat.deflate"]},{"name":"fun deflate(delta: Int): IntRectCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.deflate","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/deflate.html","searchKeys":["deflate","fun deflate(delta: Int): IntRectCompat","com.github.panpf.zoomimage.util.IntRectCompat.deflate"]},{"name":"fun dynamic(multiple: Float = MULTIPLE): DynamicScalesCalculator","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.Companion.dynamic","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/-companion/dynamic.html","searchKeys":["dynamic","fun dynamic(multiple: Float = MULTIPLE): DynamicScalesCalculator","com.github.panpf.zoomimage.zoom.ScalesCalculator.Companion.dynamic"]},{"name":"fun e(lazyMsg: () -> String)","description":"com.github.panpf.zoomimage.util.Logger.e","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/e.html","searchKeys":["e","fun e(lazyMsg: () -> String)","com.github.panpf.zoomimage.util.Logger.e"]},{"name":"fun e(msg: String)","description":"com.github.panpf.zoomimage.util.Logger.e","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/e.html","searchKeys":["e","fun e(msg: String)","com.github.panpf.zoomimage.util.Logger.e"]},{"name":"fun e(tr: Throwable?, lazyMsg: () -> String)","description":"com.github.panpf.zoomimage.util.Logger.e","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/e.html","searchKeys":["e","fun e(tr: Throwable?, lazyMsg: () -> String)","com.github.panpf.zoomimage.util.Logger.e"]},{"name":"fun e(tr: Throwable?, msg: String)","description":"com.github.panpf.zoomimage.util.Logger.e","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/e.html","searchKeys":["e","fun e(tr: Throwable?, msg: String)","com.github.panpf.zoomimage.util.Logger.e"]},{"name":"fun fixed(multiple: Float = MULTIPLE): FixedScalesCalculator","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.Companion.fixed","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/-companion/fixed.html","searchKeys":["fixed","fun fixed(multiple: Float = MULTIPLE): FixedScalesCalculator","com.github.panpf.zoomimage.zoom.ScalesCalculator.Companion.fixed"]},{"name":"fun flush()","description":"com.github.panpf.zoomimage.util.Logger.flush","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/flush.html","searchKeys":["flush","fun flush()","com.github.panpf.zoomimage.util.Logger.flush"]},{"name":"fun get(key: String): TileImage?","description":"com.github.panpf.zoomimage.subsampling.internal.TileImageCacheHelper.get","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-image-cache-helper/get.html","searchKeys":["get","fun get(key: String): TileImage?","com.github.panpf.zoomimage.subsampling.internal.TileImageCacheHelper.get"]},{"name":"fun getDistance(): Float","description":"com.github.panpf.zoomimage.util.OffsetCompat.getDistance","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/get-distance.html","searchKeys":["getDistance","fun getDistance(): Float","com.github.panpf.zoomimage.util.OffsetCompat.getDistance"]},{"name":"fun getDistanceSquared(): Float","description":"com.github.panpf.zoomimage.util.OffsetCompat.getDistanceSquared","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/get-distance-squared.html","searchKeys":["getDistanceSquared","fun getDistanceSquared(): Float","com.github.panpf.zoomimage.util.OffsetCompat.getDistanceSquared"]},{"name":"fun getNextStepScale(): Float","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.getNextStepScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/get-next-step-scale.html","searchKeys":["getNextStepScale","fun getNextStepScale(): Float","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.getNextStepScale"]},{"name":"fun i(lazyMsg: () -> String)","description":"com.github.panpf.zoomimage.util.Logger.i","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/i.html","searchKeys":["i","fun i(lazyMsg: () -> String)","com.github.panpf.zoomimage.util.Logger.i"]},{"name":"fun i(msg: String)","description":"com.github.panpf.zoomimage.util.Logger.i","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/i.html","searchKeys":["i","fun i(msg: String)","com.github.panpf.zoomimage.util.Logger.i"]},{"name":"fun i(tr: Throwable?, lazyMsg: () -> String)","description":"com.github.panpf.zoomimage.util.Logger.i","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/i.html","searchKeys":["i","fun i(tr: Throwable?, lazyMsg: () -> String)","com.github.panpf.zoomimage.util.Logger.i"]},{"name":"fun i(tr: Throwable?, msg: String)","description":"com.github.panpf.zoomimage.util.Logger.i","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/i.html","searchKeys":["i","fun i(tr: Throwable?, msg: String)","com.github.panpf.zoomimage.util.Logger.i"]},{"name":"fun inflate(delta: Float): RectCompat","description":"com.github.panpf.zoomimage.util.RectCompat.inflate","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/inflate.html","searchKeys":["inflate","fun inflate(delta: Float): RectCompat","com.github.panpf.zoomimage.util.RectCompat.inflate"]},{"name":"fun inflate(delta: Int): IntRectCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.inflate","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/inflate.html","searchKeys":["inflate","fun inflate(delta: Int): IntRectCompat","com.github.panpf.zoomimage.util.IntRectCompat.inflate"]},{"name":"fun interface AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.AlignmentCompat","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-alignment-compat/index.html","searchKeys":["AlignmentCompat","fun interface AlignmentCompat","com.github.panpf.zoomimage.zoom.AlignmentCompat"]},{"name":"fun intersect(other: IntRectCompat): IntRectCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.intersect","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/intersect.html","searchKeys":["intersect","fun intersect(other: IntRectCompat): IntRectCompat","com.github.panpf.zoomimage.util.IntRectCompat.intersect"]},{"name":"fun intersect(other: RectCompat): RectCompat","description":"com.github.panpf.zoomimage.util.RectCompat.intersect","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/intersect.html","searchKeys":["intersect","fun intersect(other: RectCompat): RectCompat","com.github.panpf.zoomimage.util.RectCompat.intersect"]},{"name":"fun isEmpty(): Boolean","description":"com.github.panpf.zoomimage.util.SizeCompat.isEmpty","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","com.github.panpf.zoomimage.util.SizeCompat.isEmpty"]},{"name":"fun isLoggable(level: Logger.Level): Boolean","description":"com.github.panpf.zoomimage.util.Logger.isLoggable","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/is-loggable.html","searchKeys":["isLoggable","fun isLoggable(level: Logger.Level): Boolean","com.github.panpf.zoomimage.util.Logger.isLoggable"]},{"name":"fun isValid(): Boolean","description":"com.github.panpf.zoomimage.util.OffsetCompat.isValid","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/is-valid.html","searchKeys":["isValid","fun isValid(): Boolean","com.github.panpf.zoomimage.util.OffsetCompat.isValid"]},{"name":"fun lerp(start: IntOffsetCompat, stop: IntOffsetCompat, fraction: Float): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.lerp","location":"zoomimage-core/com.github.panpf.zoomimage.util/lerp.html","searchKeys":["lerp","fun lerp(start: IntOffsetCompat, stop: IntOffsetCompat, fraction: Float): IntOffsetCompat","com.github.panpf.zoomimage.util.lerp"]},{"name":"fun lerp(start: IntRectCompat, stop: IntRectCompat, fraction: Float): IntRectCompat","description":"com.github.panpf.zoomimage.util.lerp","location":"zoomimage-core/com.github.panpf.zoomimage.util/lerp.html","searchKeys":["lerp","fun lerp(start: IntRectCompat, stop: IntRectCompat, fraction: Float): IntRectCompat","com.github.panpf.zoomimage.util.lerp"]},{"name":"fun lerp(start: IntSizeCompat, stop: IntSizeCompat, fraction: Float): IntSizeCompat","description":"com.github.panpf.zoomimage.util.lerp","location":"zoomimage-core/com.github.panpf.zoomimage.util/lerp.html","searchKeys":["lerp","fun lerp(start: IntSizeCompat, stop: IntSizeCompat, fraction: Float): IntSizeCompat","com.github.panpf.zoomimage.util.lerp"]},{"name":"fun lerp(start: OffsetCompat, stop: OffsetCompat, fraction: Float): OffsetCompat","description":"com.github.panpf.zoomimage.util.lerp","location":"zoomimage-core/com.github.panpf.zoomimage.util/lerp.html","searchKeys":["lerp","fun lerp(start: OffsetCompat, stop: OffsetCompat, fraction: Float): OffsetCompat","com.github.panpf.zoomimage.util.lerp"]},{"name":"fun lerp(start: RectCompat, stop: RectCompat, fraction: Float): RectCompat","description":"com.github.panpf.zoomimage.util.lerp","location":"zoomimage-core/com.github.panpf.zoomimage.util/lerp.html","searchKeys":["lerp","fun lerp(start: RectCompat, stop: RectCompat, fraction: Float): RectCompat","com.github.panpf.zoomimage.util.lerp"]},{"name":"fun lerp(start: ScaleFactorCompat, stop: ScaleFactorCompat, fraction: Float): ScaleFactorCompat","description":"com.github.panpf.zoomimage.util.lerp","location":"zoomimage-core/com.github.panpf.zoomimage.util/lerp.html","searchKeys":["lerp","fun lerp(start: ScaleFactorCompat, stop: ScaleFactorCompat, fraction: Float): ScaleFactorCompat","com.github.panpf.zoomimage.util.lerp"]},{"name":"fun lerp(start: SizeCompat, stop: SizeCompat, fraction: Float): SizeCompat","description":"com.github.panpf.zoomimage.util.lerp","location":"zoomimage-core/com.github.panpf.zoomimage.util/lerp.html","searchKeys":["lerp","fun lerp(start: SizeCompat, stop: SizeCompat, fraction: Float): SizeCompat","com.github.panpf.zoomimage.util.lerp"]},{"name":"fun lerp(start: TransformCompat, stop: TransformCompat, fraction: Float): TransformCompat","description":"com.github.panpf.zoomimage.util.lerp","location":"zoomimage-core/com.github.panpf.zoomimage.util/lerp.html","searchKeys":["lerp","fun lerp(start: TransformCompat, stop: TransformCompat, fraction: Float): TransformCompat","com.github.panpf.zoomimage.util.lerp"]},{"name":"fun lerp(start: TransformOriginCompat, stop: TransformOriginCompat, fraction: Float): TransformOriginCompat","description":"com.github.panpf.zoomimage.util.lerp","location":"zoomimage-core/com.github.panpf.zoomimage.util/lerp.html","searchKeys":["lerp","fun lerp(start: TransformOriginCompat, stop: TransformOriginCompat, fraction: Float): TransformOriginCompat","com.github.panpf.zoomimage.util.lerp"]},{"name":"fun limitScaleWithRubberBand(currentScale: Float, targetScale: Float, minScale: Float, maxScale: Float, rubberBandRatio: Float): Float","description":"com.github.panpf.zoomimage.zoom.internal.limitScaleWithRubberBand","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/limit-scale-with-rubber-band.html","searchKeys":["limitScaleWithRubberBand","fun limitScaleWithRubberBand(currentScale: Float, targetScale: Float, minScale: Float, maxScale: Float, rubberBandRatio: Float): Float","com.github.panpf.zoomimage.zoom.internal.limitScaleWithRubberBand"]},{"name":"fun log(level: Logger.Level, lazyMsg: () -> String)","description":"com.github.panpf.zoomimage.util.Logger.log","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/log.html","searchKeys":["log","fun log(level: Logger.Level, lazyMsg: () -> String)","com.github.panpf.zoomimage.util.Logger.log"]},{"name":"fun log(level: Logger.Level, msg: String)","description":"com.github.panpf.zoomimage.util.Logger.log","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/log.html","searchKeys":["log","fun log(level: Logger.Level, msg: String)","com.github.panpf.zoomimage.util.Logger.log"]},{"name":"fun log(level: Logger.Level, tr: Throwable?, lazyMsg: () -> String)","description":"com.github.panpf.zoomimage.util.Logger.log","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/log.html","searchKeys":["log","fun log(level: Logger.Level, tr: Throwable?, lazyMsg: () -> String)","com.github.panpf.zoomimage.util.Logger.log"]},{"name":"fun log(level: Logger.Level, tr: Throwable?, msg: String)","description":"com.github.panpf.zoomimage.util.Logger.log","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/log.html","searchKeys":["log","fun log(level: Logger.Level, tr: Throwable?, msg: String)","com.github.panpf.zoomimage.util.Logger.log"]},{"name":"fun name(exifOrientation: Int): String","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.name","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/-companion/name.html","searchKeys":["name","fun name(exifOrientation: Int): String","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion.name"]},{"name":"fun name(state: Int): String","description":"com.github.panpf.zoomimage.subsampling.TileState.Companion.name","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-state/-companion/name.html","searchKeys":["name","fun name(state: Int): String","com.github.panpf.zoomimage.subsampling.TileState.Companion.name"]},{"name":"fun name(type: Int): String","description":"com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.name","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-continuous-transform-type/-companion/name.html","searchKeys":["name","fun name(type: Int): String","com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.name"]},{"name":"fun name(type: Int): String","description":"com.github.panpf.zoomimage.zoom.GestureType.Companion.name","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-gesture-type/-companion/name.html","searchKeys":["name","fun name(type: Int): String","com.github.panpf.zoomimage.zoom.GestureType.Companion.name"]},{"name":"fun overlaps(other: IntRectCompat): Boolean","description":"com.github.panpf.zoomimage.util.IntRectCompat.overlaps","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/overlaps.html","searchKeys":["overlaps","fun overlaps(other: IntRectCompat): Boolean","com.github.panpf.zoomimage.util.IntRectCompat.overlaps"]},{"name":"fun overlaps(other: RectCompat): Boolean","description":"com.github.panpf.zoomimage.util.RectCompat.overlaps","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/overlaps.html","searchKeys":["overlaps","fun overlaps(other: RectCompat): Boolean","com.github.panpf.zoomimage.util.RectCompat.overlaps"]},{"name":"fun parse(continuousTransformTypes: Int): List<Int>","description":"com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.parse","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-continuous-transform-type/-companion/parse.html","searchKeys":["parse","fun parse(continuousTransformTypes: Int): List<Int>","com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.parse"]},{"name":"fun parse(gestureTypes: Int): List<Int>","description":"com.github.panpf.zoomimage.zoom.GestureType.Companion.parse","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-gesture-type/-companion/parse.html","searchKeys":["parse","fun parse(gestureTypes: Int): List<Int>","com.github.panpf.zoomimage.zoom.GestureType.Companion.parse"]},{"name":"fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","description":"com.github.panpf.zoomimage.subsampling.internal.TileImageCacheHelper.put","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-image-cache-helper/put.html","searchKeys":["put","fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","com.github.panpf.zoomimage.subsampling.internal.TileImageCacheHelper.put"]},{"name":"fun refreshTiles(scale: Float, contentVisibleRect: IntRectCompat, rotation: Int, continuousTransformType: Int, caller: String): Int","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager.refreshTiles","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/refresh-tiles.html","searchKeys":["refreshTiles","fun refreshTiles(scale: Float, contentVisibleRect: IntRectCompat, rotation: Int, continuousTransformType: Int, caller: String): Int","com.github.panpf.zoomimage.subsampling.internal.TileManager.refreshTiles"]},{"name":"fun restart()","description":"com.github.panpf.zoomimage.subsampling.Tile.AnimationState.restart","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/-animation-state/restart.html","searchKeys":["restart","fun restart()","com.github.panpf.zoomimage.subsampling.Tile.AnimationState.restart"]},{"name":"fun setAnimationSpec(animationSpec: BaseZoomAnimationSpec)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setAnimationSpec","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-animation-spec.html","searchKeys":["setAnimationSpec","fun setAnimationSpec(animationSpec: BaseZoomAnimationSpec)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setAnimationSpec"]},{"name":"fun setContainerSize(containerSize: IntSizeCompat)","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setContainerSize","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/set-container-size.html","searchKeys":["setContainerSize","fun setContainerSize(containerSize: IntSizeCompat)","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setContainerSize"]},{"name":"fun setContentSize(contentSize: IntSizeCompat)","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setContentSize","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/set-content-size.html","searchKeys":["setContentSize","fun setContentSize(contentSize: IntSizeCompat)","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setContentSize"]},{"name":"fun setContinuousTransformType(continuousTransformType: Int)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContinuousTransformType","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-continuous-transform-type.html","searchKeys":["setContinuousTransformType","fun setContinuousTransformType(continuousTransformType: Int)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContinuousTransformType"]},{"name":"fun setCoroutineScope(coroutineScope: CoroutineScope?)","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setCoroutineScope","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/set-coroutine-scope.html","searchKeys":["setCoroutineScope","fun setCoroutineScope(coroutineScope: CoroutineScope?)","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setCoroutineScope"]},{"name":"fun setImage(imageSource: ImageSource.Factory?, imageInfo: ImageInfo? = null): Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/set-image.html","searchKeys":["setImage","fun setImage(imageSource: ImageSource.Factory?, imageInfo: ImageInfo? = null): Boolean","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setImage"]},{"name":"fun setImage(imageSource: ImageSource?, imageInfo: ImageInfo? = null): Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/set-image.html","searchKeys":["setImage","fun setImage(imageSource: ImageSource?, imageInfo: ImageInfo? = null): Boolean","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setImage"]},{"name":"fun setImage(subsamplingImage: SubsamplingImage?): Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/set-image.html","searchKeys":["setImage","fun setImage(subsamplingImage: SubsamplingImage?): Boolean","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setImage"]},{"name":"fun setKeepTransformWhenSameAspectRatioContentSizeChanged(keep: Boolean)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setKeepTransformWhenSameAspectRatioContentSizeChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-keep-transform-when-same-aspect-ratio-content-size-changed.html","searchKeys":["setKeepTransformWhenSameAspectRatioContentSizeChanged","fun setKeepTransformWhenSameAspectRatioContentSizeChanged(keep: Boolean)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setKeepTransformWhenSameAspectRatioContentSizeChanged"]},{"name":"fun setOneFingerScaleSpec(oneFingerScaleSpec: OneFingerScaleSpec)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setOneFingerScaleSpec","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-one-finger-scale-spec.html","searchKeys":["setOneFingerScaleSpec","fun setOneFingerScaleSpec(oneFingerScaleSpec: OneFingerScaleSpec)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setOneFingerScaleSpec"]},{"name":"fun setRegionDecoders(regionDecoders: List<RegionDecoder.Factory>)","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setRegionDecoders","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/set-region-decoders.html","searchKeys":["setRegionDecoders","fun setRegionDecoders(regionDecoders: List<RegionDecoder.Factory>)","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.setRegionDecoders"]},{"name":"fun setRubberBandScale(rubberBandScale: Boolean)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setRubberBandScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-rubber-band-scale.html","searchKeys":["setRubberBandScale","fun setRubberBandScale(rubberBandScale: Boolean)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setRubberBandScale"]},{"name":"fun setThreeStepScale(threeStepScale: Boolean)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setThreeStepScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-three-step-scale.html","searchKeys":["setThreeStepScale","fun setThreeStepScale(threeStepScale: Boolean)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setThreeStepScale"]},{"name":"fun setTileImage(tileImage: TileImage?, allowAnimate: Boolean)","description":"com.github.panpf.zoomimage.subsampling.Tile.setTileImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/set-tile-image.html","searchKeys":["setTileImage","fun setTileImage(tileImage: TileImage?, allowAnimate: Boolean)","com.github.panpf.zoomimage.subsampling.Tile.setTileImage"]},{"name":"fun stop()","description":"com.github.panpf.zoomimage.subsampling.Tile.AnimationState.stop","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/-animation-state/stop.html","searchKeys":["stop","fun stop()","com.github.panpf.zoomimage.subsampling.Tile.AnimationState.stop"]},{"name":"fun tileColor(state: Int, withinLoadArea: Boolean, fromCache: Boolean): Int","description":"com.github.panpf.zoomimage.subsampling.tileColor","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/tile-color.html","searchKeys":["tileColor","fun tileColor(state: Int, withinLoadArea: Boolean, fromCache: Boolean): Int","com.github.panpf.zoomimage.subsampling.tileColor"]},{"name":"fun toShortString(): String","description":"com.github.panpf.zoomimage.subsampling.ImageInfo.toShortString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-info/to-short-string.html","searchKeys":["toShortString","fun toShortString(): String","com.github.panpf.zoomimage.subsampling.ImageInfo.toShortString"]},{"name":"fun touchPointToContainerPoint(containerSize: IntSizeCompat, userScale: Float, userOffset: OffsetCompat, touchPoint: OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.zoom.internal.touchPointToContainerPoint","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/touch-point-to-container-point.html","searchKeys":["touchPointToContainerPoint","fun touchPointToContainerPoint(containerSize: IntSizeCompat, userScale: Float, userOffset: OffsetCompat, touchPoint: OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.zoom.internal.touchPointToContainerPoint"]},{"name":"fun touchPointToContentPoint(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, userScale: Float, userOffset: OffsetCompat, touchPoint: OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.zoom.internal.touchPointToContentPoint","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/touch-point-to-content-point.html","searchKeys":["touchPointToContentPoint","fun touchPointToContentPoint(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentScale: ContentScaleCompat, alignment: AlignmentCompat, rotation: Int, userScale: Float, userOffset: OffsetCompat, touchPoint: OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.zoom.internal.touchPointToContentPoint"]},{"name":"fun touchPointToContentPoint(touchPoint: OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.touchPointToContentPoint","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/touch-point-to-content-point.html","searchKeys":["touchPointToContentPoint","fun touchPointToContentPoint(touchPoint: OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.touchPointToContentPoint"]},{"name":"fun transformAboutEquals(one: TransformCompat, two: TransformCompat): Boolean","description":"com.github.panpf.zoomimage.zoom.internal.transformAboutEquals","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/transform-about-equals.html","searchKeys":["transformAboutEquals","fun transformAboutEquals(one: TransformCompat, two: TransformCompat): Boolean","com.github.panpf.zoomimage.zoom.internal.transformAboutEquals"]},{"name":"fun translate(offset: IntOffsetCompat): IntRectCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.translate","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/translate.html","searchKeys":["translate","fun translate(offset: IntOffsetCompat): IntRectCompat","com.github.panpf.zoomimage.util.IntRectCompat.translate"]},{"name":"fun translate(offset: OffsetCompat): RectCompat","description":"com.github.panpf.zoomimage.util.RectCompat.translate","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/translate.html","searchKeys":["translate","fun translate(offset: OffsetCompat): RectCompat","com.github.panpf.zoomimage.util.RectCompat.translate"]},{"name":"fun translate(translateX: Float, translateY: Float): RectCompat","description":"com.github.panpf.zoomimage.util.RectCompat.translate","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/translate.html","searchKeys":["translate","fun translate(translateX: Float, translateY: Float): RectCompat","com.github.panpf.zoomimage.util.RectCompat.translate"]},{"name":"fun translate(translateX: Int, translateY: Int): IntRectCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.translate","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/translate.html","searchKeys":["translate","fun translate(translateX: Int, translateY: Int): IntRectCompat","com.github.panpf.zoomimage.util.IntRectCompat.translate"]},{"name":"fun v(lazyMsg: () -> String)","description":"com.github.panpf.zoomimage.util.Logger.v","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/v.html","searchKeys":["v","fun v(lazyMsg: () -> String)","com.github.panpf.zoomimage.util.Logger.v"]},{"name":"fun v(msg: String)","description":"com.github.panpf.zoomimage.util.Logger.v","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/v.html","searchKeys":["v","fun v(msg: String)","com.github.panpf.zoomimage.util.Logger.v"]},{"name":"fun v(tr: Throwable?, lazyMsg: () -> String)","description":"com.github.panpf.zoomimage.util.Logger.v","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/v.html","searchKeys":["v","fun v(tr: Throwable?, lazyMsg: () -> String)","com.github.panpf.zoomimage.util.Logger.v"]},{"name":"fun v(tr: Throwable?, msg: String)","description":"com.github.panpf.zoomimage.util.Logger.v","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/v.html","searchKeys":["v","fun v(tr: Throwable?, msg: String)","com.github.panpf.zoomimage.util.Logger.v"]},{"name":"fun valueOf(value: String): Edge","description":"com.github.panpf.zoomimage.zoom.Edge.valueOf","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-edge/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Edge","com.github.panpf.zoomimage.zoom.Edge.valueOf"]},{"name":"fun valueOf(value: String): Logger.Level","description":"com.github.panpf.zoomimage.util.Logger.Level.valueOf","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Logger.Level","com.github.panpf.zoomimage.util.Logger.Level.valueOf"]},{"name":"fun values(): Array<Edge>","description":"com.github.panpf.zoomimage.zoom.Edge.values","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-edge/values.html","searchKeys":["values","fun values(): Array<Edge>","com.github.panpf.zoomimage.zoom.Edge.values"]},{"name":"fun values(): Array<Logger.Level>","description":"com.github.panpf.zoomimage.util.Logger.Level.values","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-level/values.html","searchKeys":["values","fun values(): Array<Logger.Level>","com.github.panpf.zoomimage.util.Logger.Level.values"]},{"name":"fun w(lazyMsg: () -> String)","description":"com.github.panpf.zoomimage.util.Logger.w","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/w.html","searchKeys":["w","fun w(lazyMsg: () -> String)","com.github.panpf.zoomimage.util.Logger.w"]},{"name":"fun w(msg: String)","description":"com.github.panpf.zoomimage.util.Logger.w","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/w.html","searchKeys":["w","fun w(msg: String)","com.github.panpf.zoomimage.util.Logger.w"]},{"name":"fun w(tr: Throwable?, lazyMsg: () -> String)","description":"com.github.panpf.zoomimage.util.Logger.w","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/w.html","searchKeys":["w","fun w(tr: Throwable?, lazyMsg: () -> String)","com.github.panpf.zoomimage.util.Logger.w"]},{"name":"fun w(tr: Throwable?, msg: String)","description":"com.github.panpf.zoomimage.util.Logger.w","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/w.html","searchKeys":["w","fun w(tr: Throwable?, msg: String)","com.github.panpf.zoomimage.util.Logger.w"]},{"name":"inline fun IntOffsetCompat.toOffset(): OffsetCompat","description":"com.github.panpf.zoomimage.util.toOffset","location":"zoomimage-core/com.github.panpf.zoomimage.util/to-offset.html","searchKeys":["toOffset","inline fun IntOffsetCompat.toOffset(): OffsetCompat","com.github.panpf.zoomimage.util.toOffset"]},{"name":"inline fun OffsetCompat.round(): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.round","location":"zoomimage-core/com.github.panpf.zoomimage.util/round.html","searchKeys":["round","inline fun OffsetCompat.round(): IntOffsetCompat","com.github.panpf.zoomimage.util.round"]},{"name":"inline fun OffsetCompat.takeOrElse(block: () -> OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.util.takeOrElse","location":"zoomimage-core/com.github.panpf.zoomimage.util/take-or-else.html","searchKeys":["takeOrElse","inline fun OffsetCompat.takeOrElse(block: () -> OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.util.takeOrElse"]},{"name":"inline fun ScaleFactorCompat.takeOrElse(block: () -> ScaleFactorCompat): ScaleFactorCompat","description":"com.github.panpf.zoomimage.util.takeOrElse","location":"zoomimage-core/com.github.panpf.zoomimage.util/take-or-else.html","searchKeys":["takeOrElse","inline fun ScaleFactorCompat.takeOrElse(block: () -> ScaleFactorCompat): ScaleFactorCompat","com.github.panpf.zoomimage.util.takeOrElse"]},{"name":"inline fun SizeCompat.takeOrElse(block: () -> SizeCompat): SizeCompat","description":"com.github.panpf.zoomimage.util.takeOrElse","location":"zoomimage-core/com.github.panpf.zoomimage.util/take-or-else.html","searchKeys":["takeOrElse","inline fun SizeCompat.takeOrElse(block: () -> SizeCompat): SizeCompat","com.github.panpf.zoomimage.util.takeOrElse"]},{"name":"inline operator fun Double.times(size: SizeCompat): SizeCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","inline operator fun Double.times(size: SizeCompat): SizeCompat","com.github.panpf.zoomimage.util.times"]},{"name":"inline operator fun Float.times(size: SizeCompat): SizeCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","inline operator fun Float.times(size: SizeCompat): SizeCompat","com.github.panpf.zoomimage.util.times"]},{"name":"inline operator fun Int.times(size: SizeCompat): SizeCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","inline operator fun Int.times(size: SizeCompat): SizeCompat","com.github.panpf.zoomimage.util.times"]},{"name":"inline operator fun component1(): Float","description":"com.github.panpf.zoomimage.util.ScaleFactorCompat.component1","location":"zoomimage-core/com.github.panpf.zoomimage.util/-scale-factor-compat/component1.html","searchKeys":["component1","inline operator fun component1(): Float","com.github.panpf.zoomimage.util.ScaleFactorCompat.component1"]},{"name":"inline operator fun component1(): Float","description":"com.github.panpf.zoomimage.util.SizeCompat.component1","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/component1.html","searchKeys":["component1","inline operator fun component1(): Float","com.github.panpf.zoomimage.util.SizeCompat.component1"]},{"name":"inline operator fun component1(): Float","description":"com.github.panpf.zoomimage.util.TransformOriginCompat.component1","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-origin-compat/component1.html","searchKeys":["component1","inline operator fun component1(): Float","com.github.panpf.zoomimage.util.TransformOriginCompat.component1"]},{"name":"inline operator fun component1(): Int","description":"com.github.panpf.zoomimage.util.IntSizeCompat.component1","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-size-compat/component1.html","searchKeys":["component1","inline operator fun component1(): Int","com.github.panpf.zoomimage.util.IntSizeCompat.component1"]},{"name":"inline operator fun component2(): Float","description":"com.github.panpf.zoomimage.util.ScaleFactorCompat.component2","location":"zoomimage-core/com.github.panpf.zoomimage.util/-scale-factor-compat/component2.html","searchKeys":["component2","inline operator fun component2(): Float","com.github.panpf.zoomimage.util.ScaleFactorCompat.component2"]},{"name":"inline operator fun component2(): Float","description":"com.github.panpf.zoomimage.util.SizeCompat.component2","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/component2.html","searchKeys":["component2","inline operator fun component2(): Float","com.github.panpf.zoomimage.util.SizeCompat.component2"]},{"name":"inline operator fun component2(): Float","description":"com.github.panpf.zoomimage.util.TransformOriginCompat.component2","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-origin-compat/component2.html","searchKeys":["component2","inline operator fun component2(): Float","com.github.panpf.zoomimage.util.TransformOriginCompat.component2"]},{"name":"inline operator fun component2(): Int","description":"com.github.panpf.zoomimage.util.IntSizeCompat.component2","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-size-compat/component2.html","searchKeys":["component2","inline operator fun component2(): Int","com.github.panpf.zoomimage.util.IntSizeCompat.component2"]},{"name":"inline operator fun minus(other: IntOffsetCompat): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.minus","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/minus.html","searchKeys":["minus","inline operator fun minus(other: IntOffsetCompat): IntOffsetCompat","com.github.panpf.zoomimage.util.IntOffsetCompat.minus"]},{"name":"inline operator fun plus(other: IntOffsetCompat): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.plus","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/plus.html","searchKeys":["plus","inline operator fun plus(other: IntOffsetCompat): IntOffsetCompat","com.github.panpf.zoomimage.util.IntOffsetCompat.plus"]},{"name":"inline operator fun unaryMinus(): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.unaryMinus","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/unary-minus.html","searchKeys":["unaryMinus","inline operator fun unaryMinus(): IntOffsetCompat","com.github.panpf.zoomimage.util.IntOffsetCompat.unaryMinus"]},{"name":"interface AnimationAdapter","description":"com.github.panpf.zoomimage.zoom.internal.AnimationAdapter","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-animation-adapter/index.html","searchKeys":["AnimationAdapter","interface AnimationAdapter","com.github.panpf.zoomimage.zoom.internal.AnimationAdapter"]},{"name":"interface BaseZoomAnimationSpec","description":"com.github.panpf.zoomimage.zoom.BaseZoomAnimationSpec","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-base-zoom-animation-spec/index.html","searchKeys":["BaseZoomAnimationSpec","interface BaseZoomAnimationSpec","com.github.panpf.zoomimage.zoom.BaseZoomAnimationSpec"]},{"name":"interface ContentScaleCompat","description":"com.github.panpf.zoomimage.zoom.ContentScaleCompat","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-content-scale-compat/index.html","searchKeys":["ContentScaleCompat","interface ContentScaleCompat","com.github.panpf.zoomimage.zoom.ContentScaleCompat"]},{"name":"interface Decider","description":"com.github.panpf.zoomimage.zoom.ReadMode.Decider","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-decider/index.html","searchKeys":["Decider","interface Decider","com.github.panpf.zoomimage.zoom.ReadMode.Decider"]},{"name":"interface Factory","description":"com.github.panpf.zoomimage.subsampling.ImageSource.Factory","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/-factory/index.html","searchKeys":["Factory","interface Factory","com.github.panpf.zoomimage.subsampling.ImageSource.Factory"]},{"name":"interface Factory","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/-factory/index.html","searchKeys":["Factory","interface Factory","com.github.panpf.zoomimage.subsampling.RegionDecoder.Factory"]},{"name":"interface ImageSource","description":"com.github.panpf.zoomimage.subsampling.ImageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/index.html","searchKeys":["ImageSource","interface ImageSource","com.github.panpf.zoomimage.subsampling.ImageSource"]},{"name":"interface PanToScaleTransformer","description":"com.github.panpf.zoomimage.zoom.PanToScaleTransformer","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-pan-to-scale-transformer/index.html","searchKeys":["PanToScaleTransformer","interface PanToScaleTransformer","com.github.panpf.zoomimage.zoom.PanToScaleTransformer"]},{"name":"interface Pipeline","description":"com.github.panpf.zoomimage.util.Logger.Pipeline","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-pipeline/index.html","searchKeys":["Pipeline","interface Pipeline","com.github.panpf.zoomimage.util.Logger.Pipeline"]},{"name":"interface RegionDecoder : AutoCloseable","description":"com.github.panpf.zoomimage.subsampling.RegionDecoder","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-region-decoder/index.html","searchKeys":["RegionDecoder","interface RegionDecoder : AutoCloseable","com.github.panpf.zoomimage.subsampling.RegionDecoder"]},{"name":"interface ScalesCalculator","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/index.html","searchKeys":["ScalesCalculator","interface ScalesCalculator","com.github.panpf.zoomimage.zoom.ScalesCalculator"]},{"name":"interface TileImage","description":"com.github.panpf.zoomimage.subsampling.TileImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-image/index.html","searchKeys":["TileImage","interface TileImage","com.github.panpf.zoomimage.subsampling.TileImage"]},{"name":"interface TileImageCache","description":"com.github.panpf.zoomimage.subsampling.TileImageCache","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-image-cache/index.html","searchKeys":["TileImageCache","interface TileImageCache","com.github.panpf.zoomimage.subsampling.TileImageCache"]},{"name":"interface TileImageConvertor","description":"com.github.panpf.zoomimage.subsampling.internal.TileImageConvertor","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-image-convertor/index.html","searchKeys":["TileImageConvertor","interface TileImageConvertor","com.github.panpf.zoomimage.subsampling.internal.TileImageConvertor"]},{"name":"interface ZoomableBridge","description":"com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-zoomable-bridge/index.html","searchKeys":["ZoomableBridge","interface ZoomableBridge","com.github.panpf.zoomimage.subsampling.internal.ZoomableBridge"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.subsampling.ImageSource.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.subsampling.ImageSource.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.subsampling.TileAnimationSpec.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-animation-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.subsampling.TileAnimationSpec.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.subsampling.TileState.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-state/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.subsampling.TileState.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.subsampling.internal.TileManager.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.util.IntOffsetCompat.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.util.IntRectCompat.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.util.IntRectCompat.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.util.IntSizeCompat.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-size-compat/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.util.IntSizeCompat.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.util.OffsetCompat.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.util.OffsetCompat.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.util.RectCompat.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.util.RectCompat.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.util.ScaleFactorCompat.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.util/-scale-factor-compat/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.util.ScaleFactorCompat.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.util.SizeCompat.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.util.SizeCompat.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.util.TransformCompat.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.util.TransformCompat.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.util.TransformOriginCompat.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-origin-compat/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.util.TransformOriginCompat.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-alignment-compat/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.BaseZoomAnimationSpec.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-base-zoom-animation-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.BaseZoomAnimationSpec.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.ContainerWhitespace.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-container-whitespace/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.ContainerWhitespace.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-content-scale-compat/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-continuous-transform-type/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.GestureType.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-gesture-type/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.GestureType.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.OneFingerScaleSpec.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-one-finger-scale-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.OneFingerScaleSpec.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.PanToScaleTransformer.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-pan-to-scale-transformer/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.PanToScaleTransformer.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.ReadMode.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.ReadMode.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.ReadMode.Decider.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-decider/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.ReadMode.Decider.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.ScalesCalculator.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.ScrollEdge.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scroll-edge/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.ScrollEdge.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.internal.InitialZoom.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-initial-zoom/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.internal.InitialZoom.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.Companion"]},{"name":"open class BitmapTileImage(val bitmap: TileBitmap, val key: String, val fromCache: Boolean) : TileImage","description":"com.github.panpf.zoomimage.subsampling.BitmapTileImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-bitmap-tile-image/index.html","searchKeys":["BitmapTileImage","open class BitmapTileImage(val bitmap: TileBitmap, val key: String, val fromCache: Boolean) : TileImage","com.github.panpf.zoomimage.subsampling.BitmapTileImage"]},{"name":"open fun calculateWithBase(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, contentScale: ContentScaleCompat, baseScale: Float, initialScale: Float): ScalesCalculator.Result","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.calculateWithBase","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/calculate-with-base.html","searchKeys":["calculateWithBase","open fun calculateWithBase(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, contentScale: ContentScaleCompat, baseScale: Float, initialScale: Float): ScalesCalculator.Result","com.github.panpf.zoomimage.zoom.ScalesCalculator.calculateWithBase"]},{"name":"open fun checkSupport(mimeType: String): Boolean?","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.checkSupport","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/-factory/check-support.html","searchKeys":["checkSupport","open fun checkSupport(mimeType: String): Boolean?","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.checkSupport"]},{"name":"open fun close()","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.close","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/close.html","searchKeys":["close","open fun close()","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.close"]},{"name":"open fun copy(): <Error class: unknown class>","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.copy","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/copy.html","searchKeys":["copy","open fun copy(): <Error class: unknown class>","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.copy"]},{"name":"open fun create(subsamplingImage: <Error class: unknown class>, imageSource: <Error class: unknown class>): AndroidRegionDecoder","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.create","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/-factory/create.html","searchKeys":["create","open fun create(subsamplingImage: <Error class: unknown class>, imageSource: <Error class: unknown class>): AndroidRegionDecoder","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.create"]},{"name":"open fun decodeRegion(key: String, region: <Error class: unknown class>, sampleSize: Int): <Error class: unknown class>","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.decodeRegion","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/decode-region.html","searchKeys":["decodeRegion","open fun decodeRegion(key: String, region: <Error class: unknown class>, sampleSize: Int): <Error class: unknown class>","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.decodeRegion"]},{"name":"open fun flush()","description":"com.github.panpf.zoomimage.util.AndroidLogPipeline.flush","location":"zoomimage-core/com.github.panpf.zoomimage.util/-android-log-pipeline/flush.html","searchKeys":["flush","open fun flush()","com.github.panpf.zoomimage.util.AndroidLogPipeline.flush"]},{"name":"open fun log(level: <Error class: unknown class>, tag: String, msg: String, tr: Throwable?)","description":"com.github.panpf.zoomimage.util.AndroidLogPipeline.log","location":"zoomimage-core/com.github.panpf.zoomimage.util/-android-log-pipeline/log.html","searchKeys":["log","open fun log(level: <Error class: unknown class>, tag: String, msg: String, tr: Throwable?)","com.github.panpf.zoomimage.util.AndroidLogPipeline.log"]},{"name":"open fun openSource(): <Error class: unknown class>","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.openSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[ios]-kotlin-resource-image-source/open-source.html","searchKeys":["openSource","open fun openSource(): <Error class: unknown class>","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.openSource"]},{"name":"open fun openSource(): Source","description":"com.github.panpf.zoomimage.subsampling.AssetImageSource.openSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-asset-image-source/open-source.html","searchKeys":["openSource","open fun openSource(): Source","com.github.panpf.zoomimage.subsampling.AssetImageSource.openSource"]},{"name":"open fun openSource(): Source","description":"com.github.panpf.zoomimage.subsampling.ContentImageSource.openSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-content-image-source/open-source.html","searchKeys":["openSource","open fun openSource(): Source","com.github.panpf.zoomimage.subsampling.ContentImageSource.openSource"]},{"name":"open fun openSource(): Source","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.openSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[desktop]-kotlin-resource-image-source/open-source.html","searchKeys":["openSource","open fun openSource(): Source","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.openSource"]},{"name":"open fun openSource(): Source","description":"com.github.panpf.zoomimage.subsampling.ResourceImageSource.openSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-resource-image-source/open-source.html","searchKeys":["openSource","open fun openSource(): Source","com.github.panpf.zoomimage.subsampling.ResourceImageSource.openSource"]},{"name":"open fun prepare()","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.prepare","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/prepare.html","searchKeys":["prepare","open fun prepare()","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.prepare"]},{"name":"open fun setIsDisplayed(displayed: Boolean)","description":"com.github.panpf.zoomimage.subsampling.TileImage.setIsDisplayed","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-image/set-is-displayed.html","searchKeys":["setIsDisplayed","open fun setIsDisplayed(displayed: Boolean)","com.github.panpf.zoomimage.subsampling.TileImage.setIsDisplayed"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.AssetImageSource.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-asset-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.AssetImageSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.BitmapTileImage.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-bitmap-tile-image/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.BitmapTileImage.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-byte-array-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.ContentImageSource.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-content-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.ContentImageSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.FileImageSource.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-file-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.FileImageSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/-wrapper-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[desktop]-kotlin-resource-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[ios]-kotlin-resource-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.ResourceImageSource.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-resource-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.ResourceImageSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.Tile.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.Tile.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.equals","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.util.Logger.equals","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.util.Logger.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer.equals","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-default-pan-to-scale-transformer/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.equals","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-long-image-decider/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.equals","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.equals"]},{"name":"open override fun align(size: IntSizeCompat, space: IntSizeCompat, ltrLayout: Boolean): IntOffsetCompat","description":"com.github.panpf.zoomimage.zoom.BiasAlignmentCompat.align","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-bias-alignment-compat/align.html","searchKeys":["align","open override fun align(size: IntSizeCompat, space: IntSizeCompat, ltrLayout: Boolean): IntOffsetCompat","com.github.panpf.zoomimage.zoom.BiasAlignmentCompat.align"]},{"name":"open override fun calculate(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, contentScale: ContentScaleCompat, minScale: Float, initialScale: Float): ScalesCalculator.Result","description":"com.github.panpf.zoomimage.zoom.DynamicScalesCalculator.calculate","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-dynamic-scales-calculator/calculate.html","searchKeys":["calculate","open override fun calculate(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, contentScale: ContentScaleCompat, minScale: Float, initialScale: Float): ScalesCalculator.Result","com.github.panpf.zoomimage.zoom.DynamicScalesCalculator.calculate"]},{"name":"open override fun calculate(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, contentScale: ContentScaleCompat, minScale: Float, initialScale: Float): ScalesCalculator.Result","description":"com.github.panpf.zoomimage.zoom.FixedScalesCalculator.calculate","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-fixed-scales-calculator/calculate.html","searchKeys":["calculate","open override fun calculate(containerSize: IntSizeCompat, contentSize: IntSizeCompat, contentOriginSize: IntSizeCompat, contentScale: ContentScaleCompat, minScale: Float, initialScale: Float): ScalesCalculator.Result","com.github.panpf.zoomimage.zoom.FixedScalesCalculator.calculate"]},{"name":"open override fun checkSupport(mimeType: String): Boolean?","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.checkSupport","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/-factory/check-support.html","searchKeys":["checkSupport","open override fun checkSupport(mimeType: String): Boolean?","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.checkSupport"]},{"name":"open override fun close()","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.close","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/close.html","searchKeys":["close","open override fun close()","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.close"]},{"name":"open override fun close()","description":"com.github.panpf.zoomimage.subsampling.internal.TileDecoder.close","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-decoder/close.html","searchKeys":["close","open override fun close()","com.github.panpf.zoomimage.subsampling.internal.TileDecoder.close"]},{"name":"open override fun computeScaleFactor(srcSize: SizeCompat, dstSize: SizeCompat): ScaleFactorCompat","description":"com.github.panpf.zoomimage.zoom.FixedScale.computeScaleFactor","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-fixed-scale/compute-scale-factor.html","searchKeys":["computeScaleFactor","open override fun computeScaleFactor(srcSize: SizeCompat, dstSize: SizeCompat): ScaleFactorCompat","com.github.panpf.zoomimage.zoom.FixedScale.computeScaleFactor"]},{"name":"open override fun copy(): RegionDecoder","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.copy","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/copy.html","searchKeys":["copy","open override fun copy(): RegionDecoder","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.copy"]},{"name":"open override fun create(subsamplingImage: SubsamplingImage, imageSource: ImageSource): SkiaRegionDecoder","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.create","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/-factory/create.html","searchKeys":["create","open override fun create(subsamplingImage: SubsamplingImage, imageSource: ImageSource): SkiaRegionDecoder","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.create"]},{"name":"open override fun decodeRegion(key: String, region: IntRectCompat, sampleSize: Int): BitmapTileImage","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.decodeRegion","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/decode-region.html","searchKeys":["decodeRegion","open override fun decodeRegion(key: String, region: IntRectCompat, sampleSize: Int): BitmapTileImage","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.decodeRegion"]},{"name":"open override fun flush()","description":"com.github.panpf.zoomimage.util.PrintlnLogPipeline.flush","location":"zoomimage-core/com.github.panpf.zoomimage.util/-println-log-pipeline/flush.html","searchKeys":["flush","open override fun flush()","com.github.panpf.zoomimage.util.PrintlnLogPipeline.flush"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.AssetImageSource.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-asset-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.AssetImageSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.BitmapTileImage.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-bitmap-tile-image/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.BitmapTileImage.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-byte-array-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.ContentImageSource.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-content-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.ContentImageSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.FileImageSource.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-file-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.FileImageSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/-wrapper-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[desktop]-kotlin-resource-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[ios]-kotlin-resource-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.ResourceImageSource.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-resource-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.ResourceImageSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.Tile.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.Tile.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.util.Logger.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.util.Logger.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-default-pan-to-scale-transformer/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-long-image-decider/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.hashCode","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.hashCode"]},{"name":"open override fun log(level: Logger.Level, tag: String, msg: String, tr: Throwable?)","description":"com.github.panpf.zoomimage.util.PrintlnLogPipeline.log","location":"zoomimage-core/com.github.panpf.zoomimage.util/-println-log-pipeline/log.html","searchKeys":["log","open override fun log(level: Logger.Level, tag: String, msg: String, tr: Throwable?)","com.github.panpf.zoomimage.util.PrintlnLogPipeline.log"]},{"name":"open override fun openSource(): Source","description":"com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.openSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-byte-array-image-source/open-source.html","searchKeys":["openSource","open override fun openSource(): Source","com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.openSource"]},{"name":"open override fun openSource(): Source","description":"com.github.panpf.zoomimage.subsampling.FileImageSource.openSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-file-image-source/open-source.html","searchKeys":["openSource","open override fun openSource(): Source","com.github.panpf.zoomimage.subsampling.FileImageSource.openSource"]},{"name":"open override fun prepare()","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.prepare","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/prepare.html","searchKeys":["prepare","open override fun prepare()","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.prepare"]},{"name":"open override fun recycle()","description":"com.github.panpf.zoomimage.subsampling.BitmapTileImage.recycle","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-bitmap-tile-image/recycle.html","searchKeys":["recycle","open override fun recycle()","com.github.panpf.zoomimage.subsampling.BitmapTileImage.recycle"]},{"name":"open override fun should(contentSize: IntSizeCompat, containerSize: IntSizeCompat): Boolean","description":"com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.should","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-long-image-decider/should.html","searchKeys":["should","open override fun should(contentSize: IntSizeCompat, containerSize: IntSizeCompat): Boolean","com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.should"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.AssetImageSource.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-asset-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.AssetImageSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.BitmapTileImage.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-bitmap-tile-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.BitmapTileImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-byte-array-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.ContentImageSource.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-content-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.ContentImageSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.FileImageSource.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-file-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.FileImageSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.ImageInfo.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-info/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.ImageInfo.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/-wrapper-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[desktop]-kotlin-resource-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[ios]-kotlin-resource-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.ResourceImageSource.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-resource-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.ResourceImageSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.Tile.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.Tile.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.internal.TileDecoder.toString","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-decoder/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.internal.TileDecoder.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.util.AndroidLogPipeline.toString","location":"zoomimage-core/com.github.panpf.zoomimage.util/-android-log-pipeline/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.util.AndroidLogPipeline.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.toString","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.util.IntOffsetCompat.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.util.IntRectCompat.toString","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.util.IntRectCompat.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.util.IntSizeCompat.toString","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-size-compat/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.util.IntSizeCompat.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.util.Logger.toString","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.util.Logger.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.util.OffsetCompat.toString","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.util.OffsetCompat.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.util.PrintlnLogPipeline.toString","location":"zoomimage-core/com.github.panpf.zoomimage.util/-println-log-pipeline/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.util.PrintlnLogPipeline.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.util.RectCompat.toString","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.util.RectCompat.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.util.ScaleFactorCompat.toString","location":"zoomimage-core/com.github.panpf.zoomimage.util/-scale-factor-compat/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.util.ScaleFactorCompat.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.util.SizeCompat.toString","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.util.SizeCompat.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.util.TransformCompat.toString","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.util.TransformCompat.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.util.TransformOriginCompat.toString","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-origin-compat/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.util.TransformOriginCompat.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer.toString","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-default-pan-to-scale-transformer/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.zoom.DynamicScalesCalculator.toString","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-dynamic-scales-calculator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.zoom.DynamicScalesCalculator.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.zoom.FixedScalesCalculator.toString","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-fixed-scales-calculator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.zoom.FixedScalesCalculator.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.toString","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-long-image-decider/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.Result.toString","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/-result/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.zoom.ScalesCalculator.Result.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.toString","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.toString"]},{"name":"open override fun transform(panY: Float): Float","description":"com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer.transform","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-default-pan-to-scale-transformer/transform.html","searchKeys":["transform","open override fun transform(panY: Float): Float","com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer.transform"]},{"name":"open override val byteCount: Long","description":"com.github.panpf.zoomimage.subsampling.BitmapTileImage.byteCount","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-bitmap-tile-image/byte-count.html","searchKeys":["byteCount","open override val byteCount: Long","com.github.panpf.zoomimage.subsampling.BitmapTileImage.byteCount"]},{"name":"open override val fromCache: Boolean","description":"com.github.panpf.zoomimage.subsampling.BitmapTileImage.fromCache","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-bitmap-tile-image/from-cache.html","searchKeys":["fromCache","open override val fromCache: Boolean","com.github.panpf.zoomimage.subsampling.BitmapTileImage.fromCache"]},{"name":"open override val height: Int","description":"com.github.panpf.zoomimage.subsampling.BitmapTileImage.height","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-bitmap-tile-image/height.html","searchKeys":["height","open override val height: Int","com.github.panpf.zoomimage.subsampling.BitmapTileImage.height"]},{"name":"open override val imageInfo: ImageInfo","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.imageInfo","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/image-info.html","searchKeys":["imageInfo","open override val imageInfo: ImageInfo","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.imageInfo"]},{"name":"open override val isRecycled: Boolean","description":"com.github.panpf.zoomimage.subsampling.BitmapTileImage.isRecycled","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-bitmap-tile-image/is-recycled.html","searchKeys":["isRecycled","open override val isRecycled: Boolean","com.github.panpf.zoomimage.subsampling.BitmapTileImage.isRecycled"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.subsampling.BitmapTileImage.key","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-bitmap-tile-image/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.subsampling.BitmapTileImage.key"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.key","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-byte-array-image-source/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.key"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.subsampling.FileImageSource.key","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-file-image-source/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.subsampling.FileImageSource.key"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.key","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/-wrapper-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.key"]},{"name":"open override val subsamplingImage: SubsamplingImage","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.subsamplingImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/subsampling-image.html","searchKeys":["subsamplingImage","open override val subsamplingImage: SubsamplingImage","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.subsamplingImage"]},{"name":"open override val width: Int","description":"com.github.panpf.zoomimage.subsampling.BitmapTileImage.width","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-bitmap-tile-image/width.html","searchKeys":["width","open override val width: Int","com.github.panpf.zoomimage.subsampling.BitmapTileImage.width"]},{"name":"open suspend fun accept(subsamplingImage: <Error class: unknown class>): Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.accept","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/-factory/accept.html","searchKeys":["accept","open suspend fun accept(subsamplingImage: <Error class: unknown class>): Boolean","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.Factory.accept"]},{"name":"open suspend override fun accept(subsamplingImage: SubsamplingImage): Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.accept","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/-factory/accept.html","searchKeys":["accept","open suspend override fun accept(subsamplingImage: SubsamplingImage): Boolean","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.Factory.accept"]},{"name":"open suspend override fun create(): ImageSource","description":"com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.create","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/-wrapper-factory/create.html","searchKeys":["create","open suspend override fun create(): ImageSource","com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.create"]},{"name":"open val imageInfo: <Error class: unknown class>","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.imageInfo","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/image-info.html","searchKeys":["imageInfo","open val imageInfo: <Error class: unknown class>","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.imageInfo"]},{"name":"open val key: String","description":"com.github.panpf.zoomimage.subsampling.AssetImageSource.key","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-asset-image-source/key.html","searchKeys":["key","open val key: String","com.github.panpf.zoomimage.subsampling.AssetImageSource.key"]},{"name":"open val key: String","description":"com.github.panpf.zoomimage.subsampling.ContentImageSource.key","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-content-image-source/key.html","searchKeys":["key","open val key: String","com.github.panpf.zoomimage.subsampling.ContentImageSource.key"]},{"name":"open val key: String","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.key","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[desktop]-kotlin-resource-image-source/key.html","searchKeys":["key","open val key: String","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.key"]},{"name":"open val key: String","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.key","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[ios]-kotlin-resource-image-source/key.html","searchKeys":["key","open val key: String","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.key"]},{"name":"open val key: String","description":"com.github.panpf.zoomimage.subsampling.ResourceImageSource.key","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-resource-image-source/key.html","searchKeys":["key","open val key: String","com.github.panpf.zoomimage.subsampling.ResourceImageSource.key"]},{"name":"open val subsamplingImage: <Error class: unknown class>","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.subsamplingImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/subsampling-image.html","searchKeys":["subsamplingImage","open val subsamplingImage: <Error class: unknown class>","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.subsamplingImage"]},{"name":"operator fun Int.times(size: IntSizeCompat): IntSizeCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun Int.times(size: IntSizeCompat): IntSizeCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun IntOffsetCompat.div(scaleFactor: ScaleFactorCompat): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/div.html","searchKeys":["div","operator fun IntOffsetCompat.div(scaleFactor: ScaleFactorCompat): IntOffsetCompat","com.github.panpf.zoomimage.util.div"]},{"name":"operator fun IntOffsetCompat.minus(offset: OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.util.minus","location":"zoomimage-core/com.github.panpf.zoomimage.util/minus.html","searchKeys":["minus","operator fun IntOffsetCompat.minus(offset: OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.util.minus"]},{"name":"operator fun IntOffsetCompat.plus(offset: OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.util.plus","location":"zoomimage-core/com.github.panpf.zoomimage.util/plus.html","searchKeys":["plus","operator fun IntOffsetCompat.plus(offset: OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.util.plus"]},{"name":"operator fun IntOffsetCompat.times(scaleFactor: ScaleFactorCompat): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun IntOffsetCompat.times(scaleFactor: ScaleFactorCompat): IntOffsetCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun IntRectCompat.div(scale: Float): IntRectCompat","description":"com.github.panpf.zoomimage.util.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/div.html","searchKeys":["div","operator fun IntRectCompat.div(scale: Float): IntRectCompat","com.github.panpf.zoomimage.util.div"]},{"name":"operator fun IntRectCompat.div(scaleFactor: ScaleFactorCompat): IntRectCompat","description":"com.github.panpf.zoomimage.util.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/div.html","searchKeys":["div","operator fun IntRectCompat.div(scaleFactor: ScaleFactorCompat): IntRectCompat","com.github.panpf.zoomimage.util.div"]},{"name":"operator fun IntRectCompat.times(scale: Float): IntRectCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun IntRectCompat.times(scale: Float): IntRectCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun IntRectCompat.times(scaleFactor: ScaleFactorCompat): IntRectCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun IntRectCompat.times(scaleFactor: ScaleFactorCompat): IntRectCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun IntSizeCompat.div(scale: Float): IntSizeCompat","description":"com.github.panpf.zoomimage.util.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/div.html","searchKeys":["div","operator fun IntSizeCompat.div(scale: Float): IntSizeCompat","com.github.panpf.zoomimage.util.div"]},{"name":"operator fun IntSizeCompat.div(scaleFactor: ScaleFactorCompat): IntSizeCompat","description":"com.github.panpf.zoomimage.util.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/div.html","searchKeys":["div","operator fun IntSizeCompat.div(scaleFactor: ScaleFactorCompat): IntSizeCompat","com.github.panpf.zoomimage.util.div"]},{"name":"operator fun IntSizeCompat.minus(other: IntSizeCompat): IntSizeCompat","description":"com.github.panpf.zoomimage.util.minus","location":"zoomimage-core/com.github.panpf.zoomimage.util/minus.html","searchKeys":["minus","operator fun IntSizeCompat.minus(other: IntSizeCompat): IntSizeCompat","com.github.panpf.zoomimage.util.minus"]},{"name":"operator fun IntSizeCompat.plus(other: IntSizeCompat): IntSizeCompat","description":"com.github.panpf.zoomimage.util.plus","location":"zoomimage-core/com.github.panpf.zoomimage.util/plus.html","searchKeys":["plus","operator fun IntSizeCompat.plus(other: IntSizeCompat): IntSizeCompat","com.github.panpf.zoomimage.util.plus"]},{"name":"operator fun IntSizeCompat.times(origin: TransformOriginCompat): IntSizeCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun IntSizeCompat.times(origin: TransformOriginCompat): IntSizeCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun IntSizeCompat.times(scale: Float): IntSizeCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun IntSizeCompat.times(scale: Float): IntSizeCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun IntSizeCompat.times(scaleFactor: ScaleFactorCompat): IntSizeCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun IntSizeCompat.times(scaleFactor: ScaleFactorCompat): IntSizeCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun OffsetCompat.div(scaleFactor: ScaleFactorCompat): OffsetCompat","description":"com.github.panpf.zoomimage.util.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/div.html","searchKeys":["div","operator fun OffsetCompat.div(scaleFactor: ScaleFactorCompat): OffsetCompat","com.github.panpf.zoomimage.util.div"]},{"name":"operator fun OffsetCompat.minus(offset: IntOffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.util.minus","location":"zoomimage-core/com.github.panpf.zoomimage.util/minus.html","searchKeys":["minus","operator fun OffsetCompat.minus(offset: IntOffsetCompat): OffsetCompat","com.github.panpf.zoomimage.util.minus"]},{"name":"operator fun OffsetCompat.plus(offset: IntOffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.util.plus","location":"zoomimage-core/com.github.panpf.zoomimage.util/plus.html","searchKeys":["plus","operator fun OffsetCompat.plus(offset: IntOffsetCompat): OffsetCompat","com.github.panpf.zoomimage.util.plus"]},{"name":"operator fun OffsetCompat.times(scaleFactor: ScaleFactorCompat): OffsetCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun OffsetCompat.times(scaleFactor: ScaleFactorCompat): OffsetCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun RectCompat.div(scale: Float): RectCompat","description":"com.github.panpf.zoomimage.util.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/div.html","searchKeys":["div","operator fun RectCompat.div(scale: Float): RectCompat","com.github.panpf.zoomimage.util.div"]},{"name":"operator fun RectCompat.div(scaleFactor: ScaleFactorCompat): RectCompat","description":"com.github.panpf.zoomimage.util.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/div.html","searchKeys":["div","operator fun RectCompat.div(scaleFactor: ScaleFactorCompat): RectCompat","com.github.panpf.zoomimage.util.div"]},{"name":"operator fun RectCompat.times(scale: Float): RectCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun RectCompat.times(scale: Float): RectCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun RectCompat.times(scaleFactor: ScaleFactorCompat): RectCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun RectCompat.times(scaleFactor: ScaleFactorCompat): RectCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun ScaleFactorCompat.div(scaleFactor: ScaleFactorCompat): ScaleFactorCompat","description":"com.github.panpf.zoomimage.util.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/div.html","searchKeys":["div","operator fun ScaleFactorCompat.div(scaleFactor: ScaleFactorCompat): ScaleFactorCompat","com.github.panpf.zoomimage.util.div"]},{"name":"operator fun ScaleFactorCompat.times(scaleFactor: ScaleFactorCompat): ScaleFactorCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun ScaleFactorCompat.times(scaleFactor: ScaleFactorCompat): ScaleFactorCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun ScaleFactorCompat.times(size: SizeCompat): SizeCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun ScaleFactorCompat.times(size: SizeCompat): SizeCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun SizeCompat.div(scaleFactor: ScaleFactorCompat): SizeCompat","description":"com.github.panpf.zoomimage.util.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/div.html","searchKeys":["div","operator fun SizeCompat.div(scaleFactor: ScaleFactorCompat): SizeCompat","com.github.panpf.zoomimage.util.div"]},{"name":"operator fun SizeCompat.minus(other: SizeCompat): SizeCompat","description":"com.github.panpf.zoomimage.util.minus","location":"zoomimage-core/com.github.panpf.zoomimage.util/minus.html","searchKeys":["minus","operator fun SizeCompat.minus(other: SizeCompat): SizeCompat","com.github.panpf.zoomimage.util.minus"]},{"name":"operator fun SizeCompat.plus(other: SizeCompat): SizeCompat","description":"com.github.panpf.zoomimage.util.plus","location":"zoomimage-core/com.github.panpf.zoomimage.util/plus.html","searchKeys":["plus","operator fun SizeCompat.plus(other: SizeCompat): SizeCompat","com.github.panpf.zoomimage.util.plus"]},{"name":"operator fun SizeCompat.times(origin: TransformOriginCompat): SizeCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun SizeCompat.times(origin: TransformOriginCompat): SizeCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun SizeCompat.times(scaleFactor: ScaleFactorCompat): SizeCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun SizeCompat.times(scaleFactor: ScaleFactorCompat): SizeCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun TransformCompat.div(scaleFactor: ScaleFactorCompat): TransformCompat","description":"com.github.panpf.zoomimage.util.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/div.html","searchKeys":["div","operator fun TransformCompat.div(scaleFactor: ScaleFactorCompat): TransformCompat","com.github.panpf.zoomimage.util.div"]},{"name":"operator fun TransformCompat.minus(other: TransformCompat): TransformCompat","description":"com.github.panpf.zoomimage.util.minus","location":"zoomimage-core/com.github.panpf.zoomimage.util/minus.html","searchKeys":["minus","operator fun TransformCompat.minus(other: TransformCompat): TransformCompat","com.github.panpf.zoomimage.util.minus"]},{"name":"operator fun TransformCompat.plus(other: TransformCompat): TransformCompat","description":"com.github.panpf.zoomimage.util.plus","location":"zoomimage-core/com.github.panpf.zoomimage.util/plus.html","searchKeys":["plus","operator fun TransformCompat.plus(other: TransformCompat): TransformCompat","com.github.panpf.zoomimage.util.plus"]},{"name":"operator fun TransformCompat.times(scaleFactor: ScaleFactorCompat): TransformCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun TransformCompat.times(scaleFactor: ScaleFactorCompat): TransformCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun TransformOriginCompat.div(operand: Float): TransformOriginCompat","description":"com.github.panpf.zoomimage.util.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/div.html","searchKeys":["div","operator fun TransformOriginCompat.div(operand: Float): TransformOriginCompat","com.github.panpf.zoomimage.util.div"]},{"name":"operator fun TransformOriginCompat.times(operand: Float): TransformOriginCompat","description":"com.github.panpf.zoomimage.util.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/times.html","searchKeys":["times","operator fun TransformOriginCompat.times(operand: Float): TransformOriginCompat","com.github.panpf.zoomimage.util.times"]},{"name":"operator fun component1(): Float","description":"com.github.panpf.zoomimage.util.OffsetCompat.component1","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/component1.html","searchKeys":["component1","operator fun component1(): Float","com.github.panpf.zoomimage.util.OffsetCompat.component1"]},{"name":"operator fun component1(): Int","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.component1","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/component1.html","searchKeys":["component1","operator fun component1(): Int","com.github.panpf.zoomimage.util.IntOffsetCompat.component1"]},{"name":"operator fun component2(): Float","description":"com.github.panpf.zoomimage.util.OffsetCompat.component2","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/component2.html","searchKeys":["component2","operator fun component2(): Float","com.github.panpf.zoomimage.util.OffsetCompat.component2"]},{"name":"operator fun component2(): Int","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.component2","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/component2.html","searchKeys":["component2","operator fun component2(): Int","com.github.panpf.zoomimage.util.IntOffsetCompat.component2"]},{"name":"operator fun contains(offset: OffsetCompat): Boolean","description":"com.github.panpf.zoomimage.util.RectCompat.contains","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/contains.html","searchKeys":["contains","operator fun contains(offset: OffsetCompat): Boolean","com.github.panpf.zoomimage.util.RectCompat.contains"]},{"name":"operator fun div(operand: Float): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/div.html","searchKeys":["div","operator fun div(operand: Float): IntOffsetCompat","com.github.panpf.zoomimage.util.IntOffsetCompat.div"]},{"name":"operator fun div(operand: Float): OffsetCompat","description":"com.github.panpf.zoomimage.util.OffsetCompat.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/div.html","searchKeys":["div","operator fun div(operand: Float): OffsetCompat","com.github.panpf.zoomimage.util.OffsetCompat.div"]},{"name":"operator fun div(operand: Float): ScaleFactorCompat","description":"com.github.panpf.zoomimage.util.ScaleFactorCompat.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/-scale-factor-compat/div.html","searchKeys":["div","operator fun div(operand: Float): ScaleFactorCompat","com.github.panpf.zoomimage.util.ScaleFactorCompat.div"]},{"name":"operator fun div(operand: Float): SizeCompat","description":"com.github.panpf.zoomimage.util.SizeCompat.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/div.html","searchKeys":["div","operator fun div(operand: Float): SizeCompat","com.github.panpf.zoomimage.util.SizeCompat.div"]},{"name":"operator fun div(other: Int): IntSizeCompat","description":"com.github.panpf.zoomimage.util.IntSizeCompat.div","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-size-compat/div.html","searchKeys":["div","operator fun div(other: Int): IntSizeCompat","com.github.panpf.zoomimage.util.IntSizeCompat.div"]},{"name":"operator fun minus(other: OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.util.OffsetCompat.minus","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/minus.html","searchKeys":["minus","operator fun minus(other: OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.util.OffsetCompat.minus"]},{"name":"operator fun plus(other: OffsetCompat): OffsetCompat","description":"com.github.panpf.zoomimage.util.OffsetCompat.plus","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/plus.html","searchKeys":["plus","operator fun plus(other: OffsetCompat): OffsetCompat","com.github.panpf.zoomimage.util.OffsetCompat.plus"]},{"name":"operator fun rem(operand: Float): OffsetCompat","description":"com.github.panpf.zoomimage.util.OffsetCompat.rem","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/rem.html","searchKeys":["rem","operator fun rem(operand: Float): OffsetCompat","com.github.panpf.zoomimage.util.OffsetCompat.rem"]},{"name":"operator fun rem(operand: Int): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.rem","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/rem.html","searchKeys":["rem","operator fun rem(operand: Int): IntOffsetCompat","com.github.panpf.zoomimage.util.IntOffsetCompat.rem"]},{"name":"operator fun times(operand: Float): IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/times.html","searchKeys":["times","operator fun times(operand: Float): IntOffsetCompat","com.github.panpf.zoomimage.util.IntOffsetCompat.times"]},{"name":"operator fun times(operand: Float): OffsetCompat","description":"com.github.panpf.zoomimage.util.OffsetCompat.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/times.html","searchKeys":["times","operator fun times(operand: Float): OffsetCompat","com.github.panpf.zoomimage.util.OffsetCompat.times"]},{"name":"operator fun times(operand: Float): ScaleFactorCompat","description":"com.github.panpf.zoomimage.util.ScaleFactorCompat.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/-scale-factor-compat/times.html","searchKeys":["times","operator fun times(operand: Float): ScaleFactorCompat","com.github.panpf.zoomimage.util.ScaleFactorCompat.times"]},{"name":"operator fun times(operand: Float): SizeCompat","description":"com.github.panpf.zoomimage.util.SizeCompat.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/times.html","searchKeys":["times","operator fun times(operand: Float): SizeCompat","com.github.panpf.zoomimage.util.SizeCompat.times"]},{"name":"operator fun times(other: Int): IntSizeCompat","description":"com.github.panpf.zoomimage.util.IntSizeCompat.times","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-size-compat/times.html","searchKeys":["times","operator fun times(other: Int): IntSizeCompat","com.github.panpf.zoomimage.util.IntSizeCompat.times"]},{"name":"operator fun unaryMinus(): OffsetCompat","description":"com.github.panpf.zoomimage.util.OffsetCompat.unaryMinus","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/unary-minus.html","searchKeys":["unaryMinus","operator fun unaryMinus(): OffsetCompat","com.github.panpf.zoomimage.util.OffsetCompat.unaryMinus"]},{"name":"sealed interface SubsamplingImageGenerateResult","description":"com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-subsampling-image-generate-result/index.html","searchKeys":["SubsamplingImageGenerateResult","sealed interface SubsamplingImageGenerateResult","com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult"]},{"name":"suspend fun createTileDecoder(logger: Logger, subsamplingImage: SubsamplingImage, contentSize: IntSizeCompat, regionDecoders: List<RegionDecoder.Factory>, onImageInfoPassed: suspend (ImageInfo) -> Unit): Result<TileDecoder>","description":"com.github.panpf.zoomimage.subsampling.internal.createTileDecoder","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/create-tile-decoder.html","searchKeys":["createTileDecoder","suspend fun createTileDecoder(logger: Logger, subsamplingImage: SubsamplingImage, contentSize: IntSizeCompat, regionDecoders: List<RegionDecoder.Factory>, onImageInfoPassed: suspend (ImageInfo) -> Unit): Result<TileDecoder>","com.github.panpf.zoomimage.subsampling.internal.createTileDecoder"]},{"name":"suspend fun fling(velocity: OffsetCompat, extras: Map<String, Any>): Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.fling","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/fling.html","searchKeys":["fling","suspend fun fling(velocity: OffsetCompat, extras: Map<String, Any>): Boolean","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.fling"]},{"name":"suspend fun gestureTransform(centroid: OffsetCompat, panChange: OffsetCompat, zoomChange: Float, rotationChange: Float)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.gestureTransform","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/gesture-transform.html","searchKeys":["gestureTransform","suspend fun gestureTransform(centroid: OffsetCompat, panChange: OffsetCompat, zoomChange: Float, rotationChange: Float)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.gestureTransform"]},{"name":"suspend fun locate(contentPoint: OffsetCompat, targetScale: Float = transform.scaleX, animated: Boolean = false, animationSpec: BaseZoomAnimationSpec? = null): Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.locate","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/locate.html","searchKeys":["locate","suspend fun locate(contentPoint: OffsetCompat, targetScale: Float = transform.scaleX, animated: Boolean = false, animationSpec: BaseZoomAnimationSpec? = null): Boolean","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.locate"]},{"name":"suspend fun offset(targetOffset: OffsetCompat, animated: Boolean = false, animationSpec: BaseZoomAnimationSpec? = null): Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.offset","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/offset.html","searchKeys":["offset","suspend fun offset(targetOffset: OffsetCompat, animated: Boolean = false, animationSpec: BaseZoomAnimationSpec? = null): Boolean","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.offset"]},{"name":"suspend fun reset(caller: String, force: Boolean = false)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.reset","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/reset.html","searchKeys":["reset","suspend fun reset(caller: String, force: Boolean = false)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.reset"]},{"name":"suspend fun rollbackScale(focus: OffsetCompat? = null): Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.rollbackScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/rollback-scale.html","searchKeys":["rollbackScale","suspend fun rollbackScale(focus: OffsetCompat? = null): Boolean","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.rollbackScale"]},{"name":"suspend fun rotate(targetRotation: Int)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.rotate","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/rotate.html","searchKeys":["rotate","suspend fun rotate(targetRotation: Int)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.rotate"]},{"name":"suspend fun scale(targetScale: Float, centroidContentPoint: OffsetCompat = contentVisibleRect.center, animated: Boolean = false, animationSpec: BaseZoomAnimationSpec? = null): Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.scale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/scale.html","searchKeys":["scale","suspend fun scale(targetScale: Float, centroidContentPoint: OffsetCompat = contentVisibleRect.center, animated: Boolean = false, animationSpec: BaseZoomAnimationSpec? = null): Boolean","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.scale"]},{"name":"suspend fun setAlignment(alignment: AlignmentCompat)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setAlignment","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-alignment.html","searchKeys":["setAlignment","suspend fun setAlignment(alignment: AlignmentCompat)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setAlignment"]},{"name":"suspend fun setContainerSize(containerSize: IntSizeCompat)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContainerSize","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-container-size.html","searchKeys":["setContainerSize","suspend fun setContainerSize(containerSize: IntSizeCompat)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContainerSize"]},{"name":"suspend fun setContainerWhitespace(containerWhitespace: ContainerWhitespace)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContainerWhitespace","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-container-whitespace.html","searchKeys":["setContainerWhitespace","suspend fun setContainerWhitespace(containerWhitespace: ContainerWhitespace)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContainerWhitespace"]},{"name":"suspend fun setContainerWhitespaceMultiple(containerWhitespaceMultiple: Float)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContainerWhitespaceMultiple","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-container-whitespace-multiple.html","searchKeys":["setContainerWhitespaceMultiple","suspend fun setContainerWhitespaceMultiple(containerWhitespaceMultiple: Float)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContainerWhitespaceMultiple"]},{"name":"suspend fun setContentOriginSize(contentOriginSize: IntSizeCompat)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContentOriginSize","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-content-origin-size.html","searchKeys":["setContentOriginSize","suspend fun setContentOriginSize(contentOriginSize: IntSizeCompat)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContentOriginSize"]},{"name":"suspend fun setContentScale(contentScale: ContentScaleCompat)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContentScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-content-scale.html","searchKeys":["setContentScale","suspend fun setContentScale(contentScale: ContentScaleCompat)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContentScale"]},{"name":"suspend fun setContentSize(contentSize: IntSizeCompat)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContentSize","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-content-size.html","searchKeys":["setContentSize","suspend fun setContentSize(contentSize: IntSizeCompat)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setContentSize"]},{"name":"suspend fun setLimitOffsetWithinBaseVisibleRect(limitOffsetWithinBaseVisibleRect: Boolean)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setLimitOffsetWithinBaseVisibleRect","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-limit-offset-within-base-visible-rect.html","searchKeys":["setLimitOffsetWithinBaseVisibleRect","suspend fun setLimitOffsetWithinBaseVisibleRect(limitOffsetWithinBaseVisibleRect: Boolean)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setLimitOffsetWithinBaseVisibleRect"]},{"name":"suspend fun setReadMode(readMode: ReadMode?)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setReadMode","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-read-mode.html","searchKeys":["setReadMode","suspend fun setReadMode(readMode: ReadMode?)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setReadMode"]},{"name":"suspend fun setScalesCalculator(scalesCalculator: ScalesCalculator)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setScalesCalculator","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/set-scales-calculator.html","searchKeys":["setScalesCalculator","suspend fun setScalesCalculator(scalesCalculator: ScalesCalculator)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.setScalesCalculator"]},{"name":"suspend fun stopAllAnimation(caller: String)","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.stopAllAnimation","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/stop-all-animation.html","searchKeys":["stopAllAnimation","suspend fun stopAllAnimation(caller: String)","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.stopAllAnimation"]},{"name":"suspend fun switchScale(centroidContentPoint: OffsetCompat = contentVisibleRect.center, animated: Boolean = false, animationSpec: BaseZoomAnimationSpec? = null): Float?","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.switchScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/switch-scale.html","searchKeys":["switchScale","suspend fun switchScale(centroidContentPoint: OffsetCompat = contentVisibleRect.center, animated: Boolean = false, animationSpec: BaseZoomAnimationSpec? = null): Float?","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.switchScale"]},{"name":"val AlignmentCompat.isBottom: Boolean","description":"com.github.panpf.zoomimage.zoom.isBottom","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/is-bottom.html","searchKeys":["isBottom","val AlignmentCompat.isBottom: Boolean","com.github.panpf.zoomimage.zoom.isBottom"]},{"name":"val AlignmentCompat.isCenter: Boolean","description":"com.github.panpf.zoomimage.zoom.isCenter","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/is-center.html","searchKeys":["isCenter","val AlignmentCompat.isCenter: Boolean","com.github.panpf.zoomimage.zoom.isCenter"]},{"name":"val AlignmentCompat.isEnd: Boolean","description":"com.github.panpf.zoomimage.zoom.isEnd","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/is-end.html","searchKeys":["isEnd","val AlignmentCompat.isEnd: Boolean","com.github.panpf.zoomimage.zoom.isEnd"]},{"name":"val AlignmentCompat.isHorizontalCenter: Boolean","description":"com.github.panpf.zoomimage.zoom.isHorizontalCenter","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/is-horizontal-center.html","searchKeys":["isHorizontalCenter","val AlignmentCompat.isHorizontalCenter: Boolean","com.github.panpf.zoomimage.zoom.isHorizontalCenter"]},{"name":"val AlignmentCompat.isStart: Boolean","description":"com.github.panpf.zoomimage.zoom.isStart","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/is-start.html","searchKeys":["isStart","val AlignmentCompat.isStart: Boolean","com.github.panpf.zoomimage.zoom.isStart"]},{"name":"val AlignmentCompat.isTop: Boolean","description":"com.github.panpf.zoomimage.zoom.isTop","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/is-top.html","searchKeys":["isTop","val AlignmentCompat.isTop: Boolean","com.github.panpf.zoomimage.zoom.isTop"]},{"name":"val AlignmentCompat.isVerticalCenter: Boolean","description":"com.github.panpf.zoomimage.zoom.isVerticalCenter","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/is-vertical-center.html","searchKeys":["isVerticalCenter","val AlignmentCompat.isVerticalCenter: Boolean","com.github.panpf.zoomimage.zoom.isVerticalCenter"]},{"name":"val AlignmentCompat.name: String","description":"com.github.panpf.zoomimage.zoom.name","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/name.html","searchKeys":["name","val AlignmentCompat.name: String","com.github.panpf.zoomimage.zoom.name"]},{"name":"val BottomCenter: AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.BottomCenter","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-alignment-compat/-companion/-bottom-center.html","searchKeys":["BottomCenter","val BottomCenter: AlignmentCompat","com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.BottomCenter"]},{"name":"val BottomEnd: AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.BottomEnd","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-alignment-compat/-companion/-bottom-end.html","searchKeys":["BottomEnd","val BottomEnd: AlignmentCompat","com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.BottomEnd"]},{"name":"val BottomStart: AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.BottomStart","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-alignment-compat/-companion/-bottom-start.html","searchKeys":["BottomStart","val BottomStart: AlignmentCompat","com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.BottomStart"]},{"name":"val Center: AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.Center","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-alignment-compat/-companion/-center.html","searchKeys":["Center","val Center: AlignmentCompat","com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.Center"]},{"name":"val Center: TransformOriginCompat","description":"com.github.panpf.zoomimage.util.TransformOriginCompat.Companion.Center","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-origin-compat/-companion/-center.html","searchKeys":["Center","val Center: TransformOriginCompat","com.github.panpf.zoomimage.util.TransformOriginCompat.Companion.Center"]},{"name":"val CenterEnd: AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.CenterEnd","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-alignment-compat/-companion/-center-end.html","searchKeys":["CenterEnd","val CenterEnd: AlignmentCompat","com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.CenterEnd"]},{"name":"val CenterStart: AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.CenterStart","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-alignment-compat/-companion/-center-start.html","searchKeys":["CenterStart","val CenterStart: AlignmentCompat","com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.CenterStart"]},{"name":"val ContentScaleCompat.name: String","description":"com.github.panpf.zoomimage.zoom.name","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/name.html","searchKeys":["name","val ContentScaleCompat.name: String","com.github.panpf.zoomimage.zoom.name"]},{"name":"val Crop: ContentScaleCompat","description":"com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.Crop","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-content-scale-compat/-companion/-crop.html","searchKeys":["Crop","val Crop: ContentScaleCompat","com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.Crop"]},{"name":"val DEFAULT_DURATION_MILLIS: Int = 300","description":"com.github.panpf.zoomimage.zoom.BaseZoomAnimationSpec.Companion.DEFAULT_DURATION_MILLIS","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-base-zoom-animation-spec/-companion/-d-e-f-a-u-l-t_-d-u-r-a-t-i-o-n_-m-i-l-l-i-s.html","searchKeys":["DEFAULT_DURATION_MILLIS","val DEFAULT_DURATION_MILLIS: Int = 300","com.github.panpf.zoomimage.zoom.BaseZoomAnimationSpec.Companion.DEFAULT_DURATION_MILLIS"]},{"name":"val Default: DefaultPanToScaleTransformer","description":"com.github.panpf.zoomimage.zoom.PanToScaleTransformer.Companion.Default","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-pan-to-scale-transformer/-companion/-default.html","searchKeys":["Default","val Default: DefaultPanToScaleTransformer","com.github.panpf.zoomimage.zoom.PanToScaleTransformer.Companion.Default"]},{"name":"val Default: OneFingerScaleSpec","description":"com.github.panpf.zoomimage.zoom.OneFingerScaleSpec.Companion.Default","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-one-finger-scale-spec/-companion/-default.html","searchKeys":["Default","val Default: OneFingerScaleSpec","com.github.panpf.zoomimage.zoom.OneFingerScaleSpec.Companion.Default"]},{"name":"val Default: ReadMode","description":"com.github.panpf.zoomimage.zoom.ReadMode.Companion.Default","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-companion/-default.html","searchKeys":["Default","val Default: ReadMode","com.github.panpf.zoomimage.zoom.ReadMode.Companion.Default"]},{"name":"val Default: ReadMode.LongImageDecider","description":"com.github.panpf.zoomimage.zoom.ReadMode.Decider.Companion.Default","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-decider/-companion/-default.html","searchKeys":["Default","val Default: ReadMode.LongImageDecider","com.github.panpf.zoomimage.zoom.ReadMode.Decider.Companion.Default"]},{"name":"val Default: ScrollEdge","description":"com.github.panpf.zoomimage.zoom.ScrollEdge.Companion.Default","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scroll-edge/-companion/-default.html","searchKeys":["Default","val Default: ScrollEdge","com.github.panpf.zoomimage.zoom.ScrollEdge.Companion.Default"]},{"name":"val Default: TileAnimationSpec","description":"com.github.panpf.zoomimage.subsampling.TileAnimationSpec.Companion.Default","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-animation-spec/-companion/-default.html","searchKeys":["Default","val Default: TileAnimationSpec","com.github.panpf.zoomimage.subsampling.TileAnimationSpec.Companion.Default"]},{"name":"val Dynamic: DynamicScalesCalculator","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.Companion.Dynamic","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/-companion/-dynamic.html","searchKeys":["Dynamic","val Dynamic: DynamicScalesCalculator","com.github.panpf.zoomimage.zoom.ScalesCalculator.Companion.Dynamic"]},{"name":"val FillBounds: ContentScaleCompat","description":"com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.FillBounds","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-content-scale-compat/-companion/-fill-bounds.html","searchKeys":["FillBounds","val FillBounds: ContentScaleCompat","com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.FillBounds"]},{"name":"val FillHeight: ContentScaleCompat","description":"com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.FillHeight","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-content-scale-compat/-companion/-fill-height.html","searchKeys":["FillHeight","val FillHeight: ContentScaleCompat","com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.FillHeight"]},{"name":"val FillWidth: ContentScaleCompat","description":"com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.FillWidth","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-content-scale-compat/-companion/-fill-width.html","searchKeys":["FillWidth","val FillWidth: ContentScaleCompat","com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.FillWidth"]},{"name":"val Fit: ContentScaleCompat","description":"com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.Fit","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-content-scale-compat/-companion/-fit.html","searchKeys":["Fit","val Fit: ContentScaleCompat","com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.Fit"]},{"name":"val Fixed: FixedScalesCalculator","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.Companion.Fixed","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/-companion/-fixed.html","searchKeys":["Fixed","val Fixed: FixedScalesCalculator","com.github.panpf.zoomimage.zoom.ScalesCalculator.Companion.Fixed"]},{"name":"val Infinite: OffsetCompat","description":"com.github.panpf.zoomimage.util.OffsetCompat.Companion.Infinite","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/-companion/-infinite.html","searchKeys":["Infinite","val Infinite: OffsetCompat","com.github.panpf.zoomimage.util.OffsetCompat.Companion.Infinite"]},{"name":"val Inside: ContentScaleCompat","description":"com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.Inside","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-content-scale-compat/-companion/-inside.html","searchKeys":["Inside","val Inside: ContentScaleCompat","com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.Inside"]},{"name":"val IntSizeCompat.center: IntOffsetCompat","description":"com.github.panpf.zoomimage.util.center","location":"zoomimage-core/com.github.panpf.zoomimage.util/center.html","searchKeys":["center","val IntSizeCompat.center: IntOffsetCompat","com.github.panpf.zoomimage.util.center"]},{"name":"val None: FixedScale","description":"com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.None","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-content-scale-compat/-companion/-none.html","searchKeys":["None","val None: FixedScale","com.github.panpf.zoomimage.zoom.ContentScaleCompat.Companion.None"]},{"name":"val None: TileAnimationSpec","description":"com.github.panpf.zoomimage.subsampling.TileAnimationSpec.Companion.None","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-animation-spec/-companion/-none.html","searchKeys":["None","val None: TileAnimationSpec","com.github.panpf.zoomimage.subsampling.TileAnimationSpec.Companion.None"]},{"name":"val OffsetCompat.isFinite: Boolean","description":"com.github.panpf.zoomimage.util.isFinite","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-finite.html","searchKeys":["isFinite","val OffsetCompat.isFinite: Boolean","com.github.panpf.zoomimage.util.isFinite"]},{"name":"val OffsetCompat.isSpecified: Boolean","description":"com.github.panpf.zoomimage.util.isSpecified","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-specified.html","searchKeys":["isSpecified","val OffsetCompat.isSpecified: Boolean","com.github.panpf.zoomimage.util.isSpecified"]},{"name":"val OffsetCompat.isUnspecified: Boolean","description":"com.github.panpf.zoomimage.util.isUnspecified","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-unspecified.html","searchKeys":["isUnspecified","val OffsetCompat.isUnspecified: Boolean","com.github.panpf.zoomimage.util.isUnspecified"]},{"name":"val Origin: InitialZoom","description":"com.github.panpf.zoomimage.zoom.internal.InitialZoom.Companion.Origin","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-initial-zoom/-companion/-origin.html","searchKeys":["Origin","val Origin: InitialZoom","com.github.panpf.zoomimage.zoom.internal.InitialZoom.Companion.Origin"]},{"name":"val Origin: TransformCompat","description":"com.github.panpf.zoomimage.util.TransformCompat.Companion.Origin","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/-companion/-origin.html","searchKeys":["Origin","val Origin: TransformCompat","com.github.panpf.zoomimage.util.TransformCompat.Companion.Origin"]},{"name":"val ScaleFactorCompat.Companion.Origin: ScaleFactorCompat","description":"com.github.panpf.zoomimage.util.Origin","location":"zoomimage-core/com.github.panpf.zoomimage.util/-origin.html","searchKeys":["Origin","val ScaleFactorCompat.Companion.Origin: ScaleFactorCompat","com.github.panpf.zoomimage.util.Origin"]},{"name":"val ScaleFactorCompat.isSpecified: Boolean","description":"com.github.panpf.zoomimage.util.isSpecified","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-specified.html","searchKeys":["isSpecified","val ScaleFactorCompat.isSpecified: Boolean","com.github.panpf.zoomimage.util.isSpecified"]},{"name":"val ScaleFactorCompat.isUnspecified: Boolean","description":"com.github.panpf.zoomimage.util.isUnspecified","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-unspecified.html","searchKeys":["isUnspecified","val ScaleFactorCompat.isUnspecified: Boolean","com.github.panpf.zoomimage.util.isUnspecified"]},{"name":"val SizeCompat.center: OffsetCompat","description":"com.github.panpf.zoomimage.util.center","location":"zoomimage-core/com.github.panpf.zoomimage.util/center.html","searchKeys":["center","val SizeCompat.center: OffsetCompat","com.github.panpf.zoomimage.util.center"]},{"name":"val SizeCompat.isSpecified: Boolean","description":"com.github.panpf.zoomimage.util.isSpecified","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-specified.html","searchKeys":["isSpecified","val SizeCompat.isSpecified: Boolean","com.github.panpf.zoomimage.util.isSpecified"]},{"name":"val SizeCompat.isUnspecified: Boolean","description":"com.github.panpf.zoomimage.util.isUnspecified","location":"zoomimage-core/com.github.panpf.zoomimage.util/is-unspecified.html","searchKeys":["isUnspecified","val SizeCompat.isUnspecified: Boolean","com.github.panpf.zoomimage.util.isUnspecified"]},{"name":"val TileBitmap.size: IntSizeCompat","description":"com.github.panpf.zoomimage.subsampling.size","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/size.html","searchKeys":["size","val TileBitmap.size: IntSizeCompat","com.github.panpf.zoomimage.subsampling.size"]},{"name":"val TopCenter: AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.TopCenter","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-alignment-compat/-companion/-top-center.html","searchKeys":["TopCenter","val TopCenter: AlignmentCompat","com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.TopCenter"]},{"name":"val TopEnd: AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.TopEnd","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-alignment-compat/-companion/-top-end.html","searchKeys":["TopEnd","val TopEnd: AlignmentCompat","com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.TopEnd"]},{"name":"val TopStart: AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.TopStart","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-alignment-compat/-companion/-top-start.html","searchKeys":["TopStart","val TopStart: AlignmentCompat","com.github.panpf.zoomimage.zoom.AlignmentCompat.Companion.TopStart"]},{"name":"val TransformOriginCompat.Companion.TopStart: TransformOriginCompat","description":"com.github.panpf.zoomimage.util.TopStart","location":"zoomimage-core/com.github.panpf.zoomimage.util/-top-start.html","searchKeys":["TopStart","val TransformOriginCompat.Companion.TopStart: TransformOriginCompat","com.github.panpf.zoomimage.util.TopStart"]},{"name":"val Unspecified: OffsetCompat","description":"com.github.panpf.zoomimage.util.OffsetCompat.Companion.Unspecified","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/-companion/-unspecified.html","searchKeys":["Unspecified","val Unspecified: OffsetCompat","com.github.panpf.zoomimage.util.OffsetCompat.Companion.Unspecified"]},{"name":"val Unspecified: ScaleFactorCompat","description":"com.github.panpf.zoomimage.util.ScaleFactorCompat.Companion.Unspecified","location":"zoomimage-core/com.github.panpf.zoomimage.util/-scale-factor-compat/-companion/-unspecified.html","searchKeys":["Unspecified","val Unspecified: ScaleFactorCompat","com.github.panpf.zoomimage.util.ScaleFactorCompat.Companion.Unspecified"]},{"name":"val Unspecified: SizeCompat","description":"com.github.panpf.zoomimage.util.SizeCompat.Companion.Unspecified","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/-companion/-unspecified.html","searchKeys":["Unspecified","val Unspecified: SizeCompat","com.github.panpf.zoomimage.util.SizeCompat.Companion.Unspecified"]},{"name":"val Zero: ContainerWhitespace","description":"com.github.panpf.zoomimage.zoom.ContainerWhitespace.Companion.Zero","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-container-whitespace/-companion/-zero.html","searchKeys":["Zero","val Zero: ContainerWhitespace","com.github.panpf.zoomimage.zoom.ContainerWhitespace.Companion.Zero"]},{"name":"val Zero: IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.Companion.Zero","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/-companion/-zero.html","searchKeys":["Zero","val Zero: IntOffsetCompat","com.github.panpf.zoomimage.util.IntOffsetCompat.Companion.Zero"]},{"name":"val Zero: IntRectCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.Companion.Zero","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/-companion/-zero.html","searchKeys":["Zero","val Zero: IntRectCompat","com.github.panpf.zoomimage.util.IntRectCompat.Companion.Zero"]},{"name":"val Zero: IntSizeCompat","description":"com.github.panpf.zoomimage.util.IntSizeCompat.Companion.Zero","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-size-compat/-companion/-zero.html","searchKeys":["Zero","val Zero: IntSizeCompat","com.github.panpf.zoomimage.util.IntSizeCompat.Companion.Zero"]},{"name":"val Zero: OffsetCompat","description":"com.github.panpf.zoomimage.util.OffsetCompat.Companion.Zero","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/-companion/-zero.html","searchKeys":["Zero","val Zero: OffsetCompat","com.github.panpf.zoomimage.util.OffsetCompat.Companion.Zero"]},{"name":"val Zero: RectCompat","description":"com.github.panpf.zoomimage.util.RectCompat.Companion.Zero","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/-companion/-zero.html","searchKeys":["Zero","val Zero: RectCompat","com.github.panpf.zoomimage.util.RectCompat.Companion.Zero"]},{"name":"val Zero: SizeCompat","description":"com.github.panpf.zoomimage.util.SizeCompat.Companion.Zero","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/-companion/-zero.html","searchKeys":["Zero","val Zero: SizeCompat","com.github.panpf.zoomimage.util.SizeCompat.Companion.Zero"]},{"name":"val alignment: AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.internal.ResetParams.alignment","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params/alignment.html","searchKeys":["alignment","val alignment: AlignmentCompat","com.github.panpf.zoomimage.zoom.internal.ResetParams.alignment"]},{"name":"val alpha: Int","description":"com.github.panpf.zoomimage.subsampling.TileSnapshot.alpha","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-snapshot/alpha.html","searchKeys":["alpha","val alpha: Int","com.github.panpf.zoomimage.subsampling.TileSnapshot.alpha"]},{"name":"val animationAdapter: AnimationAdapter","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.animationAdapter","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/animation-adapter.html","searchKeys":["animationAdapter","val animationAdapter: AnimationAdapter","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.animationAdapter"]},{"name":"val animationState: Tile.AnimationState","description":"com.github.panpf.zoomimage.subsampling.Tile.animationState","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/animation-state.html","searchKeys":["animationState","val animationState: Tile.AnimationState","com.github.panpf.zoomimage.subsampling.Tile.animationState"]},{"name":"val assetFileName: String","description":"com.github.panpf.zoomimage.subsampling.AssetImageSource.assetFileName","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-asset-image-source/asset-file-name.html","searchKeys":["assetFileName","val assetFileName: String","com.github.panpf.zoomimage.subsampling.AssetImageSource.assetFileName"]},{"name":"val baseTransform: TransformCompat","description":"com.github.panpf.zoomimage.zoom.internal.InitialZoom.baseTransform","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-initial-zoom/base-transform.html","searchKeys":["baseTransform","val baseTransform: TransformCompat","com.github.panpf.zoomimage.zoom.internal.InitialZoom.baseTransform"]},{"name":"val bitmap: TileBitmap","description":"com.github.panpf.zoomimage.subsampling.BitmapTileImage.bitmap","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-bitmap-tile-image/bitmap.html","searchKeys":["bitmap","val bitmap: TileBitmap","com.github.panpf.zoomimage.subsampling.BitmapTileImage.bitmap"]},{"name":"val bottom: Float","description":"com.github.panpf.zoomimage.util.RectCompat.bottom","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/bottom.html","searchKeys":["bottom","val bottom: Float","com.github.panpf.zoomimage.util.RectCompat.bottom"]},{"name":"val bottom: Float","description":"com.github.panpf.zoomimage.zoom.ContainerWhitespace.bottom","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-container-whitespace/bottom.html","searchKeys":["bottom","val bottom: Float","com.github.panpf.zoomimage.zoom.ContainerWhitespace.bottom"]},{"name":"val bottom: Int","description":"com.github.panpf.zoomimage.util.IntRectCompat.bottom","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/bottom.html","searchKeys":["bottom","val bottom: Int","com.github.panpf.zoomimage.util.IntRectCompat.bottom"]},{"name":"val bottomCenter: IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.bottomCenter","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/bottom-center.html","searchKeys":["bottomCenter","val bottomCenter: IntOffsetCompat","com.github.panpf.zoomimage.util.IntRectCompat.bottomCenter"]},{"name":"val bottomCenter: OffsetCompat","description":"com.github.panpf.zoomimage.util.RectCompat.bottomCenter","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/bottom-center.html","searchKeys":["bottomCenter","val bottomCenter: OffsetCompat","com.github.panpf.zoomimage.util.RectCompat.bottomCenter"]},{"name":"val bottomLeft: IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.bottomLeft","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/bottom-left.html","searchKeys":["bottomLeft","val bottomLeft: IntOffsetCompat","com.github.panpf.zoomimage.util.IntRectCompat.bottomLeft"]},{"name":"val bottomLeft: OffsetCompat","description":"com.github.panpf.zoomimage.util.RectCompat.bottomLeft","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/bottom-left.html","searchKeys":["bottomLeft","val bottomLeft: OffsetCompat","com.github.panpf.zoomimage.util.RectCompat.bottomLeft"]},{"name":"val bottomRight: IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.bottomRight","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/bottom-right.html","searchKeys":["bottomRight","val bottomRight: IntOffsetCompat","com.github.panpf.zoomimage.util.IntRectCompat.bottomRight"]},{"name":"val bottomRight: OffsetCompat","description":"com.github.panpf.zoomimage.util.RectCompat.bottomRight","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/bottom-right.html","searchKeys":["bottomRight","val bottomRight: OffsetCompat","com.github.panpf.zoomimage.util.RectCompat.bottomRight"]},{"name":"val byteArray: ByteArray","description":"com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.byteArray","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-byte-array-image-source/byte-array.html","searchKeys":["byteArray","val byteArray: ByteArray","com.github.panpf.zoomimage.subsampling.ByteArrayImageSource.byteArray"]},{"name":"val center: IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.center","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/center.html","searchKeys":["center","val center: IntOffsetCompat","com.github.panpf.zoomimage.util.IntRectCompat.center"]},{"name":"val center: OffsetCompat","description":"com.github.panpf.zoomimage.util.RectCompat.center","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/center.html","searchKeys":["center","val center: OffsetCompat","com.github.panpf.zoomimage.util.RectCompat.center"]},{"name":"val centerLeft: IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.centerLeft","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/center-left.html","searchKeys":["centerLeft","val centerLeft: IntOffsetCompat","com.github.panpf.zoomimage.util.IntRectCompat.centerLeft"]},{"name":"val centerLeft: OffsetCompat","description":"com.github.panpf.zoomimage.util.RectCompat.centerLeft","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/center-left.html","searchKeys":["centerLeft","val centerLeft: OffsetCompat","com.github.panpf.zoomimage.util.RectCompat.centerLeft"]},{"name":"val centerRight: IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.centerRight","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/center-right.html","searchKeys":["centerRight","val centerRight: IntOffsetCompat","com.github.panpf.zoomimage.util.IntRectCompat.centerRight"]},{"name":"val centerRight: OffsetCompat","description":"com.github.panpf.zoomimage.util.RectCompat.centerRight","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/center-right.html","searchKeys":["centerRight","val centerRight: OffsetCompat","com.github.panpf.zoomimage.util.RectCompat.centerRight"]},{"name":"val containerSize: IntSizeCompat","description":"com.github.panpf.zoomimage.zoom.internal.ResetParams.containerSize","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params/container-size.html","searchKeys":["containerSize","val containerSize: IntSizeCompat","com.github.panpf.zoomimage.zoom.internal.ResetParams.containerSize"]},{"name":"val containerWhitespace: ContainerWhitespace","description":"com.github.panpf.zoomimage.zoom.internal.ResetParams.containerWhitespace","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params/container-whitespace.html","searchKeys":["containerWhitespace","val containerWhitespace: ContainerWhitespace","com.github.panpf.zoomimage.zoom.internal.ResetParams.containerWhitespace"]},{"name":"val containerWhitespaceMultiple: Float","description":"com.github.panpf.zoomimage.zoom.internal.ResetParams.containerWhitespaceMultiple","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params/container-whitespace-multiple.html","searchKeys":["containerWhitespaceMultiple","val containerWhitespaceMultiple: Float","com.github.panpf.zoomimage.zoom.internal.ResetParams.containerWhitespaceMultiple"]},{"name":"val contentOriginSize: IntSizeCompat","description":"com.github.panpf.zoomimage.zoom.internal.ResetParams.contentOriginSize","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params/content-origin-size.html","searchKeys":["contentOriginSize","val contentOriginSize: IntSizeCompat","com.github.panpf.zoomimage.zoom.internal.ResetParams.contentOriginSize"]},{"name":"val contentScale: ContentScaleCompat","description":"com.github.panpf.zoomimage.zoom.internal.ResetParams.contentScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params/content-scale.html","searchKeys":["contentScale","val contentScale: ContentScaleCompat","com.github.panpf.zoomimage.zoom.internal.ResetParams.contentScale"]},{"name":"val contentSize: IntSizeCompat","description":"com.github.panpf.zoomimage.zoom.internal.ResetParams.contentSize","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params/content-size.html","searchKeys":["contentSize","val contentSize: IntSizeCompat","com.github.panpf.zoomimage.zoom.internal.ResetParams.contentSize"]},{"name":"val context: Context","description":"com.github.panpf.zoomimage.subsampling.AssetImageSource.context","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-asset-image-source/context.html","searchKeys":["context","val context: Context","com.github.panpf.zoomimage.subsampling.AssetImageSource.context"]},{"name":"val context: Context","description":"com.github.panpf.zoomimage.subsampling.ContentImageSource.context","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-content-image-source/context.html","searchKeys":["context","val context: Context","com.github.panpf.zoomimage.subsampling.ContentImageSource.context"]},{"name":"val coordinate: IntOffsetCompat","description":"com.github.panpf.zoomimage.subsampling.Tile.coordinate","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/coordinate.html","searchKeys":["coordinate","val coordinate: IntOffsetCompat","com.github.panpf.zoomimage.subsampling.Tile.coordinate"]},{"name":"val coordinate: IntOffsetCompat","description":"com.github.panpf.zoomimage.subsampling.TileSnapshot.coordinate","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-snapshot/coordinate.html","searchKeys":["coordinate","val coordinate: IntOffsetCompat","com.github.panpf.zoomimage.subsampling.TileSnapshot.coordinate"]},{"name":"val decider: ReadMode.Decider","description":"com.github.panpf.zoomimage.zoom.ReadMode.decider","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/decider.html","searchKeys":["decider","val decider: ReadMode.Decider","com.github.panpf.zoomimage.zoom.ReadMode.decider"]},{"name":"val decoderPoolSize: Int","description":"com.github.panpf.zoomimage.subsampling.internal.TileDecoder.decoderPoolSize","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-decoder/decoder-pool-size.html","searchKeys":["decoderPoolSize","val decoderPoolSize: Int","com.github.panpf.zoomimage.subsampling.internal.TileDecoder.decoderPoolSize"]},{"name":"val duration: Long","description":"com.github.panpf.zoomimage.subsampling.TileAnimationSpec.duration","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-animation-spec/duration.html","searchKeys":["duration","val duration: Long","com.github.panpf.zoomimage.subsampling.TileAnimationSpec.duration"]},{"name":"val entries: EnumEntries<Edge>","description":"com.github.panpf.zoomimage.zoom.Edge.entries","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-edge/entries.html","searchKeys":["entries","val entries: EnumEntries<Edge>","com.github.panpf.zoomimage.zoom.Edge.entries"]},{"name":"val entries: EnumEntries<Logger.Level>","description":"com.github.panpf.zoomimage.util.Logger.Level.entries","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/-level/entries.html","searchKeys":["entries","val entries: EnumEntries<Logger.Level>","com.github.panpf.zoomimage.util.Logger.Level.entries"]},{"name":"val exifOrientation: Int","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.exifOrientation","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/exif-orientation.html","searchKeys":["exifOrientation","val exifOrientation: Int","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.exifOrientation"]},{"name":"val height: Float","description":"com.github.panpf.zoomimage.util.RectCompat.height","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/height.html","searchKeys":["height","val height: Float","com.github.panpf.zoomimage.util.RectCompat.height"]},{"name":"val height: Float","description":"com.github.panpf.zoomimage.util.SizeCompat.height","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/height.html","searchKeys":["height","val height: Float","com.github.panpf.zoomimage.util.SizeCompat.height"]},{"name":"val height: Int","description":"com.github.panpf.zoomimage.subsampling.ImageInfo.height","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-info/height.html","searchKeys":["height","val height: Int","com.github.panpf.zoomimage.subsampling.ImageInfo.height"]},{"name":"val height: Int","description":"com.github.panpf.zoomimage.util.IntRectCompat.height","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/height.html","searchKeys":["height","val height: Int","com.github.panpf.zoomimage.util.IntRectCompat.height"]},{"name":"val height: Int","description":"com.github.panpf.zoomimage.util.IntSizeCompat.height","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-size-compat/height.html","searchKeys":["height","val height: Int","com.github.panpf.zoomimage.util.IntSizeCompat.height"]},{"name":"val horizontal: Edge","description":"com.github.panpf.zoomimage.zoom.ScrollEdge.horizontal","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scroll-edge/horizontal.html","searchKeys":["horizontal","val horizontal: Edge","com.github.panpf.zoomimage.zoom.ScrollEdge.horizontal"]},{"name":"val horizontalBias: Float","description":"com.github.panpf.zoomimage.zoom.BiasAlignmentCompat.horizontalBias","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-bias-alignment-compat/horizontal-bias.html","searchKeys":["horizontalBias","val horizontalBias: Float","com.github.panpf.zoomimage.zoom.BiasAlignmentCompat.horizontalBias"]},{"name":"val imageInfo: ImageInfo","description":"com.github.panpf.zoomimage.subsampling.internal.TileDecoder.imageInfo","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-decoder/image-info.html","searchKeys":["imageInfo","val imageInfo: ImageInfo","com.github.panpf.zoomimage.subsampling.internal.TileDecoder.imageInfo"]},{"name":"val imageInfo: ImageInfo? = null","description":"com.github.panpf.zoomimage.subsampling.SubsamplingImage.imageInfo","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-subsampling-image/image-info.html","searchKeys":["imageInfo","val imageInfo: ImageInfo? = null","com.github.panpf.zoomimage.subsampling.SubsamplingImage.imageInfo"]},{"name":"val imageSource: <Error class: unknown class>","description":"com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.imageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-android-region-decoder/image-source.html","searchKeys":["imageSource","val imageSource: <Error class: unknown class>","com.github.panpf.zoomimage.subsampling.internal.AndroidRegionDecoder.imageSource"]},{"name":"val imageSource: ImageSource","description":"com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.imageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-source/-wrapper-factory/image-source.html","searchKeys":["imageSource","val imageSource: ImageSource","com.github.panpf.zoomimage.subsampling.ImageSource.WrapperFactory.imageSource"]},{"name":"val imageSource: ImageSource","description":"com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.imageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-skia-region-decoder/image-source.html","searchKeys":["imageSource","val imageSource: ImageSource","com.github.panpf.zoomimage.subsampling.internal.SkiaRegionDecoder.imageSource"]},{"name":"val imageSource: ImageSource.Factory","description":"com.github.panpf.zoomimage.subsampling.SubsamplingImage.imageSource","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-subsampling-image/image-source.html","searchKeys":["imageSource","val imageSource: ImageSource.Factory","com.github.panpf.zoomimage.subsampling.SubsamplingImage.imageSource"]},{"name":"val interval: Long","description":"com.github.panpf.zoomimage.subsampling.TileAnimationSpec.interval","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-animation-spec/interval.html","searchKeys":["interval","val interval: Long","com.github.panpf.zoomimage.subsampling.TileAnimationSpec.interval"]},{"name":"val isAlignmentChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isAlignmentChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-alignment-changed.html","searchKeys":["isAlignmentChanged","val isAlignmentChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isAlignmentChanged"]},{"name":"val isContainerSizeChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isContainerSizeChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-container-size-changed.html","searchKeys":["isContainerSizeChanged","val isContainerSizeChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isContainerSizeChanged"]},{"name":"val isContainerWhitespaceChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isContainerWhitespaceChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-container-whitespace-changed.html","searchKeys":["isContainerWhitespaceChanged","val isContainerWhitespaceChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isContainerWhitespaceChanged"]},{"name":"val isContainerWhitespaceMultipleChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isContainerWhitespaceMultipleChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-container-whitespace-multiple-changed.html","searchKeys":["isContainerWhitespaceMultipleChanged","val isContainerWhitespaceMultipleChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isContainerWhitespaceMultipleChanged"]},{"name":"val isContentOriginSizeChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isContentOriginSizeChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-content-origin-size-changed.html","searchKeys":["isContentOriginSizeChanged","val isContentOriginSizeChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isContentOriginSizeChanged"]},{"name":"val isContentScaleChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isContentScaleChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-content-scale-changed.html","searchKeys":["isContentScaleChanged","val isContentScaleChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isContentScaleChanged"]},{"name":"val isContentSizeChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isContentSizeChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-content-size-changed.html","searchKeys":["isContentSizeChanged","val isContentSizeChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isContentSizeChanged"]},{"name":"val isEmpty: Boolean","description":"com.github.panpf.zoomimage.util.IntRectCompat.isEmpty","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/is-empty.html","searchKeys":["isEmpty","val isEmpty: Boolean","com.github.panpf.zoomimage.util.IntRectCompat.isEmpty"]},{"name":"val isEmpty: Boolean","description":"com.github.panpf.zoomimage.util.RectCompat.isEmpty","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/is-empty.html","searchKeys":["isEmpty","val isEmpty: Boolean","com.github.panpf.zoomimage.util.RectCompat.isEmpty"]},{"name":"val isFinite: Boolean","description":"com.github.panpf.zoomimage.util.RectCompat.isFinite","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/is-finite.html","searchKeys":["isFinite","val isFinite: Boolean","com.github.panpf.zoomimage.util.RectCompat.isFinite"]},{"name":"val isFlipped: Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.isFlipped","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/is-flipped.html","searchKeys":["isFlipped","val isFlipped: Boolean","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.isFlipped"]},{"name":"val isInfinite: Boolean","description":"com.github.panpf.zoomimage.util.RectCompat.isInfinite","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/is-infinite.html","searchKeys":["isInfinite","val isInfinite: Boolean","com.github.panpf.zoomimage.util.RectCompat.isInfinite"]},{"name":"val isLimitOffsetWithinBaseVisibleRectChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isLimitOffsetWithinBaseVisibleRectChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-limit-offset-within-base-visible-rect-changed.html","searchKeys":["isLimitOffsetWithinBaseVisibleRectChanged","val isLimitOffsetWithinBaseVisibleRectChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isLimitOffsetWithinBaseVisibleRectChanged"]},{"name":"val isNotChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isNotChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-not-changed.html","searchKeys":["isNotChanged","val isNotChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isNotChanged"]},{"name":"val isOnlyContainerSizeChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isOnlyContainerSizeChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-only-container-size-changed.html","searchKeys":["isOnlyContainerSizeChanged","val isOnlyContainerSizeChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isOnlyContainerSizeChanged"]},{"name":"val isOnlyContentOriginSizeChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isOnlyContentOriginSizeChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-only-content-origin-size-changed.html","searchKeys":["isOnlyContentOriginSizeChanged","val isOnlyContentOriginSizeChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isOnlyContentOriginSizeChanged"]},{"name":"val isOnlyContentSizeChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isOnlyContentSizeChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-only-content-size-changed.html","searchKeys":["isOnlyContentSizeChanged","val isOnlyContentSizeChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isOnlyContentSizeChanged"]},{"name":"val isOnlyContentSizeOrContentOriginSizeChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isOnlyContentSizeOrContentOriginSizeChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-only-content-size-or-content-origin-size-changed.html","searchKeys":["isOnlyContentSizeOrContentOriginSizeChanged","val isOnlyContentSizeOrContentOriginSizeChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isOnlyContentSizeOrContentOriginSizeChanged"]},{"name":"val isReadModeChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isReadModeChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-read-mode-changed.html","searchKeys":["isReadModeChanged","val isReadModeChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isReadModeChanged"]},{"name":"val isRotationChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isRotationChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-rotation-changed.html","searchKeys":["isRotationChanged","val isRotationChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isRotationChanged"]},{"name":"val isScalesCalculatorChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isScalesCalculatorChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/is-scales-calculator-changed.html","searchKeys":["isScalesCalculatorChanged","val isScalesCalculatorChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.isScalesCalculatorChanged"]},{"name":"val key: String","description":"com.github.panpf.zoomimage.subsampling.SubsamplingImage.key","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-subsampling-image/key.html","searchKeys":["key","val key: String","com.github.panpf.zoomimage.subsampling.SubsamplingImage.key"]},{"name":"val left: Float","description":"com.github.panpf.zoomimage.util.RectCompat.left","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/left.html","searchKeys":["left","val left: Float","com.github.panpf.zoomimage.util.RectCompat.left"]},{"name":"val left: Float","description":"com.github.panpf.zoomimage.zoom.ContainerWhitespace.left","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-container-whitespace/left.html","searchKeys":["left","val left: Float","com.github.panpf.zoomimage.zoom.ContainerWhitespace.left"]},{"name":"val left: Int","description":"com.github.panpf.zoomimage.util.IntRectCompat.left","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/left.html","searchKeys":["left","val left: Int","com.github.panpf.zoomimage.util.IntRectCompat.left"]},{"name":"val limitOffsetWithinBaseVisibleRect: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ResetParams.limitOffsetWithinBaseVisibleRect","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params/limit-offset-within-base-visible-rect.html","searchKeys":["limitOffsetWithinBaseVisibleRect","val limitOffsetWithinBaseVisibleRect: Boolean","com.github.panpf.zoomimage.zoom.internal.ResetParams.limitOffsetWithinBaseVisibleRect"]},{"name":"val logger: Logger","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.logger","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/logger.html","searchKeys":["logger","val logger: Logger","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.logger"]},{"name":"val logger: Logger","description":"com.github.panpf.zoomimage.subsampling.internal.TileDecoder.logger","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-decoder/logger.html","searchKeys":["logger","val logger: Logger","com.github.panpf.zoomimage.subsampling.internal.TileDecoder.logger"]},{"name":"val logger: Logger","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.logger","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/logger.html","searchKeys":["logger","val logger: Logger","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.logger"]},{"name":"val maxDimension: Float","description":"com.github.panpf.zoomimage.util.RectCompat.maxDimension","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/max-dimension.html","searchKeys":["maxDimension","val maxDimension: Float","com.github.panpf.zoomimage.util.RectCompat.maxDimension"]},{"name":"val maxDimension: Float","description":"com.github.panpf.zoomimage.util.SizeCompat.maxDimension","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/max-dimension.html","searchKeys":["maxDimension","val maxDimension: Float","com.github.panpf.zoomimage.util.SizeCompat.maxDimension"]},{"name":"val maxDimension: Int","description":"com.github.panpf.zoomimage.util.IntRectCompat.maxDimension","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/max-dimension.html","searchKeys":["maxDimension","val maxDimension: Int","com.github.panpf.zoomimage.util.IntRectCompat.maxDimension"]},{"name":"val maxScale: Float","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.Result.maxScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/-result/max-scale.html","searchKeys":["maxScale","val maxScale: Float","com.github.panpf.zoomimage.zoom.ScalesCalculator.Result.maxScale"]},{"name":"val maxScale: Float","description":"com.github.panpf.zoomimage.zoom.internal.InitialZoom.maxScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-initial-zoom/max-scale.html","searchKeys":["maxScale","val maxScale: Float","com.github.panpf.zoomimage.zoom.internal.InitialZoom.maxScale"]},{"name":"val mediumScale: Float","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.Result.mediumScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/-result/medium-scale.html","searchKeys":["mediumScale","val mediumScale: Float","com.github.panpf.zoomimage.zoom.ScalesCalculator.Result.mediumScale"]},{"name":"val mediumScale: Float","description":"com.github.panpf.zoomimage.zoom.internal.InitialZoom.mediumScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-initial-zoom/medium-scale.html","searchKeys":["mediumScale","val mediumScale: Float","com.github.panpf.zoomimage.zoom.internal.InitialZoom.mediumScale"]},{"name":"val message: String","description":"com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult.Error.message","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-subsampling-image-generate-result/-error/message.html","searchKeys":["message","val message: String","com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult.Error.message"]},{"name":"val mimeType: String","description":"com.github.panpf.zoomimage.subsampling.ImageInfo.mimeType","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-info/mime-type.html","searchKeys":["mimeType","val mimeType: String","com.github.panpf.zoomimage.subsampling.ImageInfo.mimeType"]},{"name":"val minDimension: Float","description":"com.github.panpf.zoomimage.util.RectCompat.minDimension","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/min-dimension.html","searchKeys":["minDimension","val minDimension: Float","com.github.panpf.zoomimage.util.RectCompat.minDimension"]},{"name":"val minDimension: Float","description":"com.github.panpf.zoomimage.util.SizeCompat.minDimension","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/min-dimension.html","searchKeys":["minDimension","val minDimension: Float","com.github.panpf.zoomimage.util.SizeCompat.minDimension"]},{"name":"val minDimension: Int","description":"com.github.panpf.zoomimage.util.IntRectCompat.minDimension","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/min-dimension.html","searchKeys":["minDimension","val minDimension: Int","com.github.panpf.zoomimage.util.IntRectCompat.minDimension"]},{"name":"val minScale: Float","description":"com.github.panpf.zoomimage.zoom.ScalesCalculator.Result.minScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scales-calculator/-result/min-scale.html","searchKeys":["minScale","val minScale: Float","com.github.panpf.zoomimage.zoom.ScalesCalculator.Result.minScale"]},{"name":"val minScale: Float","description":"com.github.panpf.zoomimage.zoom.internal.InitialZoom.minScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-initial-zoom/min-scale.html","searchKeys":["minScale","val minScale: Float","com.github.panpf.zoomimage.zoom.internal.InitialZoom.minScale"]},{"name":"val module: String","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.module","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/module.html","searchKeys":["module","val module: String","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.module"]},{"name":"val module: String","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.module","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/module.html","searchKeys":["module","val module: String","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.module"]},{"name":"val multiple: Float","description":"com.github.panpf.zoomimage.zoom.DynamicScalesCalculator.multiple","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-dynamic-scales-calculator/multiple.html","searchKeys":["multiple","val multiple: Float","com.github.panpf.zoomimage.zoom.DynamicScalesCalculator.multiple"]},{"name":"val multiple: Float","description":"com.github.panpf.zoomimage.zoom.FixedScalesCalculator.multiple","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-fixed-scales-calculator/multiple.html","searchKeys":["multiple","val multiple: Float","com.github.panpf.zoomimage.zoom.FixedScalesCalculator.multiple"]},{"name":"val notSameDirectionMultiple: Float = 5.0f","description":"com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.notSameDirectionMultiple","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-long-image-decider/not-same-direction-multiple.html","searchKeys":["notSameDirectionMultiple","val notSameDirectionMultiple: Float = 5.0f","com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.notSameDirectionMultiple"]},{"name":"val offset: OffsetCompat","description":"com.github.panpf.zoomimage.util.TransformCompat.offset","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/offset.html","searchKeys":["offset","val offset: OffsetCompat","com.github.panpf.zoomimage.util.TransformCompat.offset"]},{"name":"val offsetX: Float","description":"com.github.panpf.zoomimage.util.TransformCompat.offsetX","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/offset-x.html","searchKeys":["offsetX","val offsetX: Float","com.github.panpf.zoomimage.util.TransformCompat.offsetX"]},{"name":"val offsetY: Float","description":"com.github.panpf.zoomimage.util.TransformCompat.offsetY","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/offset-y.html","searchKeys":["offsetY","val offsetY: Float","com.github.panpf.zoomimage.util.TransformCompat.offsetY"]},{"name":"val onReadyChanged: (SubsamplingCore) -> Unit","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.onReadyChanged","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/on-ready-changed.html","searchKeys":["onReadyChanged","val onReadyChanged: (SubsamplingCore) -> Unit","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.onReadyChanged"]},{"name":"val onTileChanged: (SubsamplingCore) -> Unit","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.onTileChanged","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/on-tile-changed.html","searchKeys":["onTileChanged","val onTileChanged: (SubsamplingCore) -> Unit","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.onTileChanged"]},{"name":"val onTransformChanged: (zoomableCore: ZoomableCore) -> Unit","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.onTransformChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/on-transform-changed.html","searchKeys":["onTransformChanged","val onTransformChanged: (zoomableCore: ZoomableCore) -> Unit","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.onTransformChanged"]},{"name":"val panToScaleTransformer: PanToScaleTransformer","description":"com.github.panpf.zoomimage.zoom.OneFingerScaleSpec.panToScaleTransformer","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-one-finger-scale-spec/pan-to-scale-transformer.html","searchKeys":["panToScaleTransformer","val panToScaleTransformer: PanToScaleTransformer","com.github.panpf.zoomimage.zoom.OneFingerScaleSpec.panToScaleTransformer"]},{"name":"val path: Path","description":"com.github.panpf.zoomimage.subsampling.FileImageSource.path","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-file-image-source/path.html","searchKeys":["path","val path: Path","com.github.panpf.zoomimage.subsampling.FileImageSource.path"]},{"name":"val pivotFractionX: Float","description":"com.github.panpf.zoomimage.util.TransformOriginCompat.pivotFractionX","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-origin-compat/pivot-fraction-x.html","searchKeys":["pivotFractionX","val pivotFractionX: Float","com.github.panpf.zoomimage.util.TransformOriginCompat.pivotFractionX"]},{"name":"val pivotFractionY: Float","description":"com.github.panpf.zoomimage.util.TransformOriginCompat.pivotFractionY","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-origin-compat/pivot-fraction-y.html","searchKeys":["pivotFractionY","val pivotFractionY: Float","com.github.panpf.zoomimage.util.TransformOriginCompat.pivotFractionY"]},{"name":"val readMode: ReadMode?","description":"com.github.panpf.zoomimage.zoom.internal.ResetParams.readMode","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params/read-mode.html","searchKeys":["readMode","val readMode: ReadMode?","com.github.panpf.zoomimage.zoom.internal.ResetParams.readMode"]},{"name":"val reference: Int = 200","description":"com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer.reference","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-default-pan-to-scale-transformer/reference.html","searchKeys":["reference","val reference: Int = 200","com.github.panpf.zoomimage.zoom.DefaultPanToScaleTransformer.reference"]},{"name":"val resId: Int","description":"com.github.panpf.zoomimage.subsampling.ResourceImageSource.resId","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-resource-image-source/res-id.html","searchKeys":["resId","val resId: Int","com.github.panpf.zoomimage.subsampling.ResourceImageSource.resId"]},{"name":"val resourcePath: String","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.resourcePath","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[desktop]-kotlin-resource-image-source/resource-path.html","searchKeys":["resourcePath","val resourcePath: String","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.resourcePath"]},{"name":"val resourcePath: String","description":"com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.resourcePath","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/[ios]-kotlin-resource-image-source/resource-path.html","searchKeys":["resourcePath","val resourcePath: String","com.github.panpf.zoomimage.subsampling.KotlinResourceImageSource.resourcePath"]},{"name":"val resources: Resources","description":"com.github.panpf.zoomimage.subsampling.ResourceImageSource.resources","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-resource-image-source/resources.html","searchKeys":["resources","val resources: Resources","com.github.panpf.zoomimage.subsampling.ResourceImageSource.resources"]},{"name":"val result: Int","description":"com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.result","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params-diff-result/result.html","searchKeys":["result","val result: Int","com.github.panpf.zoomimage.zoom.internal.ResetParamsDiffResult.result"]},{"name":"val right: Float","description":"com.github.panpf.zoomimage.util.RectCompat.right","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/right.html","searchKeys":["right","val right: Float","com.github.panpf.zoomimage.util.RectCompat.right"]},{"name":"val right: Float","description":"com.github.panpf.zoomimage.zoom.ContainerWhitespace.right","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-container-whitespace/right.html","searchKeys":["right","val right: Float","com.github.panpf.zoomimage.zoom.ContainerWhitespace.right"]},{"name":"val right: Int","description":"com.github.panpf.zoomimage.util.IntRectCompat.right","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/right.html","searchKeys":["right","val right: Int","com.github.panpf.zoomimage.util.IntRectCompat.right"]},{"name":"val rotation: Float = 0.0f","description":"com.github.panpf.zoomimage.util.TransformCompat.rotation","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/rotation.html","searchKeys":["rotation","val rotation: Float = 0.0f","com.github.panpf.zoomimage.util.TransformCompat.rotation"]},{"name":"val rotation: Int","description":"com.github.panpf.zoomimage.zoom.internal.ResetParams.rotation","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params/rotation.html","searchKeys":["rotation","val rotation: Int","com.github.panpf.zoomimage.zoom.internal.ResetParams.rotation"]},{"name":"val rotationDegrees: Int","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.rotationDegrees","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/rotation-degrees.html","searchKeys":["rotationDegrees","val rotationDegrees: Int","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.rotationDegrees"]},{"name":"val rotationOrigin: TransformOriginCompat","description":"com.github.panpf.zoomimage.util.TransformCompat.rotationOrigin","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/rotation-origin.html","searchKeys":["rotationOrigin","val rotationOrigin: TransformOriginCompat","com.github.panpf.zoomimage.util.TransformCompat.rotationOrigin"]},{"name":"val rotationOriginX: Float","description":"com.github.panpf.zoomimage.util.TransformCompat.rotationOriginX","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/rotation-origin-x.html","searchKeys":["rotationOriginX","val rotationOriginX: Float","com.github.panpf.zoomimage.util.TransformCompat.rotationOriginX"]},{"name":"val rotationOriginY: Float","description":"com.github.panpf.zoomimage.util.TransformCompat.rotationOriginY","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/rotation-origin-y.html","searchKeys":["rotationOriginY","val rotationOriginY: Float","com.github.panpf.zoomimage.util.TransformCompat.rotationOriginY"]},{"name":"val rtlLayoutDirection: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.rtlLayoutDirection","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/rtl-layout-direction.html","searchKeys":["rtlLayoutDirection","val rtlLayoutDirection: Boolean","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.rtlLayoutDirection"]},{"name":"val running: Boolean","description":"com.github.panpf.zoomimage.subsampling.Tile.AnimationState.running","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/-animation-state/running.html","searchKeys":["running","val running: Boolean","com.github.panpf.zoomimage.subsampling.Tile.AnimationState.running"]},{"name":"val sameDirectionMultiple: Float = 2.5f","description":"com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.sameDirectionMultiple","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/-long-image-decider/same-direction-multiple.html","searchKeys":["sameDirectionMultiple","val sameDirectionMultiple: Float = 2.5f","com.github.panpf.zoomimage.zoom.ReadMode.LongImageDecider.sameDirectionMultiple"]},{"name":"val sampleSize: Int","description":"com.github.panpf.zoomimage.subsampling.SamplingTiles.sampleSize","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-sampling-tiles/sample-size.html","searchKeys":["sampleSize","val sampleSize: Int","com.github.panpf.zoomimage.subsampling.SamplingTiles.sampleSize"]},{"name":"val sampleSize: Int","description":"com.github.panpf.zoomimage.subsampling.Tile.sampleSize","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/sample-size.html","searchKeys":["sampleSize","val sampleSize: Int","com.github.panpf.zoomimage.subsampling.Tile.sampleSize"]},{"name":"val sampleSize: Int","description":"com.github.panpf.zoomimage.subsampling.TileSnapshot.sampleSize","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-snapshot/sample-size.html","searchKeys":["sampleSize","val sampleSize: Int","com.github.panpf.zoomimage.subsampling.TileSnapshot.sampleSize"]},{"name":"val scale: ScaleFactorCompat","description":"com.github.panpf.zoomimage.util.TransformCompat.scale","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/scale.html","searchKeys":["scale","val scale: ScaleFactorCompat","com.github.panpf.zoomimage.util.TransformCompat.scale"]},{"name":"val scaleOrigin: TransformOriginCompat","description":"com.github.panpf.zoomimage.util.TransformCompat.scaleOrigin","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/scale-origin.html","searchKeys":["scaleOrigin","val scaleOrigin: TransformOriginCompat","com.github.panpf.zoomimage.util.TransformCompat.scaleOrigin"]},{"name":"val scaleOriginX: Float","description":"com.github.panpf.zoomimage.util.TransformCompat.scaleOriginX","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/scale-origin-x.html","searchKeys":["scaleOriginX","val scaleOriginX: Float","com.github.panpf.zoomimage.util.TransformCompat.scaleOriginX"]},{"name":"val scaleOriginY: Float","description":"com.github.panpf.zoomimage.util.TransformCompat.scaleOriginY","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/scale-origin-y.html","searchKeys":["scaleOriginY","val scaleOriginY: Float","com.github.panpf.zoomimage.util.TransformCompat.scaleOriginY"]},{"name":"val scaleX: Float","description":"com.github.panpf.zoomimage.util.ScaleFactorCompat.scaleX","location":"zoomimage-core/com.github.panpf.zoomimage.util/-scale-factor-compat/scale-x.html","searchKeys":["scaleX","val scaleX: Float","com.github.panpf.zoomimage.util.ScaleFactorCompat.scaleX"]},{"name":"val scaleX: Float","description":"com.github.panpf.zoomimage.util.TransformCompat.scaleX","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/scale-x.html","searchKeys":["scaleX","val scaleX: Float","com.github.panpf.zoomimage.util.TransformCompat.scaleX"]},{"name":"val scaleY: Float","description":"com.github.panpf.zoomimage.util.ScaleFactorCompat.scaleY","location":"zoomimage-core/com.github.panpf.zoomimage.util/-scale-factor-compat/scale-y.html","searchKeys":["scaleY","val scaleY: Float","com.github.panpf.zoomimage.util.ScaleFactorCompat.scaleY"]},{"name":"val scaleY: Float","description":"com.github.panpf.zoomimage.util.TransformCompat.scaleY","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-compat/scale-y.html","searchKeys":["scaleY","val scaleY: Float","com.github.panpf.zoomimage.util.TransformCompat.scaleY"]},{"name":"val scalesCalculator: ScalesCalculator","description":"com.github.panpf.zoomimage.zoom.internal.ResetParams.scalesCalculator","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-reset-params/scales-calculator.html","searchKeys":["scalesCalculator","val scalesCalculator: ScalesCalculator","com.github.panpf.zoomimage.zoom.internal.ResetParams.scalesCalculator"]},{"name":"val size: IntSizeCompat","description":"com.github.panpf.zoomimage.subsampling.ImageInfo.size","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-info/size.html","searchKeys":["size","val size: IntSizeCompat","com.github.panpf.zoomimage.subsampling.ImageInfo.size"]},{"name":"val size: IntSizeCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.size","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/size.html","searchKeys":["size","val size: IntSizeCompat","com.github.panpf.zoomimage.util.IntRectCompat.size"]},{"name":"val size: SizeCompat","description":"com.github.panpf.zoomimage.util.RectCompat.size","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/size.html","searchKeys":["size","val size: SizeCompat","com.github.panpf.zoomimage.util.RectCompat.size"]},{"name":"val sizeType: Int","description":"com.github.panpf.zoomimage.zoom.ReadMode.sizeType","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-read-mode/size-type.html","searchKeys":["sizeType","val sizeType: Int","com.github.panpf.zoomimage.zoom.ReadMode.sizeType"]},{"name":"val sortedTileGridMap: List<SamplingTiles>","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager.sortedTileGridMap","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/sorted-tile-grid-map.html","searchKeys":["sortedTileGridMap","val sortedTileGridMap: List<SamplingTiles>","com.github.panpf.zoomimage.subsampling.internal.TileManager.sortedTileGridMap"]},{"name":"val srcRect: IntRectCompat","description":"com.github.panpf.zoomimage.subsampling.Tile.srcRect","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/src-rect.html","searchKeys":["srcRect","val srcRect: IntRectCompat","com.github.panpf.zoomimage.subsampling.Tile.srcRect"]},{"name":"val srcRect: IntRectCompat","description":"com.github.panpf.zoomimage.subsampling.TileSnapshot.srcRect","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-snapshot/src-rect.html","searchKeys":["srcRect","val srcRect: IntRectCompat","com.github.panpf.zoomimage.subsampling.TileSnapshot.srcRect"]},{"name":"val state: Int","description":"com.github.panpf.zoomimage.subsampling.TileSnapshot.state","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-snapshot/state.html","searchKeys":["state","val state: Int","com.github.panpf.zoomimage.subsampling.TileSnapshot.state"]},{"name":"val subsamplingImage: SubsamplingImage","description":"com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult.Success.subsamplingImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-subsampling-image-generate-result/-success/subsampling-image.html","searchKeys":["subsamplingImage","val subsamplingImage: SubsamplingImage","com.github.panpf.zoomimage.subsampling.SubsamplingImageGenerateResult.Success.subsamplingImage"]},{"name":"val tag: String","description":"com.github.panpf.zoomimage.util.Logger.tag","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/tag.html","searchKeys":["tag","val tag: String","com.github.panpf.zoomimage.util.Logger.tag"]},{"name":"val tileImage: TileImage?","description":"com.github.panpf.zoomimage.subsampling.TileSnapshot.tileImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile-snapshot/tile-image.html","searchKeys":["tileImage","val tileImage: TileImage?","com.github.panpf.zoomimage.subsampling.TileSnapshot.tileImage"]},{"name":"val tileImageConvertor: TileImageConvertor?","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.tileImageConvertor","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/tile-image-convertor.html","searchKeys":["tileImageConvertor","val tileImageConvertor: TileImageConvertor?","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.tileImageConvertor"]},{"name":"val tiles: List<Tile>","description":"com.github.panpf.zoomimage.subsampling.SamplingTiles.tiles","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-sampling-tiles/tiles.html","searchKeys":["tiles","val tiles: List<Tile>","com.github.panpf.zoomimage.subsampling.SamplingTiles.tiles"]},{"name":"val top: Float","description":"com.github.panpf.zoomimage.util.RectCompat.top","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/top.html","searchKeys":["top","val top: Float","com.github.panpf.zoomimage.util.RectCompat.top"]},{"name":"val top: Float","description":"com.github.panpf.zoomimage.zoom.ContainerWhitespace.top","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-container-whitespace/top.html","searchKeys":["top","val top: Float","com.github.panpf.zoomimage.zoom.ContainerWhitespace.top"]},{"name":"val top: Int","description":"com.github.panpf.zoomimage.util.IntRectCompat.top","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/top.html","searchKeys":["top","val top: Int","com.github.panpf.zoomimage.util.IntRectCompat.top"]},{"name":"val topCenter: IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.topCenter","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/top-center.html","searchKeys":["topCenter","val topCenter: IntOffsetCompat","com.github.panpf.zoomimage.util.IntRectCompat.topCenter"]},{"name":"val topCenter: OffsetCompat","description":"com.github.panpf.zoomimage.util.RectCompat.topCenter","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/top-center.html","searchKeys":["topCenter","val topCenter: OffsetCompat","com.github.panpf.zoomimage.util.RectCompat.topCenter"]},{"name":"val topLeft: IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.topLeft","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/top-left.html","searchKeys":["topLeft","val topLeft: IntOffsetCompat","com.github.panpf.zoomimage.util.IntRectCompat.topLeft"]},{"name":"val topLeft: OffsetCompat","description":"com.github.panpf.zoomimage.util.RectCompat.topLeft","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/top-left.html","searchKeys":["topLeft","val topLeft: OffsetCompat","com.github.panpf.zoomimage.util.RectCompat.topLeft"]},{"name":"val topRight: IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntRectCompat.topRight","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/top-right.html","searchKeys":["topRight","val topRight: IntOffsetCompat","com.github.panpf.zoomimage.util.IntRectCompat.topRight"]},{"name":"val topRight: OffsetCompat","description":"com.github.panpf.zoomimage.util.RectCompat.topRight","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/top-right.html","searchKeys":["topRight","val topRight: OffsetCompat","com.github.panpf.zoomimage.util.RectCompat.topRight"]},{"name":"val translation: Int","description":"com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.translation","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-exif-orientation-helper/translation.html","searchKeys":["translation","val translation: Int","com.github.panpf.zoomimage.subsampling.internal.ExifOrientationHelper.translation"]},{"name":"val uri: Uri","description":"com.github.panpf.zoomimage.subsampling.ContentImageSource.uri","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-content-image-source/uri.html","searchKeys":["uri","val uri: Uri","com.github.panpf.zoomimage.subsampling.ContentImageSource.uri"]},{"name":"val userTransform: TransformCompat","description":"com.github.panpf.zoomimage.zoom.internal.InitialZoom.userTransform","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-initial-zoom/user-transform.html","searchKeys":["userTransform","val userTransform: TransformCompat","com.github.panpf.zoomimage.zoom.internal.InitialZoom.userTransform"]},{"name":"val value: Float","description":"com.github.panpf.zoomimage.zoom.FixedScale.value","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-fixed-scale/value.html","searchKeys":["value","val value: Float","com.github.panpf.zoomimage.zoom.FixedScale.value"]},{"name":"val values: List<Int>","description":"com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.values","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-continuous-transform-type/-companion/values.html","searchKeys":["values","val values: List<Int>","com.github.panpf.zoomimage.zoom.ContinuousTransformType.Companion.values"]},{"name":"val values: List<Int>","description":"com.github.panpf.zoomimage.zoom.GestureType.Companion.values","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-gesture-type/-companion/values.html","searchKeys":["values","val values: List<Int>","com.github.panpf.zoomimage.zoom.GestureType.Companion.values"]},{"name":"val vertical: Edge","description":"com.github.panpf.zoomimage.zoom.ScrollEdge.vertical","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-scroll-edge/vertical.html","searchKeys":["vertical","val vertical: Edge","com.github.panpf.zoomimage.zoom.ScrollEdge.vertical"]},{"name":"val verticalBias: Float","description":"com.github.panpf.zoomimage.zoom.BiasAlignmentCompat.verticalBias","location":"zoomimage-core/com.github.panpf.zoomimage.zoom/-bias-alignment-compat/vertical-bias.html","searchKeys":["verticalBias","val verticalBias: Float","com.github.panpf.zoomimage.zoom.BiasAlignmentCompat.verticalBias"]},{"name":"val width: Float","description":"com.github.panpf.zoomimage.util.RectCompat.width","location":"zoomimage-core/com.github.panpf.zoomimage.util/-rect-compat/width.html","searchKeys":["width","val width: Float","com.github.panpf.zoomimage.util.RectCompat.width"]},{"name":"val width: Float","description":"com.github.panpf.zoomimage.util.SizeCompat.width","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/width.html","searchKeys":["width","val width: Float","com.github.panpf.zoomimage.util.SizeCompat.width"]},{"name":"val width: Int","description":"com.github.panpf.zoomimage.subsampling.ImageInfo.width","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-image-info/width.html","searchKeys":["width","val width: Int","com.github.panpf.zoomimage.subsampling.ImageInfo.width"]},{"name":"val width: Int","description":"com.github.panpf.zoomimage.util.IntRectCompat.width","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-rect-compat/width.html","searchKeys":["width","val width: Int","com.github.panpf.zoomimage.util.IntRectCompat.width"]},{"name":"val width: Int","description":"com.github.panpf.zoomimage.util.IntSizeCompat.width","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-size-compat/width.html","searchKeys":["width","val width: Int","com.github.panpf.zoomimage.util.IntSizeCompat.width"]},{"name":"val x: Float","description":"com.github.panpf.zoomimage.util.OffsetCompat.x","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/x.html","searchKeys":["x","val x: Float","com.github.panpf.zoomimage.util.OffsetCompat.x"]},{"name":"val x: Int","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.x","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/x.html","searchKeys":["x","val x: Int","com.github.panpf.zoomimage.util.IntOffsetCompat.x"]},{"name":"val y: Float","description":"com.github.panpf.zoomimage.util.OffsetCompat.y","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/y.html","searchKeys":["y","val y: Float","com.github.panpf.zoomimage.util.OffsetCompat.y"]},{"name":"val y: Int","description":"com.github.panpf.zoomimage.util.IntOffsetCompat.y","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/y.html","searchKeys":["y","val y: Int","com.github.panpf.zoomimage.util.IntOffsetCompat.y"]},{"name":"val zoomableCore: ZoomableBridge","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.zoomableCore","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/zoomable-core.html","searchKeys":["zoomableCore","val zoomableCore: ZoomableBridge","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.zoomableCore"]},{"name":"value class IntOffsetCompat","description":"com.github.panpf.zoomimage.util.IntOffsetCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-offset-compat/index.html","searchKeys":["IntOffsetCompat","value class IntOffsetCompat","com.github.panpf.zoomimage.util.IntOffsetCompat"]},{"name":"value class IntSizeCompat","description":"com.github.panpf.zoomimage.util.IntSizeCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-int-size-compat/index.html","searchKeys":["IntSizeCompat","value class IntSizeCompat","com.github.panpf.zoomimage.util.IntSizeCompat"]},{"name":"value class OffsetCompat","description":"com.github.panpf.zoomimage.util.OffsetCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-offset-compat/index.html","searchKeys":["OffsetCompat","value class OffsetCompat","com.github.panpf.zoomimage.util.OffsetCompat"]},{"name":"value class ScaleFactorCompat","description":"com.github.panpf.zoomimage.util.ScaleFactorCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-scale-factor-compat/index.html","searchKeys":["ScaleFactorCompat","value class ScaleFactorCompat","com.github.panpf.zoomimage.util.ScaleFactorCompat"]},{"name":"value class SizeCompat","description":"com.github.panpf.zoomimage.util.SizeCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-size-compat/index.html","searchKeys":["SizeCompat","value class SizeCompat","com.github.panpf.zoomimage.util.SizeCompat"]},{"name":"value class TransformOriginCompat","description":"com.github.panpf.zoomimage.util.TransformOriginCompat","location":"zoomimage-core/com.github.panpf.zoomimage.util/-transform-origin-compat/index.html","searchKeys":["TransformOriginCompat","value class TransformOriginCompat","com.github.panpf.zoomimage.util.TransformOriginCompat"]},{"name":"var alignment: AlignmentCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.alignment","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/alignment.html","searchKeys":["alignment","var alignment: AlignmentCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.alignment"]},{"name":"var alpha: Int","description":"com.github.panpf.zoomimage.subsampling.Tile.AnimationState.alpha","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/-animation-state/alpha.html","searchKeys":["alpha","var alpha: Int","com.github.panpf.zoomimage.subsampling.Tile.AnimationState.alpha"]},{"name":"var animationSpec: BaseZoomAnimationSpec?","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.animationSpec","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/animation-spec.html","searchKeys":["animationSpec","var animationSpec: BaseZoomAnimationSpec?","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.animationSpec"]},{"name":"var backgroundTiles: List<TileSnapshot>","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.backgroundTiles","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/background-tiles.html","searchKeys":["backgroundTiles","var backgroundTiles: List<TileSnapshot>","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.backgroundTiles"]},{"name":"var backgroundTiles: List<TileSnapshot>","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager.backgroundTiles","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/background-tiles.html","searchKeys":["backgroundTiles","var backgroundTiles: List<TileSnapshot>","com.github.panpf.zoomimage.subsampling.internal.TileManager.backgroundTiles"]},{"name":"var baseTransform: TransformCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.baseTransform","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/base-transform.html","searchKeys":["baseTransform","var baseTransform: TransformCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.baseTransform"]},{"name":"var containerSize: IntSizeCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.containerSize","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/container-size.html","searchKeys":["containerSize","var containerSize: IntSizeCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.containerSize"]},{"name":"var containerWhitespace: ContainerWhitespace","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.containerWhitespace","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/container-whitespace.html","searchKeys":["containerWhitespace","var containerWhitespace: ContainerWhitespace","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.containerWhitespace"]},{"name":"var containerWhitespaceMultiple: Float","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.containerWhitespaceMultiple","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/container-whitespace-multiple.html","searchKeys":["containerWhitespaceMultiple","var containerWhitespaceMultiple: Float","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.containerWhitespaceMultiple"]},{"name":"var contentBaseDisplayRect: RectCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentBaseDisplayRect","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/content-base-display-rect.html","searchKeys":["contentBaseDisplayRect","var contentBaseDisplayRect: RectCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentBaseDisplayRect"]},{"name":"var contentBaseVisibleRect: RectCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentBaseVisibleRect","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/content-base-visible-rect.html","searchKeys":["contentBaseVisibleRect","var contentBaseVisibleRect: RectCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentBaseVisibleRect"]},{"name":"var contentDisplayRect: RectCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentDisplayRect","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/content-display-rect.html","searchKeys":["contentDisplayRect","var contentDisplayRect: RectCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentDisplayRect"]},{"name":"var contentOriginSize: IntSizeCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentOriginSize","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/content-origin-size.html","searchKeys":["contentOriginSize","var contentOriginSize: IntSizeCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentOriginSize"]},{"name":"var contentScale: ContentScaleCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/content-scale.html","searchKeys":["contentScale","var contentScale: ContentScaleCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentScale"]},{"name":"var contentSize: IntSizeCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentSize","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/content-size.html","searchKeys":["contentSize","var contentSize: IntSizeCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentSize"]},{"name":"var contentVisibleRect: RectCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentVisibleRect","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/content-visible-rect.html","searchKeys":["contentVisibleRect","var contentVisibleRect: RectCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.contentVisibleRect"]},{"name":"var continuousTransformType: Int","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.continuousTransformType","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/continuous-transform-type.html","searchKeys":["continuousTransformType","var continuousTransformType: Int","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.continuousTransformType"]},{"name":"var disabled: Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.TileImageCacheHelper.disabled","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-image-cache-helper/disabled.html","searchKeys":["disabled","var disabled: Boolean","com.github.panpf.zoomimage.subsampling.internal.TileImageCacheHelper.disabled"]},{"name":"var disabledBackgroundTiles: Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.disabledBackgroundTiles","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/disabled-background-tiles.html","searchKeys":["disabledBackgroundTiles","var disabledBackgroundTiles: Boolean","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.disabledBackgroundTiles"]},{"name":"var disabledBackgroundTiles: Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager.disabledBackgroundTiles","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/disabled-background-tiles.html","searchKeys":["disabledBackgroundTiles","var disabledBackgroundTiles: Boolean","com.github.panpf.zoomimage.subsampling.internal.TileManager.disabledBackgroundTiles"]},{"name":"var disabledTileImageCache: Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.disabledTileImageCache","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/disabled-tile-image-cache.html","searchKeys":["disabledTileImageCache","var disabledTileImageCache: Boolean","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.disabledTileImageCache"]},{"name":"var foregroundTiles: List<TileSnapshot>","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.foregroundTiles","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/foreground-tiles.html","searchKeys":["foregroundTiles","var foregroundTiles: List<TileSnapshot>","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.foregroundTiles"]},{"name":"var foregroundTiles: List<TileSnapshot>","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager.foregroundTiles","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/foreground-tiles.html","searchKeys":["foregroundTiles","var foregroundTiles: List<TileSnapshot>","com.github.panpf.zoomimage.subsampling.internal.TileManager.foregroundTiles"]},{"name":"var imageInfo: ImageInfo?","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.imageInfo","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/image-info.html","searchKeys":["imageInfo","var imageInfo: ImageInfo?","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.imageInfo"]},{"name":"var imageLoadRect: IntRectCompat","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.imageLoadRect","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/image-load-rect.html","searchKeys":["imageLoadRect","var imageLoadRect: IntRectCompat","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.imageLoadRect"]},{"name":"var imageLoadRect: IntRectCompat","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager.imageLoadRect","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/image-load-rect.html","searchKeys":["imageLoadRect","var imageLoadRect: IntRectCompat","com.github.panpf.zoomimage.subsampling.internal.TileManager.imageLoadRect"]},{"name":"var keepTransformWhenSameAspectRatioContentSizeChanged: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.keepTransformWhenSameAspectRatioContentSizeChanged","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/keep-transform-when-same-aspect-ratio-content-size-changed.html","searchKeys":["keepTransformWhenSameAspectRatioContentSizeChanged","var keepTransformWhenSameAspectRatioContentSizeChanged: Boolean","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.keepTransformWhenSameAspectRatioContentSizeChanged"]},{"name":"var level: Logger.Level","description":"com.github.panpf.zoomimage.util.Logger.level","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/level.html","searchKeys":["level","var level: Logger.Level","com.github.panpf.zoomimage.util.Logger.level"]},{"name":"var lifecycle: Lifecycle?","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.lifecycle","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/lifecycle.html","searchKeys":["lifecycle","var lifecycle: Lifecycle?","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.lifecycle"]},{"name":"var limitOffsetWithinBaseVisibleRect: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.limitOffsetWithinBaseVisibleRect","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/limit-offset-within-base-visible-rect.html","searchKeys":["limitOffsetWithinBaseVisibleRect","var limitOffsetWithinBaseVisibleRect: Boolean","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.limitOffsetWithinBaseVisibleRect"]},{"name":"var maxScale: Float","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.maxScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/max-scale.html","searchKeys":["maxScale","var maxScale: Float","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.maxScale"]},{"name":"var mediumScale: Float","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.mediumScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/medium-scale.html","searchKeys":["mediumScale","var mediumScale: Float","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.mediumScale"]},{"name":"var minScale: Float","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.minScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/min-scale.html","searchKeys":["minScale","var minScale: Float","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.minScale"]},{"name":"var oneFingerScaleSpec: OneFingerScaleSpec","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.oneFingerScaleSpec","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/one-finger-scale-spec.html","searchKeys":["oneFingerScaleSpec","var oneFingerScaleSpec: OneFingerScaleSpec","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.oneFingerScaleSpec"]},{"name":"var pausedContinuousTransformTypes: Int","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.pausedContinuousTransformTypes","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/paused-continuous-transform-types.html","searchKeys":["pausedContinuousTransformTypes","var pausedContinuousTransformTypes: Int","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.pausedContinuousTransformTypes"]},{"name":"var pausedContinuousTransformTypes: Int","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager.pausedContinuousTransformTypes","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/paused-continuous-transform-types.html","searchKeys":["pausedContinuousTransformTypes","var pausedContinuousTransformTypes: Int","com.github.panpf.zoomimage.subsampling.internal.TileManager.pausedContinuousTransformTypes"]},{"name":"var pipeline: Logger.Pipeline","description":"com.github.panpf.zoomimage.util.Logger.pipeline","location":"zoomimage-core/com.github.panpf.zoomimage.util/-logger/pipeline.html","searchKeys":["pipeline","var pipeline: Logger.Pipeline","com.github.panpf.zoomimage.util.Logger.pipeline"]},{"name":"var readMode: ReadMode?","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.readMode","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/read-mode.html","searchKeys":["readMode","var readMode: ReadMode?","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.readMode"]},{"name":"var ready: Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.ready","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/ready.html","searchKeys":["ready","var ready: Boolean","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.ready"]},{"name":"var regionDecoders: List<RegionDecoder.Factory>","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.regionDecoders","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/region-decoders.html","searchKeys":["regionDecoders","var regionDecoders: List<RegionDecoder.Factory>","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.regionDecoders"]},{"name":"var rotation: Int","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.rotation","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/rotation.html","searchKeys":["rotation","var rotation: Int","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.rotation"]},{"name":"var rubberBandScale: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.rubberBandScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/rubber-band-scale.html","searchKeys":["rubberBandScale","var rubberBandScale: Boolean","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.rubberBandScale"]},{"name":"var sampleSize: Int","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.sampleSize","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/sample-size.html","searchKeys":["sampleSize","var sampleSize: Int","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.sampleSize"]},{"name":"var sampleSize: Int","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager.sampleSize","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/sample-size.html","searchKeys":["sampleSize","var sampleSize: Int","com.github.panpf.zoomimage.subsampling.internal.TileManager.sampleSize"]},{"name":"var scalesCalculator: ScalesCalculator","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.scalesCalculator","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/scales-calculator.html","searchKeys":["scalesCalculator","var scalesCalculator: ScalesCalculator","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.scalesCalculator"]},{"name":"var scrollEdge: ScrollEdge","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.scrollEdge","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/scroll-edge.html","searchKeys":["scrollEdge","var scrollEdge: ScrollEdge","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.scrollEdge"]},{"name":"var state: Int","description":"com.github.panpf.zoomimage.subsampling.Tile.state","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/state.html","searchKeys":["state","var state: Int","com.github.panpf.zoomimage.subsampling.Tile.state"]},{"name":"var stopped: Boolean","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.stopped","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/stopped.html","searchKeys":["stopped","var stopped: Boolean","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.stopped"]},{"name":"var subsamplingImage: SubsamplingImage?","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.subsamplingImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/subsampling-image.html","searchKeys":["subsamplingImage","var subsamplingImage: SubsamplingImage?","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.subsamplingImage"]},{"name":"var threeStepScale: Boolean","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.threeStepScale","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/three-step-scale.html","searchKeys":["threeStepScale","var threeStepScale: Boolean","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.threeStepScale"]},{"name":"var tileAnimationSpec: TileAnimationSpec","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.tileAnimationSpec","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/tile-animation-spec.html","searchKeys":["tileAnimationSpec","var tileAnimationSpec: TileAnimationSpec","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.tileAnimationSpec"]},{"name":"var tileAnimationSpec: TileAnimationSpec","description":"com.github.panpf.zoomimage.subsampling.internal.TileManager.tileAnimationSpec","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-manager/tile-animation-spec.html","searchKeys":["tileAnimationSpec","var tileAnimationSpec: TileAnimationSpec","com.github.panpf.zoomimage.subsampling.internal.TileManager.tileAnimationSpec"]},{"name":"var tileGridSizeMap: Map<Int, IntOffsetCompat>","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.tileGridSizeMap","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/tile-grid-size-map.html","searchKeys":["tileGridSizeMap","var tileGridSizeMap: Map<Int, IntOffsetCompat>","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.tileGridSizeMap"]},{"name":"var tileImage: TileImage?","description":"com.github.panpf.zoomimage.subsampling.Tile.tileImage","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling/-tile/tile-image.html","searchKeys":["tileImage","var tileImage: TileImage?","com.github.panpf.zoomimage.subsampling.Tile.tileImage"]},{"name":"var tileImageCache: TileImageCache?","description":"com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.tileImageCache","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-subsampling-core/tile-image-cache.html","searchKeys":["tileImageCache","var tileImageCache: TileImageCache?","com.github.panpf.zoomimage.subsampling.internal.SubsamplingCore.tileImageCache"]},{"name":"var tileImageCache: TileImageCache?","description":"com.github.panpf.zoomimage.subsampling.internal.TileImageCacheHelper.tileImageCache","location":"zoomimage-core/com.github.panpf.zoomimage.subsampling.internal/-tile-image-cache-helper/tile-image-cache.html","searchKeys":["tileImageCache","var tileImageCache: TileImageCache?","com.github.panpf.zoomimage.subsampling.internal.TileImageCacheHelper.tileImageCache"]},{"name":"var transform: TransformCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.transform","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/transform.html","searchKeys":["transform","var transform: TransformCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.transform"]},{"name":"var userOffsetBoundsRect: RectCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.userOffsetBoundsRect","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/user-offset-bounds-rect.html","searchKeys":["userOffsetBoundsRect","var userOffsetBoundsRect: RectCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.userOffsetBoundsRect"]},{"name":"var userTransform: TransformCompat","description":"com.github.panpf.zoomimage.zoom.internal.ZoomableCore.userTransform","location":"zoomimage-core/com.github.panpf.zoomimage.zoom.internal/-zoomable-core/user-transform.html","searchKeys":["userTransform","var userTransform: TransformCompat","com.github.panpf.zoomimage.zoom.internal.ZoomableCore.userTransform"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.equals","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch/-sketch-view-subsampling-image-generator/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.equals"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.hashCode","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch/-sketch-view-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.toString","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch/-sketch-view-subsampling-image-generator/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.toString"]},{"name":"abstract suspend fun generateImage(sketch: Sketch, result: DisplayResult.Success, drawable: Drawable): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.generateImage","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch/-sketch-view-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","abstract suspend fun generateImage(sketch: Sketch, result: DisplayResult.Success, drawable: Drawable): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.generateImage"]},{"name":"class AnimatableSketchViewSubsamplingImageGenerator : SketchViewSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-animatable-sketch-view-subsampling-image-generator/index.html","searchKeys":["AnimatableSketchViewSubsamplingImageGenerator","class AnimatableSketchViewSubsamplingImageGenerator : SketchViewSubsamplingImageGenerator","com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator"]},{"name":"class EngineSketchViewSubsamplingImageGenerator : SketchViewSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-engine-sketch-view-subsampling-image-generator/index.html","searchKeys":["EngineSketchViewSubsamplingImageGenerator","class EngineSketchViewSubsamplingImageGenerator : SketchViewSubsamplingImageGenerator","com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator"]},{"name":"class SavedState : View.BaseSavedState","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-saved-state/index.html","searchKeys":["SavedState","class SavedState : View.BaseSavedState","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.AnimatableSketchViewSubsamplingImageGenerator","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-animatable-sketch-view-subsampling-image-generator/-animatable-sketch-view-subsampling-image-generator.html","searchKeys":["AnimatableSketchViewSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.AnimatableSketchViewSubsamplingImageGenerator"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.EngineSketchViewSubsamplingImageGenerator","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-engine-sketch-view-subsampling-image-generator/-engine-sketch-view-subsampling-image-generator.html","searchKeys":["EngineSketchViewSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.EngineSketchViewSubsamplingImageGenerator"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"com.github.panpf.zoomimage.SketchZoomImageView.SketchZoomImageView","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage/-sketch-zoom-image-view/-sketch-zoom-image-view.html","searchKeys":["SketchZoomImageView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","com.github.panpf.zoomimage.SketchZoomImageView.SketchZoomImageView"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.AbsAbilityZoomImageView","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-abs-ability-zoom-image-view.html","searchKeys":["AbsAbilityZoomImageView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.AbsAbilityZoomImageView"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.AbsStateZoomImageView","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/-abs-state-zoom-image-view.html","searchKeys":["AbsStateZoomImageView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.AbsStateZoomImageView"]},{"name":"fun registerDisplayListener(listener: Listener<DisplayRequest, DisplayResult.Success, DisplayResult.Error>)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.registerDisplayListener","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/register-display-listener.html","searchKeys":["registerDisplayListener","fun registerDisplayListener(listener: Listener<DisplayRequest, DisplayResult.Success, DisplayResult.Error>)","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.registerDisplayListener"]},{"name":"fun registerDisplayProgressListener(listener: ProgressListener<DisplayRequest>)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.registerDisplayProgressListener","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/register-display-progress-listener.html","searchKeys":["registerDisplayProgressListener","fun registerDisplayProgressListener(listener: ProgressListener<DisplayRequest>)","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.registerDisplayProgressListener"]},{"name":"fun setSubsamplingImageGenerators(subsamplingImageGenerators: List<SketchViewSubsamplingImageGenerator>?)","description":"com.github.panpf.zoomimage.SketchZoomImageView.setSubsamplingImageGenerators","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage/-sketch-zoom-image-view/set-subsampling-image-generators.html","searchKeys":["setSubsamplingImageGenerators","fun setSubsamplingImageGenerators(subsamplingImageGenerators: List<SketchViewSubsamplingImageGenerator>?)","com.github.panpf.zoomimage.SketchZoomImageView.setSubsamplingImageGenerators"]},{"name":"fun setSubsamplingImageGenerators(vararg subsamplingImageGenerators: SketchViewSubsamplingImageGenerator)","description":"com.github.panpf.zoomimage.SketchZoomImageView.setSubsamplingImageGenerators","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage/-sketch-zoom-image-view/set-subsampling-image-generators.html","searchKeys":["setSubsamplingImageGenerators","fun setSubsamplingImageGenerators(vararg subsamplingImageGenerators: SketchViewSubsamplingImageGenerator)","com.github.panpf.zoomimage.SketchZoomImageView.setSubsamplingImageGenerators"]},{"name":"fun unregisterDisplayListener(listener: Listener<DisplayRequest, DisplayResult.Success, DisplayResult.Error>)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.unregisterDisplayListener","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/unregister-display-listener.html","searchKeys":["unregisterDisplayListener","fun unregisterDisplayListener(listener: Listener<DisplayRequest, DisplayResult.Success, DisplayResult.Error>)","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.unregisterDisplayListener"]},{"name":"fun unregisterDisplayProgressListener(listener: ProgressListener<DisplayRequest>)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.unregisterDisplayProgressListener","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/unregister-display-progress-listener.html","searchKeys":["unregisterDisplayProgressListener","fun unregisterDisplayProgressListener(listener: ProgressListener<DisplayRequest>)","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.unregisterDisplayProgressListener"]},{"name":"interface SketchViewSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch/-sketch-view-subsampling-image-generator/index.html","searchKeys":["SketchViewSubsamplingImageGenerator","interface SketchViewSubsamplingImageGenerator","com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.Companion","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-saved-state/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.Companion"]},{"name":"open class AbsAbilityZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : ZoomImageView, ViewAbilityContainer","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/index.html","searchKeys":["AbsAbilityZoomImageView","open class AbsAbilityZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : ZoomImageView, ViewAbilityContainer","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView"]},{"name":"open class AbsStateZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AbsAbilityZoomImageView, ImageOptionsProvider","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/index.html","searchKeys":["AbsStateZoomImageView","open class AbsStateZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AbsAbilityZoomImageView, ImageOptionsProvider","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView"]},{"name":"open class SketchZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AbsStateZoomImageView","description":"com.github.panpf.zoomimage.SketchZoomImageView","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage/-sketch-zoom-image-view/index.html","searchKeys":["SketchZoomImageView","open class SketchZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AbsStateZoomImageView","com.github.panpf.zoomimage.SketchZoomImageView"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.equals","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-animatable-sketch-view-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.equals","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-engine-sketch-view-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.equals"]},{"name":"open override fun getDisplayListener(): Listener<DisplayRequest, DisplayResult.Success, DisplayResult.Error>?","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getDisplayListener","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/get-display-listener.html","searchKeys":["getDisplayListener","open override fun getDisplayListener(): Listener<DisplayRequest, DisplayResult.Success, DisplayResult.Error>?","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getDisplayListener"]},{"name":"open override fun getDisplayListener(): Listener<DisplayRequest, DisplayResult.Success, DisplayResult.Error>?","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.getDisplayListener","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/get-display-listener.html","searchKeys":["getDisplayListener","open override fun getDisplayListener(): Listener<DisplayRequest, DisplayResult.Success, DisplayResult.Error>?","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.getDisplayListener"]},{"name":"open override fun getDisplayProgressListener(): ProgressListener<DisplayRequest>?","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getDisplayProgressListener","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/get-display-progress-listener.html","searchKeys":["getDisplayProgressListener","open override fun getDisplayProgressListener(): ProgressListener<DisplayRequest>?","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getDisplayProgressListener"]},{"name":"open override fun getDisplayProgressListener(): ProgressListener<DisplayRequest>?","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.getDisplayProgressListener","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/get-display-progress-listener.html","searchKeys":["getDisplayProgressListener","open override fun getDisplayProgressListener(): ProgressListener<DisplayRequest>?","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.getDisplayProgressListener"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.hashCode","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-animatable-sketch-view-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.hashCode","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-engine-sketch-view-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.hashCode"]},{"name":"open override fun onDrawForeground(canvas: Canvas)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.onDrawForeground","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/on-draw-foreground.html","searchKeys":["onDrawForeground","open override fun onDrawForeground(canvas: Canvas)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.onDrawForeground"]},{"name":"open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","description":"com.github.panpf.zoomimage.SketchZoomImageView.onDrawableChanged","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage/-sketch-zoom-image-view/on-drawable-changed.html","searchKeys":["onDrawableChanged","open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","com.github.panpf.zoomimage.SketchZoomImageView.onDrawableChanged"]},{"name":"open override fun onTouchEvent(event: MotionEvent): Boolean","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.onTouchEvent","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/on-touch-event.html","searchKeys":["onTouchEvent","open override fun onTouchEvent(event: MotionEvent): Boolean","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.onTouchEvent"]},{"name":"open override fun removeViewAbility(viewAbility: ViewAbility)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.removeViewAbility","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/remove-view-ability.html","searchKeys":["removeViewAbility","open override fun removeViewAbility(viewAbility: ViewAbility)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.removeViewAbility"]},{"name":"open override fun setImageDrawable(drawable: Drawable?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setImageDrawable","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/set-image-drawable.html","searchKeys":["setImageDrawable","open override fun setImageDrawable(drawable: Drawable?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setImageDrawable"]},{"name":"open override fun setImageURI(uri: Uri?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setImageURI","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/set-image-u-r-i.html","searchKeys":["setImageURI","open override fun setImageURI(uri: Uri?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setImageURI"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.toString","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-saved-state/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.toString","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-animatable-sketch-view-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.toString","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-engine-sketch-view-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.toString"]},{"name":"open override fun writeToParcel(out: Parcel, flags: Int)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.writeToParcel","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-saved-state/write-to-parcel.html","searchKeys":["writeToParcel","open override fun writeToParcel(out: Parcel, flags: Int)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.writeToParcel"]},{"name":"open override val viewAbilityList: List<ViewAbility>","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.viewAbilityList","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/view-ability-list.html","searchKeys":["viewAbilityList","open override val viewAbilityList: List<ViewAbility>","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.viewAbilityList"]},{"name":"open override var displayImageOptions: ImageOptions?","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.displayImageOptions","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/display-image-options.html","searchKeys":["displayImageOptions","open override var displayImageOptions: ImageOptions?","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.displayImageOptions"]},{"name":"open suspend override fun generateImage(sketch: Sketch, result: DisplayResult.Success, drawable: Drawable): SubsamplingImageGenerateResult","description":"com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.generateImage","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-engine-sketch-view-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(sketch: Sketch, result: DisplayResult.Success, drawable: Drawable): SubsamplingImageGenerateResult","com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.generateImage"]},{"name":"open suspend override fun generateImage(sketch: Sketch, result: DisplayResult.Success, drawable: Drawable): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.generateImage","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-animatable-sketch-view-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(sketch: Sketch, result: DisplayResult.Success, drawable: Drawable): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.generateImage"]},{"name":"override fun addViewAbility(viewAbility: ViewAbility)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.addViewAbility","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/add-view-ability.html","searchKeys":["addViewAbility","override fun addViewAbility(viewAbility: ViewAbility)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.addViewAbility"]},{"name":"override fun getImageMatrix(): Matrix","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getImageMatrix","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/get-image-matrix.html","searchKeys":["getImageMatrix","override fun getImageMatrix(): Matrix","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getImageMatrix"]},{"name":"override fun getScaleType(): ImageView.ScaleType","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getScaleType","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/get-scale-type.html","searchKeys":["getScaleType","override fun getScaleType(): ImageView.ScaleType","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getScaleType"]},{"name":"override fun setImageMatrix(matrix: Matrix?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setImageMatrix","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/set-image-matrix.html","searchKeys":["setImageMatrix","override fun setImageMatrix(matrix: Matrix?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setImageMatrix"]},{"name":"override fun setOnClickListener(l: View.OnClickListener?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setOnClickListener","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/set-on-click-listener.html","searchKeys":["setOnClickListener","override fun setOnClickListener(l: View.OnClickListener?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setOnClickListener"]},{"name":"override fun setOnLongClickListener(l: View.OnLongClickListener?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setOnLongClickListener","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/set-on-long-click-listener.html","searchKeys":["setOnLongClickListener","override fun setOnLongClickListener(l: View.OnLongClickListener?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setOnLongClickListener"]},{"name":"override fun setScaleType(scaleType: ImageView.ScaleType)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setScaleType","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/set-scale-type.html","searchKeys":["setScaleType","override fun setScaleType(scaleType: ImageView.ScaleType)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setScaleType"]},{"name":"override fun superGetImageMatrix(): Matrix","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superGetImageMatrix","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/super-get-image-matrix.html","searchKeys":["superGetImageMatrix","override fun superGetImageMatrix(): Matrix","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superGetImageMatrix"]},{"name":"override fun superGetScaleType(): ImageView.ScaleType","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superGetScaleType","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/super-get-scale-type.html","searchKeys":["superGetScaleType","override fun superGetScaleType(): ImageView.ScaleType","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superGetScaleType"]},{"name":"override fun superSetImageMatrix(matrix: Matrix?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetImageMatrix","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/super-set-image-matrix.html","searchKeys":["superSetImageMatrix","override fun superSetImageMatrix(matrix: Matrix?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetImageMatrix"]},{"name":"override fun superSetOnClickListener(listener: View.OnClickListener?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetOnClickListener","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/super-set-on-click-listener.html","searchKeys":["superSetOnClickListener","override fun superSetOnClickListener(listener: View.OnClickListener?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetOnClickListener"]},{"name":"override fun superSetOnLongClickListener(listener: View.OnLongClickListener?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetOnLongClickListener","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/super-set-on-long-click-listener.html","searchKeys":["superSetOnLongClickListener","override fun superSetOnLongClickListener(listener: View.OnLongClickListener?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetOnLongClickListener"]},{"name":"override fun superSetScaleType(scaleType: ImageView.ScaleType)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetScaleType","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/super-set-scale-type.html","searchKeys":["superSetScaleType","override fun superSetScaleType(scaleType: ImageView.ScaleType)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetScaleType"]},{"name":"val CREATOR: Parcelable.Creator<AbsAbilityZoomImageView.SavedState>","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.Companion.CREATOR","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-saved-state/-companion/-c-r-e-a-t-o-r.html","searchKeys":["CREATOR","val CREATOR: Parcelable.Creator<AbsAbilityZoomImageView.SavedState>","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.Companion.CREATOR"]},{"name":"val requestState: DisplayRequestState","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.requestState","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/request-state.html","searchKeys":["requestState","val requestState: DisplayRequestState","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.requestState"]},{"name":"var abilityListStateBundle: Bundle?","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.abilityListStateBundle","location":"zoomimage-view-sketch3-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-saved-state/ability-list-state-bundle.html","searchKeys":["abilityListStateBundle","var abilityListStateBundle: Bundle?","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.abilityListStateBundle"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.glide.GlideSubsamplingImageGenerator.equals","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-subsampling-image-generator/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.glide.GlideSubsamplingImageGenerator.equals"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.zoomimage.glide.GlideSubsamplingImageGenerator.hashCode","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.zoomimage.glide.GlideSubsamplingImageGenerator.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.zoomimage.glide.GlideSubsamplingImageGenerator.toString","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-subsampling-image-generator/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.zoomimage.glide.GlideSubsamplingImageGenerator.toString"]},{"name":"abstract suspend fun generateImage(context: Context, glide: Glide, model: Any, drawable: Drawable): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.glide.GlideSubsamplingImageGenerator.generateImage","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","abstract suspend fun generateImage(context: Context, glide: Glide, model: Any, drawable: Drawable): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.glide.GlideSubsamplingImageGenerator.generateImage"]},{"name":"class AnimatableGlideSubsamplingImageGenerator : GlideSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.glide.internal.AnimatableGlideSubsamplingImageGenerator","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide.internal/-animatable-glide-subsampling-image-generator/index.html","searchKeys":["AnimatableGlideSubsamplingImageGenerator","class AnimatableGlideSubsamplingImageGenerator : GlideSubsamplingImageGenerator","com.github.panpf.zoomimage.glide.internal.AnimatableGlideSubsamplingImageGenerator"]},{"name":"class EngineGlideSubsamplingImageGenerator : GlideSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.glide.internal.EngineGlideSubsamplingImageGenerator","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide.internal/-engine-glide-subsampling-image-generator/index.html","searchKeys":["EngineGlideSubsamplingImageGenerator","class EngineGlideSubsamplingImageGenerator : GlideSubsamplingImageGenerator","com.github.panpf.zoomimage.glide.internal.EngineGlideSubsamplingImageGenerator"]},{"name":"class Factory(val glide: Glide, val glideUrl: GlideUrl) : ImageSource.Factory","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/-factory/index.html","searchKeys":["Factory","class Factory(val glide: Glide, val glideUrl: GlideUrl) : ImageSource.Factory","com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory"]},{"name":"class GlideHttpImageSource(val glideUrl: GlideUrl, val openSource: () -> Source) : ImageSource","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/index.html","searchKeys":["GlideHttpImageSource","class GlideHttpImageSource(val glideUrl: GlideUrl, val openSource: () -> Source) : ImageSource","com.github.panpf.zoomimage.glide.GlideHttpImageSource"]},{"name":"class GlideTileImageCache(glide: Glide) : TileImageCache","description":"com.github.panpf.zoomimage.glide.GlideTileImageCache","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-tile-image-cache/index.html","searchKeys":["GlideTileImageCache","class GlideTileImageCache(glide: Glide) : TileImageCache","com.github.panpf.zoomimage.glide.GlideTileImageCache"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.glide.internal.AnimatableGlideSubsamplingImageGenerator.AnimatableGlideSubsamplingImageGenerator","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide.internal/-animatable-glide-subsampling-image-generator/-animatable-glide-subsampling-image-generator.html","searchKeys":["AnimatableGlideSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.glide.internal.AnimatableGlideSubsamplingImageGenerator.AnimatableGlideSubsamplingImageGenerator"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.glide.internal.EngineGlideSubsamplingImageGenerator.EngineGlideSubsamplingImageGenerator","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide.internal/-engine-glide-subsampling-image-generator/-engine-glide-subsampling-image-generator.html","searchKeys":["EngineGlideSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.glide.internal.EngineGlideSubsamplingImageGenerator.EngineGlideSubsamplingImageGenerator"]},{"name":"constructor(glide: Glide)","description":"com.github.panpf.zoomimage.glide.GlideTileImageCache.GlideTileImageCache","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-tile-image-cache/-glide-tile-image-cache.html","searchKeys":["GlideTileImageCache","constructor(glide: Glide)","com.github.panpf.zoomimage.glide.GlideTileImageCache.GlideTileImageCache"]},{"name":"constructor(glide: Glide, glideUrl: GlideUrl)","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.Factory","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/-factory/-factory.html","searchKeys":["Factory","constructor(glide: Glide, glideUrl: GlideUrl)","com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.Factory"]},{"name":"constructor(glide: Glide, imageUri: String)","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.Factory","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/-factory/-factory.html","searchKeys":["Factory","constructor(glide: Glide, imageUri: String)","com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.Factory"]},{"name":"constructor(glideUrl: GlideUrl, openSource: () -> Source)","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.GlideHttpImageSource","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/-glide-http-image-source.html","searchKeys":["GlideHttpImageSource","constructor(glideUrl: GlideUrl, openSource: () -> Source)","com.github.panpf.zoomimage.glide.GlideHttpImageSource.GlideHttpImageSource"]},{"name":"fun getRequestFromView(view: ImageView): SingleRequest<*>?","description":"com.bumptech.glide.getRequestFromView","location":"zoomimage-core-glide/com.bumptech.glide/get-request-from-view.html","searchKeys":["getRequestFromView","fun getRequestFromView(view: ImageView): SingleRequest<*>?","com.bumptech.glide.getRequestFromView"]},{"name":"fun modelToImageSource(context: Context, glide: Glide, model: Any): ImageSource.Factory?","description":"com.github.panpf.zoomimage.glide.internal.modelToImageSource","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide.internal/model-to-image-source.html","searchKeys":["modelToImageSource","fun modelToImageSource(context: Context, glide: Glide, model: Any): ImageSource.Factory?","com.github.panpf.zoomimage.glide.internal.modelToImageSource"]},{"name":"interface GlideSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.glide.GlideSubsamplingImageGenerator","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-subsampling-image-generator/index.html","searchKeys":["GlideSubsamplingImageGenerator","interface GlideSubsamplingImageGenerator","com.github.panpf.zoomimage.glide.GlideSubsamplingImageGenerator"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.equals","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.equals","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.glide.GlideHttpImageSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.glide.internal.AnimatableGlideSubsamplingImageGenerator.equals","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide.internal/-animatable-glide-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.glide.internal.AnimatableGlideSubsamplingImageGenerator.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.glide.internal.EngineGlideSubsamplingImageGenerator.equals","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide.internal/-engine-glide-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.glide.internal.EngineGlideSubsamplingImageGenerator.equals"]},{"name":"open override fun get(key: String): TileImage?","description":"com.github.panpf.zoomimage.glide.GlideTileImageCache.get","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-tile-image-cache/get.html","searchKeys":["get","open override fun get(key: String): TileImage?","com.github.panpf.zoomimage.glide.GlideTileImageCache.get"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.hashCode","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.hashCode","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.glide.GlideHttpImageSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.glide.internal.AnimatableGlideSubsamplingImageGenerator.hashCode","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide.internal/-animatable-glide-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.glide.internal.AnimatableGlideSubsamplingImageGenerator.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.glide.internal.EngineGlideSubsamplingImageGenerator.hashCode","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide.internal/-engine-glide-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.glide.internal.EngineGlideSubsamplingImageGenerator.hashCode"]},{"name":"open override fun openSource(): Source","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.openSource","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/open-source.html","searchKeys":["openSource","open override fun openSource(): Source","com.github.panpf.zoomimage.glide.GlideHttpImageSource.openSource"]},{"name":"open override fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","description":"com.github.panpf.zoomimage.glide.GlideTileImageCache.put","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-tile-image-cache/put.html","searchKeys":["put","open override fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","com.github.panpf.zoomimage.glide.GlideTileImageCache.put"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.toString","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.toString","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.glide.GlideHttpImageSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.glide.internal.AnimatableGlideSubsamplingImageGenerator.toString","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide.internal/-animatable-glide-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.glide.internal.AnimatableGlideSubsamplingImageGenerator.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.glide.internal.EngineGlideSubsamplingImageGenerator.toString","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide.internal/-engine-glide-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.glide.internal.EngineGlideSubsamplingImageGenerator.toString"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.key","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.key","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.glide.GlideHttpImageSource.key"]},{"name":"open suspend override fun create(): GlideHttpImageSource","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.create","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/-factory/create.html","searchKeys":["create","open suspend override fun create(): GlideHttpImageSource","com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.create"]},{"name":"open suspend override fun generateImage(context: Context, glide: Glide, model: Any, drawable: Drawable): SubsamplingImageGenerateResult","description":"com.github.panpf.zoomimage.glide.internal.EngineGlideSubsamplingImageGenerator.generateImage","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide.internal/-engine-glide-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(context: Context, glide: Glide, model: Any, drawable: Drawable): SubsamplingImageGenerateResult","com.github.panpf.zoomimage.glide.internal.EngineGlideSubsamplingImageGenerator.generateImage"]},{"name":"open suspend override fun generateImage(context: Context, glide: Glide, model: Any, drawable: Drawable): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.glide.internal.AnimatableGlideSubsamplingImageGenerator.generateImage","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide.internal/-animatable-glide-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(context: Context, glide: Glide, model: Any, drawable: Drawable): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.glide.internal.AnimatableGlideSubsamplingImageGenerator.generateImage"]},{"name":"val Glide.internalGlideContext: GlideContext","description":"com.bumptech.glide.internalGlideContext","location":"zoomimage-core-glide/com.bumptech.glide/internal-glide-context.html","searchKeys":["internalGlideContext","val Glide.internalGlideContext: GlideContext","com.bumptech.glide.internalGlideContext"]},{"name":"val RequestBuilder<*>.internalModel: Any?","description":"com.bumptech.glide.internalModel","location":"zoomimage-core-glide/com.bumptech.glide/internal-model.html","searchKeys":["internalModel","val RequestBuilder<*>.internalModel: Any?","com.bumptech.glide.internalModel"]},{"name":"val SingleRequest<*>.internalModel: Any?","description":"com.bumptech.glide.internalModel","location":"zoomimage-core-glide/com.bumptech.glide/internal-model.html","searchKeys":["internalModel","val SingleRequest<*>.internalModel: Any?","com.bumptech.glide.internalModel"]},{"name":"val glide: Glide","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.glide","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/-factory/glide.html","searchKeys":["glide","val glide: Glide","com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.glide"]},{"name":"val glideUrl: GlideUrl","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.glideUrl","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/-factory/glide-url.html","searchKeys":["glideUrl","val glideUrl: GlideUrl","com.github.panpf.zoomimage.glide.GlideHttpImageSource.Factory.glideUrl"]},{"name":"val glideUrl: GlideUrl","description":"com.github.panpf.zoomimage.glide.GlideHttpImageSource.glideUrl","location":"zoomimage-core-glide/com.github.panpf.zoomimage.glide/-glide-http-image-source/glide-url.html","searchKeys":["glideUrl","val glideUrl: GlideUrl","com.github.panpf.zoomimage.glide.GlideHttpImageSource.glideUrl"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.equals","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil/-coil-view-subsampling-image-generator/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.equals"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.hashCode","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil/-coil-view-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.toString","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil/-coil-view-subsampling-image-generator/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.toString"]},{"name":"abstract suspend fun generateImage(context: <Error class: unknown class>, imageLoader: ImageLoader, result: SuccessResult, drawable: Drawable): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.generateImage","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil/-coil-view-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","abstract suspend fun generateImage(context: <Error class: unknown class>, imageLoader: ImageLoader, result: SuccessResult, drawable: Drawable): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.generateImage"]},{"name":"class AnimatableCoilViewSubsamplingImageGenerator : CoilViewSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil.internal/-animatable-coil-view-subsampling-image-generator/index.html","searchKeys":["AnimatableCoilViewSubsamplingImageGenerator","class AnimatableCoilViewSubsamplingImageGenerator : CoilViewSubsamplingImageGenerator","com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator"]},{"name":"class EngineCoilViewSubsamplingImageGenerator : CoilViewSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil.internal/-engine-coil-view-subsampling-image-generator/index.html","searchKeys":["EngineCoilViewSubsamplingImageGenerator","class EngineCoilViewSubsamplingImageGenerator : CoilViewSubsamplingImageGenerator","com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.AnimatableCoilViewSubsamplingImageGenerator","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil.internal/-animatable-coil-view-subsampling-image-generator/-animatable-coil-view-subsampling-image-generator.html","searchKeys":["AnimatableCoilViewSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.AnimatableCoilViewSubsamplingImageGenerator"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.EngineCoilViewSubsamplingImageGenerator","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil.internal/-engine-coil-view-subsampling-image-generator/-engine-coil-view-subsampling-image-generator.html","searchKeys":["EngineCoilViewSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.EngineCoilViewSubsamplingImageGenerator"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"com.github.panpf.zoomimage.CoilZoomImageView.CoilZoomImageView","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage/-coil-zoom-image-view/-coil-zoom-image-view.html","searchKeys":["CoilZoomImageView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","com.github.panpf.zoomimage.CoilZoomImageView.CoilZoomImageView"]},{"name":"fun setSubsamplingImageGenerators(subsamplingImageGenerators: List<CoilViewSubsamplingImageGenerator>?)","description":"com.github.panpf.zoomimage.CoilZoomImageView.setSubsamplingImageGenerators","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage/-coil-zoom-image-view/set-subsampling-image-generators.html","searchKeys":["setSubsamplingImageGenerators","fun setSubsamplingImageGenerators(subsamplingImageGenerators: List<CoilViewSubsamplingImageGenerator>?)","com.github.panpf.zoomimage.CoilZoomImageView.setSubsamplingImageGenerators"]},{"name":"fun setSubsamplingImageGenerators(vararg subsamplingImageGenerators: CoilViewSubsamplingImageGenerator)","description":"com.github.panpf.zoomimage.CoilZoomImageView.setSubsamplingImageGenerators","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage/-coil-zoom-image-view/set-subsampling-image-generators.html","searchKeys":["setSubsamplingImageGenerators","fun setSubsamplingImageGenerators(vararg subsamplingImageGenerators: CoilViewSubsamplingImageGenerator)","com.github.panpf.zoomimage.CoilZoomImageView.setSubsamplingImageGenerators"]},{"name":"interface CoilViewSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil/-coil-view-subsampling-image-generator/index.html","searchKeys":["CoilViewSubsamplingImageGenerator","interface CoilViewSubsamplingImageGenerator","com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator"]},{"name":"open class CoilZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : ZoomImageView","description":"com.github.panpf.zoomimage.CoilZoomImageView","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage/-coil-zoom-image-view/index.html","searchKeys":["CoilZoomImageView","open class CoilZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : ZoomImageView","com.github.panpf.zoomimage.CoilZoomImageView"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.equals","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil.internal/-animatable-coil-view-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.equals","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil.internal/-engine-coil-view-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.equals"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.hashCode","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil.internal/-animatable-coil-view-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.hashCode","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil.internal/-engine-coil-view-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.hashCode"]},{"name":"open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","description":"com.github.panpf.zoomimage.CoilZoomImageView.onDrawableChanged","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage/-coil-zoom-image-view/on-drawable-changed.html","searchKeys":["onDrawableChanged","open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","com.github.panpf.zoomimage.CoilZoomImageView.onDrawableChanged"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.toString","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil.internal/-animatable-coil-view-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.toString","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil.internal/-engine-coil-view-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.toString"]},{"name":"open suspend override fun generateImage(context: <Error class: unknown class>, imageLoader: ImageLoader, result: SuccessResult, drawable: Drawable): SubsamplingImageGenerateResult","description":"com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.generateImage","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil.internal/-engine-coil-view-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(context: <Error class: unknown class>, imageLoader: ImageLoader, result: SuccessResult, drawable: Drawable): SubsamplingImageGenerateResult","com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.generateImage"]},{"name":"open suspend override fun generateImage(context: <Error class: unknown class>, imageLoader: ImageLoader, result: SuccessResult, drawable: Drawable): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.generateImage","location":"zoomimage-view-coil3-core/com.github.panpf.zoomimage.view.coil.internal/-animatable-coil-view-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(context: <Error class: unknown class>, imageLoader: ImageLoader, result: SuccessResult, drawable: Drawable): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.generateImage"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"com.github.panpf.zoomimage.GlideZoomImageView.GlideZoomImageView","location":"zoomimage-view-glide/com.github.panpf.zoomimage/-glide-zoom-image-view/-glide-zoom-image-view.html","searchKeys":["GlideZoomImageView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","com.github.panpf.zoomimage.GlideZoomImageView.GlideZoomImageView"]},{"name":"fun setSubsamplingImageGenerators(subsamplingImageGenerators: List<GlideSubsamplingImageGenerator>?)","description":"com.github.panpf.zoomimage.GlideZoomImageView.setSubsamplingImageGenerators","location":"zoomimage-view-glide/com.github.panpf.zoomimage/-glide-zoom-image-view/set-subsampling-image-generators.html","searchKeys":["setSubsamplingImageGenerators","fun setSubsamplingImageGenerators(subsamplingImageGenerators: List<GlideSubsamplingImageGenerator>?)","com.github.panpf.zoomimage.GlideZoomImageView.setSubsamplingImageGenerators"]},{"name":"fun setSubsamplingImageGenerators(vararg subsamplingImageGenerators: GlideSubsamplingImageGenerator)","description":"com.github.panpf.zoomimage.GlideZoomImageView.setSubsamplingImageGenerators","location":"zoomimage-view-glide/com.github.panpf.zoomimage/-glide-zoom-image-view/set-subsampling-image-generators.html","searchKeys":["setSubsamplingImageGenerators","fun setSubsamplingImageGenerators(vararg subsamplingImageGenerators: GlideSubsamplingImageGenerator)","com.github.panpf.zoomimage.GlideZoomImageView.setSubsamplingImageGenerators"]},{"name":"open class GlideZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : ZoomImageView","description":"com.github.panpf.zoomimage.GlideZoomImageView","location":"zoomimage-view-glide/com.github.panpf.zoomimage/-glide-zoom-image-view/index.html","searchKeys":["GlideZoomImageView","open class GlideZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : ZoomImageView","com.github.panpf.zoomimage.GlideZoomImageView"]},{"name":"open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","description":"com.github.panpf.zoomimage.GlideZoomImageView.onDrawableChanged","location":"zoomimage-view-glide/com.github.panpf.zoomimage/-glide-zoom-image-view/on-drawable-changed.html","searchKeys":["onDrawableChanged","open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","com.github.panpf.zoomimage.GlideZoomImageView.onDrawableChanged"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.equals","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil/-coil-compose-subsampling-image-generator/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.equals"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.hashCode","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil/-coil-compose-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.toString","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil/-coil-compose-subsampling-image-generator/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.toString"]},{"name":"abstract suspend fun generateImage(context: Context, imageLoader: ImageLoader, result: SuccessResult, painter: Painter): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.generateImage","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil/-coil-compose-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","abstract suspend fun generateImage(context: Context, imageLoader: ImageLoader, result: SuccessResult, painter: Painter): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.generateImage"]},{"name":"class AnimatableCoilComposeSubsamplingImageGenerator : CoilComposeSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil.internal/-animatable-coil-compose-subsampling-image-generator/index.html","searchKeys":["AnimatableCoilComposeSubsamplingImageGenerator","class AnimatableCoilComposeSubsamplingImageGenerator : CoilComposeSubsamplingImageGenerator","com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator"]},{"name":"class CoilZoomState(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<CoilComposeSubsamplingImageGenerator>?) : ZoomState","description":"com.github.panpf.zoomimage.CoilZoomState","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage/-coil-zoom-state/index.html","searchKeys":["CoilZoomState","class CoilZoomState(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<CoilComposeSubsamplingImageGenerator>?) : ZoomState","com.github.panpf.zoomimage.CoilZoomState"]},{"name":"class EngineCoilComposeSubsamplingImageGenerator : CoilComposeSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil.internal/-engine-coil-compose-subsampling-image-generator/index.html","searchKeys":["EngineCoilComposeSubsamplingImageGenerator","class EngineCoilComposeSubsamplingImageGenerator : CoilComposeSubsamplingImageGenerator","com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.AnimatableCoilComposeSubsamplingImageGenerator","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil.internal/-animatable-coil-compose-subsampling-image-generator/-animatable-coil-compose-subsampling-image-generator.html","searchKeys":["AnimatableCoilComposeSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.AnimatableCoilComposeSubsamplingImageGenerator"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.EngineCoilComposeSubsamplingImageGenerator","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil.internal/-engine-coil-compose-subsampling-image-generator/-engine-coil-compose-subsampling-image-generator.html","searchKeys":["EngineCoilComposeSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.EngineCoilComposeSubsamplingImageGenerator"]},{"name":"constructor(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<CoilComposeSubsamplingImageGenerator>?)","description":"com.github.panpf.zoomimage.CoilZoomState.CoilZoomState","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage/-coil-zoom-state/-coil-zoom-state.html","searchKeys":["CoilZoomState","constructor(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<CoilComposeSubsamplingImageGenerator>?)","com.github.panpf.zoomimage.CoilZoomState.CoilZoomState"]},{"name":"fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.CoilZoomAsyncImage","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage/-coil-zoom-async-image.html","searchKeys":["CoilZoomAsyncImage","fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.CoilZoomAsyncImage"]},{"name":"fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = AsyncImagePainter.DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.CoilZoomAsyncImage","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage/-coil-zoom-async-image.html","searchKeys":["CoilZoomAsyncImage","fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = AsyncImagePainter.DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.CoilZoomAsyncImage"]},{"name":"fun rememberCoilZoomState(subsamplingImageGenerators: ImmutableList<CoilComposeSubsamplingImageGenerator>? = null, logLevel: Logger.Level? = null): CoilZoomState","description":"com.github.panpf.zoomimage.rememberCoilZoomState","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage/remember-coil-zoom-state.html","searchKeys":["rememberCoilZoomState","fun rememberCoilZoomState(subsamplingImageGenerators: ImmutableList<CoilComposeSubsamplingImageGenerator>? = null, logLevel: Logger.Level? = null): CoilZoomState","com.github.panpf.zoomimage.rememberCoilZoomState"]},{"name":"interface CoilComposeSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil/-coil-compose-subsampling-image-generator/index.html","searchKeys":["CoilComposeSubsamplingImageGenerator","interface CoilComposeSubsamplingImageGenerator","com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.equals","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil.internal/-animatable-coil-compose-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.equals","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil.internal/-engine-coil-compose-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.equals"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.hashCode","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil.internal/-animatable-coil-compose-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.hashCode","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil.internal/-engine-coil-compose-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.toString","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil.internal/-animatable-coil-compose-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.toString","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil.internal/-engine-coil-compose-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.toString"]},{"name":"open suspend override fun generateImage(context: Context, imageLoader: ImageLoader, result: SuccessResult, painter: Painter): SubsamplingImageGenerateResult","description":"com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.generateImage","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil.internal/-engine-coil-compose-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(context: Context, imageLoader: ImageLoader, result: SuccessResult, painter: Painter): SubsamplingImageGenerateResult","com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.generateImage"]},{"name":"open suspend override fun generateImage(context: Context, imageLoader: ImageLoader, result: SuccessResult, painter: Painter): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.generateImage","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage.compose.coil.internal/-animatable-coil-compose-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(context: Context, imageLoader: ImageLoader, result: SuccessResult, painter: Painter): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.generateImage"]},{"name":"val subsamplingImageGenerators: List<CoilComposeSubsamplingImageGenerator>","description":"com.github.panpf.zoomimage.CoilZoomState.subsamplingImageGenerators","location":"zoomimage-compose-coil2-core/com.github.panpf.zoomimage/-coil-zoom-state/subsampling-image-generators.html","searchKeys":["subsamplingImageGenerators","val subsamplingImageGenerators: List<CoilComposeSubsamplingImageGenerator>","com.github.panpf.zoomimage.CoilZoomState.subsamplingImageGenerators"]},{"name":"fun SketchZoomAsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.SketchZoomAsyncImage","location":"zoomimage-compose-sketch4/com.github.panpf.zoomimage/-sketch-zoom-async-image.html","searchKeys":["SketchZoomAsyncImage","fun SketchZoomAsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.SketchZoomAsyncImage"]},{"name":"fun SketchZoomAsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.SketchZoomAsyncImage","location":"zoomimage-compose-sketch4/com.github.panpf.zoomimage/-sketch-zoom-async-image.html","searchKeys":["SketchZoomAsyncImage","fun SketchZoomAsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.SketchZoomAsyncImage"]},{"name":"fun SketchZoomAsyncImage(imageUri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), placeholder: Painter? = null, error: Painter? = null, uriEmpty: Painter? = error, onLoading: (PainterState.Loading) -> Unit? = null, onSuccess: (PainterState.Success) -> Unit? = null, onError: (PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): <Error class: unknown class>","description":"com.github.panpf.zoomimage.SketchZoomAsyncImage","location":"zoomimage-compose-sketch3/com.github.panpf.zoomimage/-sketch-zoom-async-image.html","searchKeys":["SketchZoomAsyncImage","fun SketchZoomAsyncImage(imageUri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), placeholder: Painter? = null, error: Painter? = null, uriEmpty: Painter? = error, onLoading: (PainterState.Loading) -> Unit? = null, onSuccess: (PainterState.Success) -> Unit? = null, onError: (PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): <Error class: unknown class>","com.github.panpf.zoomimage.SketchZoomAsyncImage"]},{"name":"fun SketchZoomAsyncImage(imageUri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), transform: (PainterState) -> PainterState = AsyncImageState.DefaultTransform, onPainterState: (PainterState) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): <Error class: unknown class>","description":"com.github.panpf.zoomimage.SketchZoomAsyncImage","location":"zoomimage-compose-sketch3/com.github.panpf.zoomimage/-sketch-zoom-async-image.html","searchKeys":["SketchZoomAsyncImage","fun SketchZoomAsyncImage(imageUri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), transform: (PainterState) -> PainterState = AsyncImageState.DefaultTransform, onPainterState: (PainterState) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): <Error class: unknown class>","com.github.panpf.zoomimage.SketchZoomAsyncImage"]},{"name":"fun SketchZoomAsyncImage(request: DisplayRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), placeholder: Painter? = null, error: Painter? = null, uriEmpty: Painter? = error, onLoading: (PainterState.Loading) -> Unit? = null, onSuccess: (PainterState.Success) -> Unit? = null, onError: (PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): <Error class: unknown class>","description":"com.github.panpf.zoomimage.SketchZoomAsyncImage","location":"zoomimage-compose-sketch3/com.github.panpf.zoomimage/-sketch-zoom-async-image.html","searchKeys":["SketchZoomAsyncImage","fun SketchZoomAsyncImage(request: DisplayRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), placeholder: Painter? = null, error: Painter? = null, uriEmpty: Painter? = error, onLoading: (PainterState.Loading) -> Unit? = null, onSuccess: (PainterState.Success) -> Unit? = null, onError: (PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): <Error class: unknown class>","com.github.panpf.zoomimage.SketchZoomAsyncImage"]},{"name":"fun SketchZoomAsyncImage(request: DisplayRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), transform: (PainterState) -> PainterState = AsyncImageState.DefaultTransform, onPainterState: (PainterState) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): <Error class: unknown class>","description":"com.github.panpf.zoomimage.SketchZoomAsyncImage","location":"zoomimage-compose-sketch3/com.github.panpf.zoomimage/-sketch-zoom-async-image.html","searchKeys":["SketchZoomAsyncImage","fun SketchZoomAsyncImage(request: DisplayRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), transform: (PainterState) -> PainterState = AsyncImageState.DefaultTransform, onPainterState: (PainterState) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): <Error class: unknown class>","com.github.panpf.zoomimage.SketchZoomAsyncImage"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.picasso.PicassoSubsamplingImageGenerator.equals","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-subsampling-image-generator/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.picasso.PicassoSubsamplingImageGenerator.equals"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.zoomimage.picasso.PicassoSubsamplingImageGenerator.hashCode","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.zoomimage.picasso.PicassoSubsamplingImageGenerator.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.zoomimage.picasso.PicassoSubsamplingImageGenerator.toString","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-subsampling-image-generator/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.zoomimage.picasso.PicassoSubsamplingImageGenerator.toString"]},{"name":"abstract suspend fun generateImage(context: Context, picasso: Picasso, data: Any, drawable: Drawable): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.picasso.PicassoSubsamplingImageGenerator.generateImage","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","abstract suspend fun generateImage(context: Context, picasso: Picasso, data: Any, drawable: Drawable): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.picasso.PicassoSubsamplingImageGenerator.generateImage"]},{"name":"class EnginePicassoSubsamplingImageGenerator : PicassoSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.picasso.internal.EnginePicassoSubsamplingImageGenerator","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso.internal/-engine-picasso-subsampling-image-generator/index.html","searchKeys":["EnginePicassoSubsamplingImageGenerator","class EnginePicassoSubsamplingImageGenerator : PicassoSubsamplingImageGenerator","com.github.panpf.zoomimage.picasso.internal.EnginePicassoSubsamplingImageGenerator"]},{"name":"class PicassoHttpImageSource(val picasso: Picasso, val uri: Uri) : ImageSource","description":"com.github.panpf.zoomimage.picasso.PicassoHttpImageSource","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-http-image-source/index.html","searchKeys":["PicassoHttpImageSource","class PicassoHttpImageSource(val picasso: Picasso, val uri: Uri) : ImageSource","com.github.panpf.zoomimage.picasso.PicassoHttpImageSource"]},{"name":"class PicassoTileImageCache(picasso: Picasso) : TileImageCache","description":"com.github.panpf.zoomimage.picasso.PicassoTileImageCache","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-tile-image-cache/index.html","searchKeys":["PicassoTileImageCache","class PicassoTileImageCache(picasso: Picasso) : TileImageCache","com.github.panpf.zoomimage.picasso.PicassoTileImageCache"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.picasso.internal.EnginePicassoSubsamplingImageGenerator.EnginePicassoSubsamplingImageGenerator","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso.internal/-engine-picasso-subsampling-image-generator/-engine-picasso-subsampling-image-generator.html","searchKeys":["EnginePicassoSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.picasso.internal.EnginePicassoSubsamplingImageGenerator.EnginePicassoSubsamplingImageGenerator"]},{"name":"constructor(picasso: Picasso)","description":"com.github.panpf.zoomimage.picasso.PicassoTileImageCache.PicassoTileImageCache","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-tile-image-cache/-picasso-tile-image-cache.html","searchKeys":["PicassoTileImageCache","constructor(picasso: Picasso)","com.github.panpf.zoomimage.picasso.PicassoTileImageCache.PicassoTileImageCache"]},{"name":"constructor(picasso: Picasso, uri: Uri)","description":"com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.PicassoHttpImageSource","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-http-image-source/-picasso-http-image-source.html","searchKeys":["PicassoHttpImageSource","constructor(picasso: Picasso, uri: Uri)","com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.PicassoHttpImageSource"]},{"name":"fun dataToImageSource(context: Context, picasso: Picasso, data: Any): ImageSource.Factory?","description":"com.github.panpf.zoomimage.picasso.internal.dataToImageSource","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso.internal/data-to-image-source.html","searchKeys":["dataToImageSource","fun dataToImageSource(context: Context, picasso: Picasso, data: Any): ImageSource.Factory?","com.github.panpf.zoomimage.picasso.internal.dataToImageSource"]},{"name":"interface PicassoSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.picasso.PicassoSubsamplingImageGenerator","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-subsampling-image-generator/index.html","searchKeys":["PicassoSubsamplingImageGenerator","interface PicassoSubsamplingImageGenerator","com.github.panpf.zoomimage.picasso.PicassoSubsamplingImageGenerator"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.equals","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-http-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.picasso.internal.EnginePicassoSubsamplingImageGenerator.equals","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso.internal/-engine-picasso-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.picasso.internal.EnginePicassoSubsamplingImageGenerator.equals"]},{"name":"open override fun get(key: String): TileImage?","description":"com.github.panpf.zoomimage.picasso.PicassoTileImageCache.get","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-tile-image-cache/get.html","searchKeys":["get","open override fun get(key: String): TileImage?","com.github.panpf.zoomimage.picasso.PicassoTileImageCache.get"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.hashCode","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-http-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.picasso.internal.EnginePicassoSubsamplingImageGenerator.hashCode","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso.internal/-engine-picasso-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.picasso.internal.EnginePicassoSubsamplingImageGenerator.hashCode"]},{"name":"open override fun openSource(): Source","description":"com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.openSource","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-http-image-source/open-source.html","searchKeys":["openSource","open override fun openSource(): Source","com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.openSource"]},{"name":"open override fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","description":"com.github.panpf.zoomimage.picasso.PicassoTileImageCache.put","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-tile-image-cache/put.html","searchKeys":["put","open override fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","com.github.panpf.zoomimage.picasso.PicassoTileImageCache.put"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.toString","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-http-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.picasso.internal.EnginePicassoSubsamplingImageGenerator.toString","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso.internal/-engine-picasso-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.picasso.internal.EnginePicassoSubsamplingImageGenerator.toString"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.key","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-http-image-source/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.key"]},{"name":"open suspend override fun generateImage(context: Context, picasso: Picasso, data: Any, drawable: Drawable): SubsamplingImageGenerateResult","description":"com.github.panpf.zoomimage.picasso.internal.EnginePicassoSubsamplingImageGenerator.generateImage","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso.internal/-engine-picasso-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(context: Context, picasso: Picasso, data: Any, drawable: Drawable): SubsamplingImageGenerateResult","com.github.panpf.zoomimage.picasso.internal.EnginePicassoSubsamplingImageGenerator.generateImage"]},{"name":"val picasso: Picasso","description":"com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.picasso","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-http-image-source/picasso.html","searchKeys":["picasso","val picasso: Picasso","com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.picasso"]},{"name":"val uri: Uri","description":"com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.uri","location":"zoomimage-core-picasso/com.github.panpf.zoomimage.picasso/-picasso-http-image-source/uri.html","searchKeys":["uri","val uri: Uri","com.github.panpf.zoomimage.picasso.PicassoHttpImageSource.uri"]},{"name":"fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): <Error class: unknown class>","description":"com.github.panpf.zoomimage.CoilZoomAsyncImage","location":"zoomimage-compose-coil2/com.github.panpf.zoomimage/-coil-zoom-async-image.html","searchKeys":["CoilZoomAsyncImage","fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): <Error class: unknown class>","com.github.panpf.zoomimage.CoilZoomAsyncImage"]},{"name":"fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = AsyncImagePainter.DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): <Error class: unknown class>","description":"com.github.panpf.zoomimage.CoilZoomAsyncImage","location":"zoomimage-compose-coil2/com.github.panpf.zoomimage/-coil-zoom-async-image.html","searchKeys":["CoilZoomAsyncImage","fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = AsyncImagePainter.DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): <Error class: unknown class>","com.github.panpf.zoomimage.CoilZoomAsyncImage"]},{"name":"class ComposeResourceImageSource(val resourcePath: String, val bytes: ByteArray) : ImageSource","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/index.html","searchKeys":["ComposeResourceImageSource","class ComposeResourceImageSource(val resourcePath: String, val bytes: ByteArray) : ImageSource","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource"]},{"name":"class Factory(val resourcePath: String) : ImageSource.Factory","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/-factory/index.html","searchKeys":["Factory","class Factory(val resourcePath: String) : ImageSource.Factory","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory"]},{"name":"constructor(resourcePath: String)","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.Factory","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/-factory/-factory.html","searchKeys":["Factory","constructor(resourcePath: String)","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.Factory"]},{"name":"constructor(resourcePath: String, bytes: ByteArray)","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.ComposeResourceImageSource","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/-compose-resource-image-source.html","searchKeys":["ComposeResourceImageSource","constructor(resourcePath: String, bytes: ByteArray)","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.ComposeResourceImageSource"]},{"name":"fun ImageSource.Companion.fromComposeResource(resourcePath: String): ComposeResourceImageSource.Factory","description":"com.github.panpf.zoomimage.subsampling.fromComposeResource","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/from-compose-resource.html","searchKeys":["fromComposeResource","fun ImageSource.Companion.fromComposeResource(resourcePath: String): ComposeResourceImageSource.Factory","com.github.panpf.zoomimage.subsampling.fromComposeResource"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.equals","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.equals","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.equals"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.hashCode","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.hashCode","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.hashCode"]},{"name":"open override fun openSource(): Source","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.openSource","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/open-source.html","searchKeys":["openSource","open override fun openSource(): Source","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.openSource"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.toString","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.toString","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.toString"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.key","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.key","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.key"]},{"name":"open suspend override fun create(): ComposeResourceImageSource","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.create","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/-factory/create.html","searchKeys":["create","open suspend override fun create(): ComposeResourceImageSource","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.create"]},{"name":"val bytes: ByteArray","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.bytes","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/bytes.html","searchKeys":["bytes","val bytes: ByteArray","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.bytes"]},{"name":"val resourcePath: String","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.resourcePath","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/-factory/resource-path.html","searchKeys":["resourcePath","val resourcePath: String","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.Factory.resourcePath"]},{"name":"val resourcePath: String","description":"com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.resourcePath","location":"zoomimage-compose-resources/com.github.panpf.zoomimage.subsampling/-compose-resource-image-source/resource-path.html","searchKeys":["resourcePath","val resourcePath: String","com.github.panpf.zoomimage.subsampling.ComposeResourceImageSource.resourcePath"]},{"name":"class CoilHttpImageSource(url: String, openSourceFactory: () -> Source) : ImageSource","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/index.html","searchKeys":["CoilHttpImageSource","class CoilHttpImageSource(url: String, openSourceFactory: () -> Source) : ImageSource","com.github.panpf.zoomimage.coil.CoilHttpImageSource"]},{"name":"class Factory(val context: PlatformContext, val imageLoader: ImageLoader, val url: String) : ImageSource.Factory","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/index.html","searchKeys":["Factory","class Factory(val context: PlatformContext, val imageLoader: ImageLoader, val url: String) : ImageSource.Factory","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory"]},{"name":"constructor(context: PlatformContext, imageLoader: ImageLoader, url: String)","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.Factory","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/-factory.html","searchKeys":["Factory","constructor(context: PlatformContext, imageLoader: ImageLoader, url: String)","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.Factory"]},{"name":"constructor(url: String, openSourceFactory: () -> Source)","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.CoilHttpImageSource","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/-coil-http-image-source.html","searchKeys":["CoilHttpImageSource","constructor(url: String, openSourceFactory: () -> Source)","com.github.panpf.zoomimage.coil.CoilHttpImageSource.CoilHttpImageSource"]},{"name":"expect class CoilTileImageCache(imageLoader: ImageLoader) : TileImageCache","description":"com.github.panpf.zoomimage.coil.CoilTileImageCache","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-tile-image-cache/index.html","searchKeys":["CoilTileImageCache","expect class CoilTileImageCache(imageLoader: ImageLoader) : TileImageCache","com.github.panpf.zoomimage.coil.CoilTileImageCache"]},{"name":"expect constructor(imageLoader: ImageLoader)","description":"com.github.panpf.zoomimage.coil.CoilTileImageCache.CoilTileImageCache","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-tile-image-cache/-coil-tile-image-cache.html","searchKeys":["CoilTileImageCache","expect constructor(imageLoader: ImageLoader)","com.github.panpf.zoomimage.coil.CoilTileImageCache.CoilTileImageCache"]},{"name":"expect open override fun get(key: String): TileImage?","description":"com.github.panpf.zoomimage.coil.CoilTileImageCache.get","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-tile-image-cache/get.html","searchKeys":["get","expect open override fun get(key: String): TileImage?","com.github.panpf.zoomimage.coil.CoilTileImageCache.get"]},{"name":"expect open override fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","description":"com.github.panpf.zoomimage.coil.CoilTileImageCache.put","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-tile-image-cache/put.html","searchKeys":["put","expect open override fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","com.github.panpf.zoomimage.coil.CoilTileImageCache.put"]},{"name":"expect suspend fun dataToImageSource(context: PlatformContext, imageLoader: ImageLoader, model: Any): ImageSource.Factory?","description":"com.github.panpf.zoomimage.coil.internal.dataToImageSource","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil.internal/data-to-image-source.html","searchKeys":["dataToImageSource","expect suspend fun dataToImageSource(context: PlatformContext, imageLoader: ImageLoader, model: Any): ImageSource.Factory?","com.github.panpf.zoomimage.coil.internal.dataToImageSource"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.equals","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.equals","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.coil.CoilHttpImageSource.equals"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.hashCode","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.hashCode","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.coil.CoilHttpImageSource.hashCode"]},{"name":"open override fun openSource(): Source","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.openSource","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/open-source.html","searchKeys":["openSource","open override fun openSource(): Source","com.github.panpf.zoomimage.coil.CoilHttpImageSource.openSource"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.toString","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.toString","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.coil.CoilHttpImageSource.toString"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.key","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.key","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.coil.CoilHttpImageSource.key"]},{"name":"open suspend override fun create(): CoilHttpImageSource","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.create","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/create.html","searchKeys":["create","open suspend override fun create(): CoilHttpImageSource","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.create"]},{"name":"val context: PlatformContext","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.context","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/context.html","searchKeys":["context","val context: PlatformContext","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.context"]},{"name":"val imageLoader: ImageLoader","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.imageLoader","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/image-loader.html","searchKeys":["imageLoader","val imageLoader: ImageLoader","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.imageLoader"]},{"name":"val url: String","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.url","location":"zoomimage-core-coil3/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/url.html","searchKeys":["url","val url: String","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.url"]},{"name":"abstract class AbsAbilityZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : ZoomImageView, ViewAbilityContainer","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/index.html","searchKeys":["AbsAbilityZoomImageView","abstract class AbsAbilityZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : ZoomImageView, ViewAbilityContainer","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.equals","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch/-sketch-view-subsampling-image-generator/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.equals"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.hashCode","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch/-sketch-view-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.toString","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch/-sketch-view-subsampling-image-generator/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.toString"]},{"name":"abstract suspend fun generateImage(sketch: Sketch, result: ImageResult.Success, drawable: Drawable): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.generateImage","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch/-sketch-view-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","abstract suspend fun generateImage(sketch: Sketch, result: ImageResult.Success, drawable: Drawable): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator.generateImage"]},{"name":"class AnimatableSketchViewSubsamplingImageGenerator : SketchViewSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-animatable-sketch-view-subsampling-image-generator/index.html","searchKeys":["AnimatableSketchViewSubsamplingImageGenerator","class AnimatableSketchViewSubsamplingImageGenerator : SketchViewSubsamplingImageGenerator","com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator"]},{"name":"class EngineSketchViewSubsamplingImageGenerator : SketchViewSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-engine-sketch-view-subsampling-image-generator/index.html","searchKeys":["EngineSketchViewSubsamplingImageGenerator","class EngineSketchViewSubsamplingImageGenerator : SketchViewSubsamplingImageGenerator","com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator"]},{"name":"class SavedState : View.BaseSavedState","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-saved-state/index.html","searchKeys":["SavedState","class SavedState : View.BaseSavedState","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.AnimatableSketchViewSubsamplingImageGenerator","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-animatable-sketch-view-subsampling-image-generator/-animatable-sketch-view-subsampling-image-generator.html","searchKeys":["AnimatableSketchViewSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.AnimatableSketchViewSubsamplingImageGenerator"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.EngineSketchViewSubsamplingImageGenerator","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-engine-sketch-view-subsampling-image-generator/-engine-sketch-view-subsampling-image-generator.html","searchKeys":["EngineSketchViewSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.EngineSketchViewSubsamplingImageGenerator"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"com.github.panpf.zoomimage.SketchZoomImageView.SketchZoomImageView","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage/-sketch-zoom-image-view/-sketch-zoom-image-view.html","searchKeys":["SketchZoomImageView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","com.github.panpf.zoomimage.SketchZoomImageView.SketchZoomImageView"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.AbsAbilityZoomImageView","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-abs-ability-zoom-image-view.html","searchKeys":["AbsAbilityZoomImageView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.AbsAbilityZoomImageView"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.AbsStateZoomImageView","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/-abs-state-zoom-image-view.html","searchKeys":["AbsStateZoomImageView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.AbsStateZoomImageView"]},{"name":"fun addListener(listener: Listener)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.addListener","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/add-listener.html","searchKeys":["addListener","fun addListener(listener: Listener)","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.addListener"]},{"name":"fun addProgressListener(listener: ProgressListener)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.addProgressListener","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/add-progress-listener.html","searchKeys":["addProgressListener","fun addProgressListener(listener: ProgressListener)","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.addProgressListener"]},{"name":"fun removeListener(listener: Listener)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.removeListener","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/remove-listener.html","searchKeys":["removeListener","fun removeListener(listener: Listener)","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.removeListener"]},{"name":"fun removeProgressListener(listener: ProgressListener)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.removeProgressListener","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/remove-progress-listener.html","searchKeys":["removeProgressListener","fun removeProgressListener(listener: ProgressListener)","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.removeProgressListener"]},{"name":"fun setSubsamplingImageGenerators(subsamplingImageGenerators: List<SketchViewSubsamplingImageGenerator>?)","description":"com.github.panpf.zoomimage.SketchZoomImageView.setSubsamplingImageGenerators","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage/-sketch-zoom-image-view/set-subsampling-image-generators.html","searchKeys":["setSubsamplingImageGenerators","fun setSubsamplingImageGenerators(subsamplingImageGenerators: List<SketchViewSubsamplingImageGenerator>?)","com.github.panpf.zoomimage.SketchZoomImageView.setSubsamplingImageGenerators"]},{"name":"fun setSubsamplingImageGenerators(vararg subsamplingImageGenerators: SketchViewSubsamplingImageGenerator)","description":"com.github.panpf.zoomimage.SketchZoomImageView.setSubsamplingImageGenerators","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage/-sketch-zoom-image-view/set-subsampling-image-generators.html","searchKeys":["setSubsamplingImageGenerators","fun setSubsamplingImageGenerators(vararg subsamplingImageGenerators: SketchViewSubsamplingImageGenerator)","com.github.panpf.zoomimage.SketchZoomImageView.setSubsamplingImageGenerators"]},{"name":"interface SketchViewSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch/-sketch-view-subsampling-image-generator/index.html","searchKeys":["SketchViewSubsamplingImageGenerator","interface SketchViewSubsamplingImageGenerator","com.github.panpf.zoomimage.view.sketch.SketchViewSubsamplingImageGenerator"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.Companion","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-saved-state/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.Companion"]},{"name":"open class AbsStateZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AbsAbilityZoomImageView, ImageOptionsProvider","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/index.html","searchKeys":["AbsStateZoomImageView","open class AbsStateZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AbsAbilityZoomImageView, ImageOptionsProvider","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView"]},{"name":"open class SketchZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AbsStateZoomImageView","description":"com.github.panpf.zoomimage.SketchZoomImageView","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage/-sketch-zoom-image-view/index.html","searchKeys":["SketchZoomImageView","open class SketchZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AbsStateZoomImageView","com.github.panpf.zoomimage.SketchZoomImageView"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.equals","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-animatable-sketch-view-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.equals","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-engine-sketch-view-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.equals"]},{"name":"open override fun getListener(): Listener?","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getListener","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/get-listener.html","searchKeys":["getListener","open override fun getListener(): Listener?","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getListener"]},{"name":"open override fun getListener(): Listener?","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.getListener","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/get-listener.html","searchKeys":["getListener","open override fun getListener(): Listener?","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.getListener"]},{"name":"open override fun getProgressListener(): ProgressListener?","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getProgressListener","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/get-progress-listener.html","searchKeys":["getProgressListener","open override fun getProgressListener(): ProgressListener?","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getProgressListener"]},{"name":"open override fun getProgressListener(): ProgressListener?","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.getProgressListener","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/get-progress-listener.html","searchKeys":["getProgressListener","open override fun getProgressListener(): ProgressListener?","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.getProgressListener"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.hashCode","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-animatable-sketch-view-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.hashCode","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-engine-sketch-view-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.hashCode"]},{"name":"open override fun onDrawForeground(canvas: Canvas)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.onDrawForeground","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/on-draw-foreground.html","searchKeys":["onDrawForeground","open override fun onDrawForeground(canvas: Canvas)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.onDrawForeground"]},{"name":"open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","description":"com.github.panpf.zoomimage.SketchZoomImageView.onDrawableChanged","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage/-sketch-zoom-image-view/on-drawable-changed.html","searchKeys":["onDrawableChanged","open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","com.github.panpf.zoomimage.SketchZoomImageView.onDrawableChanged"]},{"name":"open override fun onTouchEvent(event: MotionEvent): Boolean","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.onTouchEvent","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/on-touch-event.html","searchKeys":["onTouchEvent","open override fun onTouchEvent(event: MotionEvent): Boolean","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.onTouchEvent"]},{"name":"open override fun removeViewAbility(viewAbility: ViewAbility)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.removeViewAbility","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/remove-view-ability.html","searchKeys":["removeViewAbility","open override fun removeViewAbility(viewAbility: ViewAbility)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.removeViewAbility"]},{"name":"open override fun setImageDrawable(drawable: Drawable?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setImageDrawable","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/set-image-drawable.html","searchKeys":["setImageDrawable","open override fun setImageDrawable(drawable: Drawable?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setImageDrawable"]},{"name":"open override fun setImageURI(uri: Uri?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setImageURI","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/set-image-u-r-i.html","searchKeys":["setImageURI","open override fun setImageURI(uri: Uri?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setImageURI"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.toString","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-saved-state/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.toString","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-animatable-sketch-view-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.toString","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-engine-sketch-view-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.toString"]},{"name":"open override fun writeToParcel(out: Parcel, flags: Int)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.writeToParcel","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-saved-state/write-to-parcel.html","searchKeys":["writeToParcel","open override fun writeToParcel(out: Parcel, flags: Int)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.writeToParcel"]},{"name":"open override val requestState: RequestState","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.requestState","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/request-state.html","searchKeys":["requestState","open override val requestState: RequestState","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.requestState"]},{"name":"open override val viewAbilityList: List<ViewAbility>","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.viewAbilityList","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/view-ability-list.html","searchKeys":["viewAbilityList","open override val viewAbilityList: List<ViewAbility>","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.viewAbilityList"]},{"name":"open override var imageOptions: ImageOptions?","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.imageOptions","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-state-zoom-image-view/image-options.html","searchKeys":["imageOptions","open override var imageOptions: ImageOptions?","com.github.panpf.zoomimage.view.sketch.internal.AbsStateZoomImageView.imageOptions"]},{"name":"open suspend override fun generateImage(sketch: Sketch, result: ImageResult.Success, drawable: Drawable): SubsamplingImageGenerateResult","description":"com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.generateImage","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-engine-sketch-view-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(sketch: Sketch, result: ImageResult.Success, drawable: Drawable): SubsamplingImageGenerateResult","com.github.panpf.zoomimage.view.sketch.internal.EngineSketchViewSubsamplingImageGenerator.generateImage"]},{"name":"open suspend override fun generateImage(sketch: Sketch, result: ImageResult.Success, drawable: Drawable): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.generateImage","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-animatable-sketch-view-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(sketch: Sketch, result: ImageResult.Success, drawable: Drawable): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.view.sketch.internal.AnimatableSketchViewSubsamplingImageGenerator.generateImage"]},{"name":"override fun addViewAbility(viewAbility: ViewAbility)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.addViewAbility","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/add-view-ability.html","searchKeys":["addViewAbility","override fun addViewAbility(viewAbility: ViewAbility)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.addViewAbility"]},{"name":"override fun getImageMatrix(): Matrix","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getImageMatrix","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/get-image-matrix.html","searchKeys":["getImageMatrix","override fun getImageMatrix(): Matrix","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getImageMatrix"]},{"name":"override fun getScaleType(): ImageView.ScaleType","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getScaleType","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/get-scale-type.html","searchKeys":["getScaleType","override fun getScaleType(): ImageView.ScaleType","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.getScaleType"]},{"name":"override fun setImageMatrix(matrix: Matrix?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setImageMatrix","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/set-image-matrix.html","searchKeys":["setImageMatrix","override fun setImageMatrix(matrix: Matrix?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setImageMatrix"]},{"name":"override fun setOnClickListener(l: View.OnClickListener?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setOnClickListener","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/set-on-click-listener.html","searchKeys":["setOnClickListener","override fun setOnClickListener(l: View.OnClickListener?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setOnClickListener"]},{"name":"override fun setOnLongClickListener(l: View.OnLongClickListener?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setOnLongClickListener","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/set-on-long-click-listener.html","searchKeys":["setOnLongClickListener","override fun setOnLongClickListener(l: View.OnLongClickListener?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setOnLongClickListener"]},{"name":"override fun setScaleType(scaleType: ImageView.ScaleType)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setScaleType","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/set-scale-type.html","searchKeys":["setScaleType","override fun setScaleType(scaleType: ImageView.ScaleType)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.setScaleType"]},{"name":"override fun superGetImageMatrix(): Matrix","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superGetImageMatrix","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/super-get-image-matrix.html","searchKeys":["superGetImageMatrix","override fun superGetImageMatrix(): Matrix","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superGetImageMatrix"]},{"name":"override fun superGetScaleType(): ImageView.ScaleType","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superGetScaleType","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/super-get-scale-type.html","searchKeys":["superGetScaleType","override fun superGetScaleType(): ImageView.ScaleType","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superGetScaleType"]},{"name":"override fun superSetImageMatrix(matrix: Matrix?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetImageMatrix","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/super-set-image-matrix.html","searchKeys":["superSetImageMatrix","override fun superSetImageMatrix(matrix: Matrix?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetImageMatrix"]},{"name":"override fun superSetOnClickListener(listener: View.OnClickListener?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetOnClickListener","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/super-set-on-click-listener.html","searchKeys":["superSetOnClickListener","override fun superSetOnClickListener(listener: View.OnClickListener?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetOnClickListener"]},{"name":"override fun superSetOnLongClickListener(listener: View.OnLongClickListener?)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetOnLongClickListener","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/super-set-on-long-click-listener.html","searchKeys":["superSetOnLongClickListener","override fun superSetOnLongClickListener(listener: View.OnLongClickListener?)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetOnLongClickListener"]},{"name":"override fun superSetScaleType(scaleType: ImageView.ScaleType)","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetScaleType","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/super-set-scale-type.html","searchKeys":["superSetScaleType","override fun superSetScaleType(scaleType: ImageView.ScaleType)","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.superSetScaleType"]},{"name":"val CREATOR: Parcelable.Creator<AbsAbilityZoomImageView.SavedState>","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.Companion.CREATOR","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-saved-state/-companion/-c-r-e-a-t-o-r.html","searchKeys":["CREATOR","val CREATOR: Parcelable.Creator<AbsAbilityZoomImageView.SavedState>","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.Companion.CREATOR"]},{"name":"var abilityListStateBundle: Bundle?","description":"com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.abilityListStateBundle","location":"zoomimage-view-sketch4-core/com.github.panpf.zoomimage.view.sketch.internal/-abs-ability-zoom-image-view/-saved-state/ability-list-state-bundle.html","searchKeys":["abilityListStateBundle","var abilityListStateBundle: Bundle?","com.github.panpf.zoomimage.view.sketch.internal.AbsAbilityZoomImageView.SavedState.abilityListStateBundle"]},{"name":"fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.CoilZoomAsyncImage","location":"zoomimage-compose-coil3/com.github.panpf.zoomimage/-coil-zoom-async-image.html","searchKeys":["CoilZoomAsyncImage","fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.CoilZoomAsyncImage"]},{"name":"fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = AsyncImagePainter.DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.CoilZoomAsyncImage","location":"zoomimage-compose-coil3/com.github.panpf.zoomimage/-coil-zoom-async-image.html","searchKeys":["CoilZoomAsyncImage","fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = AsyncImagePainter.DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.CoilZoomAsyncImage"]},{"name":"class CoilHttpImageSource(url: String, openSourceFactory: () -> Source) : ImageSource","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/index.html","searchKeys":["CoilHttpImageSource","class CoilHttpImageSource(url: String, openSourceFactory: () -> Source) : ImageSource","com.github.panpf.zoomimage.coil.CoilHttpImageSource"]},{"name":"class CoilTileImageCache(imageLoader: ImageLoader) : TileImageCache","description":"com.github.panpf.zoomimage.coil.CoilTileImageCache","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-tile-image-cache/index.html","searchKeys":["CoilTileImageCache","class CoilTileImageCache(imageLoader: ImageLoader) : TileImageCache","com.github.panpf.zoomimage.coil.CoilTileImageCache"]},{"name":"class Factory(val context: Context, val imageLoader: ImageLoader, val url: String) : ImageSource.Factory","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/index.html","searchKeys":["Factory","class Factory(val context: Context, val imageLoader: ImageLoader, val url: String) : ImageSource.Factory","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory"]},{"name":"constructor(context: Context, imageLoader: ImageLoader, url: String)","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.Factory","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/-factory.html","searchKeys":["Factory","constructor(context: Context, imageLoader: ImageLoader, url: String)","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.Factory"]},{"name":"constructor(imageLoader: ImageLoader)","description":"com.github.panpf.zoomimage.coil.CoilTileImageCache.CoilTileImageCache","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-tile-image-cache/-coil-tile-image-cache.html","searchKeys":["CoilTileImageCache","constructor(imageLoader: ImageLoader)","com.github.panpf.zoomimage.coil.CoilTileImageCache.CoilTileImageCache"]},{"name":"constructor(url: String, openSourceFactory: () -> Source)","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.CoilHttpImageSource","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/-coil-http-image-source.html","searchKeys":["CoilHttpImageSource","constructor(url: String, openSourceFactory: () -> Source)","com.github.panpf.zoomimage.coil.CoilHttpImageSource.CoilHttpImageSource"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.equals","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.equals","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.coil.CoilHttpImageSource.equals"]},{"name":"open override fun get(key: String): TileImage?","description":"com.github.panpf.zoomimage.coil.CoilTileImageCache.get","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-tile-image-cache/get.html","searchKeys":["get","open override fun get(key: String): TileImage?","com.github.panpf.zoomimage.coil.CoilTileImageCache.get"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.hashCode","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.hashCode","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.coil.CoilHttpImageSource.hashCode"]},{"name":"open override fun openSource(): Source","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.openSource","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/open-source.html","searchKeys":["openSource","open override fun openSource(): Source","com.github.panpf.zoomimage.coil.CoilHttpImageSource.openSource"]},{"name":"open override fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","description":"com.github.panpf.zoomimage.coil.CoilTileImageCache.put","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-tile-image-cache/put.html","searchKeys":["put","open override fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","com.github.panpf.zoomimage.coil.CoilTileImageCache.put"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.toString","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.toString","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.coil.CoilHttpImageSource.toString"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.key","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.key","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.coil.CoilHttpImageSource.key"]},{"name":"open suspend override fun create(): CoilHttpImageSource","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.create","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/create.html","searchKeys":["create","open suspend override fun create(): CoilHttpImageSource","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.create"]},{"name":"suspend fun dataToImageSource(context: Context, imageLoader: ImageLoader, model: Any): ImageSource.Factory?","description":"com.github.panpf.zoomimage.coil.internal.dataToImageSource","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil.internal/data-to-image-source.html","searchKeys":["dataToImageSource","suspend fun dataToImageSource(context: Context, imageLoader: ImageLoader, model: Any): ImageSource.Factory?","com.github.panpf.zoomimage.coil.internal.dataToImageSource"]},{"name":"val context: Context","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.context","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/context.html","searchKeys":["context","val context: Context","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.context"]},{"name":"val imageLoader: ImageLoader","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.imageLoader","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/image-loader.html","searchKeys":["imageLoader","val imageLoader: ImageLoader","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.imageLoader"]},{"name":"val url: String","description":"com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.url","location":"zoomimage-core-coil2/com.github.panpf.zoomimage.coil/-coil-http-image-source/-factory/url.html","searchKeys":["url","val url: String","com.github.panpf.zoomimage.coil.CoilHttpImageSource.Factory.url"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.equals","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch/-sketch-compose-subsampling-image-generator/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.equals"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.hashCode","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch/-sketch-compose-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.toString","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch/-sketch-compose-subsampling-image-generator/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.toString"]},{"name":"abstract suspend fun generateImage(sketch: Sketch, result: DisplayResult.Success, painter: Painter): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.generateImage","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch/-sketch-compose-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","abstract suspend fun generateImage(sketch: Sketch, result: DisplayResult.Success, painter: Painter): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.generateImage"]},{"name":"class AnimatableSketchComposeSubsamplingImageGenerator : SketchComposeSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch.internal/-animatable-sketch-compose-subsampling-image-generator/index.html","searchKeys":["AnimatableSketchComposeSubsamplingImageGenerator","class AnimatableSketchComposeSubsamplingImageGenerator : SketchComposeSubsamplingImageGenerator","com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator"]},{"name":"class EngineSketchComposeSubsamplingImageGenerator : SketchComposeSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch.internal/-engine-sketch-compose-subsampling-image-generator/index.html","searchKeys":["EngineSketchComposeSubsamplingImageGenerator","class EngineSketchComposeSubsamplingImageGenerator : SketchComposeSubsamplingImageGenerator","com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator"]},{"name":"class SketchZoomState(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<SketchComposeSubsamplingImageGenerator>?) : ZoomState","description":"com.github.panpf.zoomimage.SketchZoomState","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage/-sketch-zoom-state/index.html","searchKeys":["SketchZoomState","class SketchZoomState(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<SketchComposeSubsamplingImageGenerator>?) : ZoomState","com.github.panpf.zoomimage.SketchZoomState"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.AnimatableSketchComposeSubsamplingImageGenerator","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch.internal/-animatable-sketch-compose-subsampling-image-generator/-animatable-sketch-compose-subsampling-image-generator.html","searchKeys":["AnimatableSketchComposeSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.AnimatableSketchComposeSubsamplingImageGenerator"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.EngineSketchComposeSubsamplingImageGenerator","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch.internal/-engine-sketch-compose-subsampling-image-generator/-engine-sketch-compose-subsampling-image-generator.html","searchKeys":["EngineSketchComposeSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.EngineSketchComposeSubsamplingImageGenerator"]},{"name":"constructor(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<SketchComposeSubsamplingImageGenerator>?)","description":"com.github.panpf.zoomimage.SketchZoomState.SketchZoomState","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage/-sketch-zoom-state/-sketch-zoom-state.html","searchKeys":["SketchZoomState","constructor(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<SketchComposeSubsamplingImageGenerator>?)","com.github.panpf.zoomimage.SketchZoomState.SketchZoomState"]},{"name":"fun SketchZoomAsyncImage(imageUri: String?, contentDescription: String?, sketch: Sketch, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), placeholder: Painter? = null, error: Painter? = null, uriEmpty: Painter? = error, onLoading: (PainterState.Loading) -> Unit? = null, onSuccess: (PainterState.Success) -> Unit? = null, onError: (PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.SketchZoomAsyncImage","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage/-sketch-zoom-async-image.html","searchKeys":["SketchZoomAsyncImage","fun SketchZoomAsyncImage(imageUri: String?, contentDescription: String?, sketch: Sketch, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), placeholder: Painter? = null, error: Painter? = null, uriEmpty: Painter? = error, onLoading: (PainterState.Loading) -> Unit? = null, onSuccess: (PainterState.Success) -> Unit? = null, onError: (PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.SketchZoomAsyncImage"]},{"name":"fun SketchZoomAsyncImage(imageUri: String?, contentDescription: String?, sketch: Sketch, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), transform: (PainterState) -> PainterState = AsyncImageState.DefaultTransform, onPainterState: (PainterState) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.SketchZoomAsyncImage","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage/-sketch-zoom-async-image.html","searchKeys":["SketchZoomAsyncImage","fun SketchZoomAsyncImage(imageUri: String?, contentDescription: String?, sketch: Sketch, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), transform: (PainterState) -> PainterState = AsyncImageState.DefaultTransform, onPainterState: (PainterState) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.SketchZoomAsyncImage"]},{"name":"fun SketchZoomAsyncImage(request: DisplayRequest, contentDescription: String?, sketch: Sketch, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), placeholder: Painter? = null, error: Painter? = null, uriEmpty: Painter? = error, onLoading: (PainterState.Loading) -> Unit? = null, onSuccess: (PainterState.Success) -> Unit? = null, onError: (PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.SketchZoomAsyncImage","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage/-sketch-zoom-async-image.html","searchKeys":["SketchZoomAsyncImage","fun SketchZoomAsyncImage(request: DisplayRequest, contentDescription: String?, sketch: Sketch, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), placeholder: Painter? = null, error: Painter? = null, uriEmpty: Painter? = error, onLoading: (PainterState.Loading) -> Unit? = null, onSuccess: (PainterState.Success) -> Unit? = null, onError: (PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.SketchZoomAsyncImage"]},{"name":"fun SketchZoomAsyncImage(request: DisplayRequest, contentDescription: String?, sketch: Sketch, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), transform: (PainterState) -> PainterState = AsyncImageState.DefaultTransform, onPainterState: (PainterState) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.SketchZoomAsyncImage","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage/-sketch-zoom-async-image.html","searchKeys":["SketchZoomAsyncImage","fun SketchZoomAsyncImage(request: DisplayRequest, contentDescription: String?, sketch: Sketch, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), transform: (PainterState) -> PainterState = AsyncImageState.DefaultTransform, onPainterState: (PainterState) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.SketchZoomAsyncImage"]},{"name":"fun rememberSketchZoomState(subsamplingImageGenerators: ImmutableList<SketchComposeSubsamplingImageGenerator>? = null, logLevel: Logger.Level? = null): SketchZoomState","description":"com.github.panpf.zoomimage.rememberSketchZoomState","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage/remember-sketch-zoom-state.html","searchKeys":["rememberSketchZoomState","fun rememberSketchZoomState(subsamplingImageGenerators: ImmutableList<SketchComposeSubsamplingImageGenerator>? = null, logLevel: Logger.Level? = null): SketchZoomState","com.github.panpf.zoomimage.rememberSketchZoomState"]},{"name":"interface SketchComposeSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch/-sketch-compose-subsampling-image-generator/index.html","searchKeys":["SketchComposeSubsamplingImageGenerator","interface SketchComposeSubsamplingImageGenerator","com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.equals","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch.internal/-animatable-sketch-compose-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.equals","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch.internal/-engine-sketch-compose-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.equals"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.hashCode","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch.internal/-animatable-sketch-compose-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.hashCode","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch.internal/-engine-sketch-compose-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.toString","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch.internal/-animatable-sketch-compose-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.toString","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch.internal/-engine-sketch-compose-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.toString"]},{"name":"open suspend override fun generateImage(sketch: Sketch, result: DisplayResult.Success, painter: Painter): SubsamplingImageGenerateResult","description":"com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.generateImage","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch.internal/-engine-sketch-compose-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(sketch: Sketch, result: DisplayResult.Success, painter: Painter): SubsamplingImageGenerateResult","com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.generateImage"]},{"name":"open suspend override fun generateImage(sketch: Sketch, result: DisplayResult.Success, painter: Painter): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.generateImage","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage.compose.sketch.internal/-animatable-sketch-compose-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(sketch: Sketch, result: DisplayResult.Success, painter: Painter): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.generateImage"]},{"name":"val subsamplingImageGenerators: List<SketchComposeSubsamplingImageGenerator>","description":"com.github.panpf.zoomimage.SketchZoomState.subsamplingImageGenerators","location":"zoomimage-compose-sketch3-core/com.github.panpf.zoomimage/-sketch-zoom-state/subsampling-image-generators.html","searchKeys":["subsamplingImageGenerators","val subsamplingImageGenerators: List<SketchComposeSubsamplingImageGenerator>","com.github.panpf.zoomimage.SketchZoomState.subsamplingImageGenerators"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.equals","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil/-coil-compose-subsampling-image-generator/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.equals"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.hashCode","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil/-coil-compose-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.toString","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil/-coil-compose-subsampling-image-generator/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.toString"]},{"name":"abstract suspend fun generateImage(context: PlatformContext, imageLoader: ImageLoader, result: SuccessResult, painter: Painter): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.generateImage","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil/-coil-compose-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","abstract suspend fun generateImage(context: PlatformContext, imageLoader: ImageLoader, result: SuccessResult, painter: Painter): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator.generateImage"]},{"name":"class CoilZoomState(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<CoilComposeSubsamplingImageGenerator>?) : ZoomState","description":"com.github.panpf.zoomimage.CoilZoomState","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage/-coil-zoom-state/index.html","searchKeys":["CoilZoomState","class CoilZoomState(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<CoilComposeSubsamplingImageGenerator>?) : ZoomState","com.github.panpf.zoomimage.CoilZoomState"]},{"name":"class EngineCoilComposeSubsamplingImageGenerator : CoilComposeSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil.internal/-engine-coil-compose-subsampling-image-generator/index.html","searchKeys":["EngineCoilComposeSubsamplingImageGenerator","class EngineCoilComposeSubsamplingImageGenerator : CoilComposeSubsamplingImageGenerator","com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.AnimatableCoilComposeSubsamplingImageGenerator","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil.internal/-animatable-coil-compose-subsampling-image-generator/-animatable-coil-compose-subsampling-image-generator.html","searchKeys":["AnimatableCoilComposeSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.AnimatableCoilComposeSubsamplingImageGenerator"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.EngineCoilComposeSubsamplingImageGenerator","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil.internal/-engine-coil-compose-subsampling-image-generator/-engine-coil-compose-subsampling-image-generator.html","searchKeys":["EngineCoilComposeSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.EngineCoilComposeSubsamplingImageGenerator"]},{"name":"constructor(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<CoilComposeSubsamplingImageGenerator>?)","description":"com.github.panpf.zoomimage.CoilZoomState.CoilZoomState","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage/-coil-zoom-state/-coil-zoom-state.html","searchKeys":["CoilZoomState","constructor(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<CoilComposeSubsamplingImageGenerator>?)","com.github.panpf.zoomimage.CoilZoomState.CoilZoomState"]},{"name":"expect class AnimatableCoilComposeSubsamplingImageGenerator : CoilComposeSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil.internal/-animatable-coil-compose-subsampling-image-generator/index.html","searchKeys":["AnimatableCoilComposeSubsamplingImageGenerator","expect class AnimatableCoilComposeSubsamplingImageGenerator : CoilComposeSubsamplingImageGenerator","com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator"]},{"name":"expect open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.equals","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil.internal/-animatable-coil-compose-subsampling-image-generator/equals.html","searchKeys":["equals","expect open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.equals"]},{"name":"expect open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.hashCode","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil.internal/-animatable-coil-compose-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","expect open override fun hashCode(): Int","com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.hashCode"]},{"name":"expect open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.toString","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil.internal/-animatable-coil-compose-subsampling-image-generator/to-string.html","searchKeys":["toString","expect open override fun toString(): String","com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.toString"]},{"name":"expect open suspend override fun generateImage(context: PlatformContext, imageLoader: ImageLoader, result: SuccessResult, painter: Painter): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.generateImage","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil.internal/-animatable-coil-compose-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","expect open suspend override fun generateImage(context: PlatformContext, imageLoader: ImageLoader, result: SuccessResult, painter: Painter): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.compose.coil.internal.AnimatableCoilComposeSubsamplingImageGenerator.generateImage"]},{"name":"fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.CoilZoomAsyncImage","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage/-coil-zoom-async-image.html","searchKeys":["CoilZoomAsyncImage","fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.CoilZoomAsyncImage"]},{"name":"fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = AsyncImagePainter.DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.CoilZoomAsyncImage","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage/-coil-zoom-async-image.html","searchKeys":["CoilZoomAsyncImage","fun CoilZoomAsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = AsyncImagePainter.DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: CoilZoomState = rememberCoilZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.CoilZoomAsyncImage"]},{"name":"fun rememberCoilZoomState(subsamplingImageGenerators: ImmutableList<CoilComposeSubsamplingImageGenerator>? = null, logLevel: Logger.Level? = null): CoilZoomState","description":"com.github.panpf.zoomimage.rememberCoilZoomState","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage/remember-coil-zoom-state.html","searchKeys":["rememberCoilZoomState","fun rememberCoilZoomState(subsamplingImageGenerators: ImmutableList<CoilComposeSubsamplingImageGenerator>? = null, logLevel: Logger.Level? = null): CoilZoomState","com.github.panpf.zoomimage.rememberCoilZoomState"]},{"name":"interface CoilComposeSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil/-coil-compose-subsampling-image-generator/index.html","searchKeys":["CoilComposeSubsamplingImageGenerator","interface CoilComposeSubsamplingImageGenerator","com.github.panpf.zoomimage.compose.coil.CoilComposeSubsamplingImageGenerator"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.equals","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil.internal/-engine-coil-compose-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.equals"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.hashCode","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil.internal/-engine-coil-compose-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.toString","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil.internal/-engine-coil-compose-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.toString"]},{"name":"open suspend override fun generateImage(context: PlatformContext, imageLoader: ImageLoader, result: SuccessResult, painter: Painter): SubsamplingImageGenerateResult","description":"com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.generateImage","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage.compose.coil.internal/-engine-coil-compose-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(context: PlatformContext, imageLoader: ImageLoader, result: SuccessResult, painter: Painter): SubsamplingImageGenerateResult","com.github.panpf.zoomimage.compose.coil.internal.EngineCoilComposeSubsamplingImageGenerator.generateImage"]},{"name":"val subsamplingImageGenerators: List<CoilComposeSubsamplingImageGenerator>","description":"com.github.panpf.zoomimage.CoilZoomState.subsamplingImageGenerators","location":"zoomimage-compose-coil3-core/com.github.panpf.zoomimage/-coil-zoom-state/subsampling-image-generators.html","searchKeys":["subsamplingImageGenerators","val subsamplingImageGenerators: List<CoilComposeSubsamplingImageGenerator>","com.github.panpf.zoomimage.CoilZoomState.subsamplingImageGenerators"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"com.github.panpf.zoomimage.PicassoZoomImageView.PicassoZoomImageView","location":"zoomimage-view-picasso/com.github.panpf.zoomimage/-picasso-zoom-image-view/-picasso-zoom-image-view.html","searchKeys":["PicassoZoomImageView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","com.github.panpf.zoomimage.PicassoZoomImageView.PicassoZoomImageView"]},{"name":"fun loadImage(file: File, callback: Callback? = null, config: RequestCreator.() -> Unit? = null)","description":"com.github.panpf.zoomimage.PicassoZoomImageView.loadImage","location":"zoomimage-view-picasso/com.github.panpf.zoomimage/-picasso-zoom-image-view/load-image.html","searchKeys":["loadImage","fun loadImage(file: File, callback: Callback? = null, config: RequestCreator.() -> Unit? = null)","com.github.panpf.zoomimage.PicassoZoomImageView.loadImage"]},{"name":"fun loadImage(path: String?, callback: Callback? = null, config: RequestCreator.() -> Unit? = null)","description":"com.github.panpf.zoomimage.PicassoZoomImageView.loadImage","location":"zoomimage-view-picasso/com.github.panpf.zoomimage/-picasso-zoom-image-view/load-image.html","searchKeys":["loadImage","fun loadImage(path: String?, callback: Callback? = null, config: RequestCreator.() -> Unit? = null)","com.github.panpf.zoomimage.PicassoZoomImageView.loadImage"]},{"name":"fun loadImage(resourceId: Int, callback: Callback? = null, config: RequestCreator.() -> Unit? = null)","description":"com.github.panpf.zoomimage.PicassoZoomImageView.loadImage","location":"zoomimage-view-picasso/com.github.panpf.zoomimage/-picasso-zoom-image-view/load-image.html","searchKeys":["loadImage","fun loadImage(resourceId: Int, callback: Callback? = null, config: RequestCreator.() -> Unit? = null)","com.github.panpf.zoomimage.PicassoZoomImageView.loadImage"]},{"name":"fun loadImage(uri: Uri?, callback: Callback? = null, config: RequestCreator.() -> Unit? = null)","description":"com.github.panpf.zoomimage.PicassoZoomImageView.loadImage","location":"zoomimage-view-picasso/com.github.panpf.zoomimage/-picasso-zoom-image-view/load-image.html","searchKeys":["loadImage","fun loadImage(uri: Uri?, callback: Callback? = null, config: RequestCreator.() -> Unit? = null)","com.github.panpf.zoomimage.PicassoZoomImageView.loadImage"]},{"name":"fun setSubsamplingImageGenerators(subsamplingImageGenerators: List<PicassoSubsamplingImageGenerator>?)","description":"com.github.panpf.zoomimage.PicassoZoomImageView.setSubsamplingImageGenerators","location":"zoomimage-view-picasso/com.github.panpf.zoomimage/-picasso-zoom-image-view/set-subsampling-image-generators.html","searchKeys":["setSubsamplingImageGenerators","fun setSubsamplingImageGenerators(subsamplingImageGenerators: List<PicassoSubsamplingImageGenerator>?)","com.github.panpf.zoomimage.PicassoZoomImageView.setSubsamplingImageGenerators"]},{"name":"fun setSubsamplingImageGenerators(vararg subsamplingImageGenerators: PicassoSubsamplingImageGenerator)","description":"com.github.panpf.zoomimage.PicassoZoomImageView.setSubsamplingImageGenerators","location":"zoomimage-view-picasso/com.github.panpf.zoomimage/-picasso-zoom-image-view/set-subsampling-image-generators.html","searchKeys":["setSubsamplingImageGenerators","fun setSubsamplingImageGenerators(vararg subsamplingImageGenerators: PicassoSubsamplingImageGenerator)","com.github.panpf.zoomimage.PicassoZoomImageView.setSubsamplingImageGenerators"]},{"name":"open class PicassoZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : ZoomImageView","description":"com.github.panpf.zoomimage.PicassoZoomImageView","location":"zoomimage-view-picasso/com.github.panpf.zoomimage/-picasso-zoom-image-view/index.html","searchKeys":["PicassoZoomImageView","open class PicassoZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : ZoomImageView","com.github.panpf.zoomimage.PicassoZoomImageView"]},{"name":"class Factory(val sketch: Sketch, val imageUri: String) : ImageSource.Factory","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/index.html","searchKeys":["Factory","class Factory(val sketch: Sketch, val imageUri: String) : ImageSource.Factory","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory"]},{"name":"class SketchImageSource(val imageUri: String, val dataSource: DataSource) : ImageSource","description":"com.github.panpf.zoomimage.sketch.SketchImageSource","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/index.html","searchKeys":["SketchImageSource","class SketchImageSource(val imageUri: String, val dataSource: DataSource) : ImageSource","com.github.panpf.zoomimage.sketch.SketchImageSource"]},{"name":"constructor(imageUri: String, dataSource: DataSource)","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.SketchImageSource","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/-sketch-image-source.html","searchKeys":["SketchImageSource","constructor(imageUri: String, dataSource: DataSource)","com.github.panpf.zoomimage.sketch.SketchImageSource.SketchImageSource"]},{"name":"constructor(sketch: Sketch, imageUri: String)","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.Factory","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/-factory.html","searchKeys":["Factory","constructor(sketch: Sketch, imageUri: String)","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.Factory"]},{"name":"expect class SketchTileImageCache(sketch: Sketch) : TileImageCache","description":"com.github.panpf.zoomimage.sketch.SketchTileImageCache","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-tile-image-cache/index.html","searchKeys":["SketchTileImageCache","expect class SketchTileImageCache(sketch: Sketch) : TileImageCache","com.github.panpf.zoomimage.sketch.SketchTileImageCache"]},{"name":"expect constructor(sketch: Sketch)","description":"com.github.panpf.zoomimage.sketch.SketchTileImageCache.SketchTileImageCache","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-tile-image-cache/-sketch-tile-image-cache.html","searchKeys":["SketchTileImageCache","expect constructor(sketch: Sketch)","com.github.panpf.zoomimage.sketch.SketchTileImageCache.SketchTileImageCache"]},{"name":"expect open override fun get(key: String): TileImage?","description":"com.github.panpf.zoomimage.sketch.SketchTileImageCache.get","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-tile-image-cache/get.html","searchKeys":["get","expect open override fun get(key: String): TileImage?","com.github.panpf.zoomimage.sketch.SketchTileImageCache.get"]},{"name":"expect open override fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","description":"com.github.panpf.zoomimage.sketch.SketchTileImageCache.put","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-tile-image-cache/put.html","searchKeys":["put","expect open override fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","com.github.panpf.zoomimage.sketch.SketchTileImageCache.put"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.equals","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.equals","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.sketch.SketchImageSource.equals"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.hashCode","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.hashCode","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.sketch.SketchImageSource.hashCode"]},{"name":"open override fun openSource(): Source","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.openSource","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/open-source.html","searchKeys":["openSource","open override fun openSource(): Source","com.github.panpf.zoomimage.sketch.SketchImageSource.openSource"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.toString","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.toString","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.sketch.SketchImageSource.toString"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.key","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.key","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.sketch.SketchImageSource.key"]},{"name":"open suspend override fun create(): SketchImageSource","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.create","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/create.html","searchKeys":["create","open suspend override fun create(): SketchImageSource","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.create"]},{"name":"val dataSource: DataSource","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.dataSource","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/data-source.html","searchKeys":["dataSource","val dataSource: DataSource","com.github.panpf.zoomimage.sketch.SketchImageSource.dataSource"]},{"name":"val imageUri: String","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.imageUri","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/image-uri.html","searchKeys":["imageUri","val imageUri: String","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.imageUri"]},{"name":"val imageUri: String","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.imageUri","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/image-uri.html","searchKeys":["imageUri","val imageUri: String","com.github.panpf.zoomimage.sketch.SketchImageSource.imageUri"]},{"name":"val sketch: Sketch","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.sketch","location":"zoomimage-core-sketch4/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/sketch.html","searchKeys":["sketch","val sketch: Sketch","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.sketch"]},{"name":"class Factory(val sketch: Sketch, val imageUri: String) : ImageSource.Factory","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/index.html","searchKeys":["Factory","class Factory(val sketch: Sketch, val imageUri: String) : ImageSource.Factory","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory"]},{"name":"class SketchBitmapTileImage(cacheValue: MemoryCache.Value, key: String, fromCache: Boolean, caller: String) : BitmapTileImage","description":"com.github.panpf.zoomimage.sketch.SketchBitmapTileImage","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-bitmap-tile-image/index.html","searchKeys":["SketchBitmapTileImage","class SketchBitmapTileImage(cacheValue: MemoryCache.Value, key: String, fromCache: Boolean, caller: String) : BitmapTileImage","com.github.panpf.zoomimage.sketch.SketchBitmapTileImage"]},{"name":"class SketchImageSource(val imageUri: String, val dataSource: BasedStreamDataSource) : ImageSource","description":"com.github.panpf.zoomimage.sketch.SketchImageSource","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/index.html","searchKeys":["SketchImageSource","class SketchImageSource(val imageUri: String, val dataSource: BasedStreamDataSource) : ImageSource","com.github.panpf.zoomimage.sketch.SketchImageSource"]},{"name":"class SketchTileImageCache(sketch: Sketch) : TileImageCache","description":"com.github.panpf.zoomimage.sketch.SketchTileImageCache","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-tile-image-cache/index.html","searchKeys":["SketchTileImageCache","class SketchTileImageCache(sketch: Sketch) : TileImageCache","com.github.panpf.zoomimage.sketch.SketchTileImageCache"]},{"name":"constructor(cacheValue: MemoryCache.Value, key: String, fromCache: Boolean, caller: String)","description":"com.github.panpf.zoomimage.sketch.SketchBitmapTileImage.SketchBitmapTileImage","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-bitmap-tile-image/-sketch-bitmap-tile-image.html","searchKeys":["SketchBitmapTileImage","constructor(cacheValue: MemoryCache.Value, key: String, fromCache: Boolean, caller: String)","com.github.panpf.zoomimage.sketch.SketchBitmapTileImage.SketchBitmapTileImage"]},{"name":"constructor(imageUri: String, dataSource: BasedStreamDataSource)","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.SketchImageSource","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/-sketch-image-source.html","searchKeys":["SketchImageSource","constructor(imageUri: String, dataSource: BasedStreamDataSource)","com.github.panpf.zoomimage.sketch.SketchImageSource.SketchImageSource"]},{"name":"constructor(sketch: Sketch)","description":"com.github.panpf.zoomimage.sketch.SketchTileImageCache.SketchTileImageCache","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-tile-image-cache/-sketch-tile-image-cache.html","searchKeys":["SketchTileImageCache","constructor(sketch: Sketch)","com.github.panpf.zoomimage.sketch.SketchTileImageCache.SketchTileImageCache"]},{"name":"constructor(sketch: Sketch, imageUri: String)","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.Factory","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/-factory.html","searchKeys":["Factory","constructor(sketch: Sketch, imageUri: String)","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.Factory"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.sketch.SketchBitmapTileImage.equals","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-bitmap-tile-image/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.sketch.SketchBitmapTileImage.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.equals","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.equals","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.sketch.SketchImageSource.equals"]},{"name":"open override fun get(key: String): TileImage?","description":"com.github.panpf.zoomimage.sketch.SketchTileImageCache.get","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-tile-image-cache/get.html","searchKeys":["get","open override fun get(key: String): TileImage?","com.github.panpf.zoomimage.sketch.SketchTileImageCache.get"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.sketch.SketchBitmapTileImage.hashCode","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-bitmap-tile-image/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.sketch.SketchBitmapTileImage.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.hashCode","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.hashCode","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.sketch.SketchImageSource.hashCode"]},{"name":"open override fun openSource(): Source","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.openSource","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/open-source.html","searchKeys":["openSource","open override fun openSource(): Source","com.github.panpf.zoomimage.sketch.SketchImageSource.openSource"]},{"name":"open override fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","description":"com.github.panpf.zoomimage.sketch.SketchTileImageCache.put","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-tile-image-cache/put.html","searchKeys":["put","open override fun put(key: String, tileImage: TileImage, imageUrl: String, imageInfo: ImageInfo): TileImage?","com.github.panpf.zoomimage.sketch.SketchTileImageCache.put"]},{"name":"open override fun setIsDisplayed(displayed: Boolean)","description":"com.github.panpf.zoomimage.sketch.SketchBitmapTileImage.setIsDisplayed","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-bitmap-tile-image/set-is-displayed.html","searchKeys":["setIsDisplayed","open override fun setIsDisplayed(displayed: Boolean)","com.github.panpf.zoomimage.sketch.SketchBitmapTileImage.setIsDisplayed"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.sketch.SketchBitmapTileImage.toString","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-bitmap-tile-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.sketch.SketchBitmapTileImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.toString","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.toString","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.sketch.SketchImageSource.toString"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.key","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.key","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/key.html","searchKeys":["key","open override val key: String","com.github.panpf.zoomimage.sketch.SketchImageSource.key"]},{"name":"open suspend override fun create(): SketchImageSource","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.create","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/create.html","searchKeys":["create","open suspend override fun create(): SketchImageSource","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.create"]},{"name":"val dataSource: BasedStreamDataSource","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.dataSource","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/data-source.html","searchKeys":["dataSource","val dataSource: BasedStreamDataSource","com.github.panpf.zoomimage.sketch.SketchImageSource.dataSource"]},{"name":"val imageUri: String","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.imageUri","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/image-uri.html","searchKeys":["imageUri","val imageUri: String","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.imageUri"]},{"name":"val imageUri: String","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.imageUri","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/image-uri.html","searchKeys":["imageUri","val imageUri: String","com.github.panpf.zoomimage.sketch.SketchImageSource.imageUri"]},{"name":"val sketch: Sketch","description":"com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.sketch","location":"zoomimage-core-sketch3/com.github.panpf.zoomimage.sketch/-sketch-image-source/-factory/sketch.html","searchKeys":["sketch","val sketch: Sketch","com.github.panpf.zoomimage.sketch.SketchImageSource.Factory.sketch"]},{"name":"Alt","description":"com.github.panpf.zoomimage.compose.util.AssistKey.Alt","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-assist-key/-alt/index.html","searchKeys":["Alt","Alt","com.github.panpf.zoomimage.compose.util.AssistKey.Alt"]},{"name":"Ctrl","description":"com.github.panpf.zoomimage.compose.util.AssistKey.Ctrl","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-assist-key/-ctrl/index.html","searchKeys":["Ctrl","Ctrl","com.github.panpf.zoomimage.compose.util.AssistKey.Ctrl"]},{"name":"Down","description":"com.github.panpf.zoomimage.compose.zoom.MoveArrow.Down","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-arrow/-down/index.html","searchKeys":["Down","Down","com.github.panpf.zoomimage.compose.zoom.MoveArrow.Down"]},{"name":"Left","description":"com.github.panpf.zoomimage.compose.zoom.MoveArrow.Left","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-arrow/-left/index.html","searchKeys":["Left","Left","com.github.panpf.zoomimage.compose.zoom.MoveArrow.Left"]},{"name":"Meta","description":"com.github.panpf.zoomimage.compose.util.AssistKey.Meta","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-assist-key/-meta/index.html","searchKeys":["Meta","Meta","com.github.panpf.zoomimage.compose.util.AssistKey.Meta"]},{"name":"Right","description":"com.github.panpf.zoomimage.compose.zoom.MoveArrow.Right","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-arrow/-right/index.html","searchKeys":["Right","Right","com.github.panpf.zoomimage.compose.zoom.MoveArrow.Right"]},{"name":"Shift","description":"com.github.panpf.zoomimage.compose.util.AssistKey.Shift","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-assist-key/-shift/index.html","searchKeys":["Shift","Shift","com.github.panpf.zoomimage.compose.util.AssistKey.Shift"]},{"name":"Up","description":"com.github.panpf.zoomimage.compose.zoom.MoveArrow.Up","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-arrow/-up/index.html","searchKeys":["Up","Up","com.github.panpf.zoomimage.compose.zoom.MoveArrow.Up"]},{"name":"abstract class BaseMatcherZoomKeyHandler(val keyMatchers: ImmutableList<KeyMatcher>) : MatcherZoomKeyHandler","description":"com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-base-matcher-zoom-key-handler/index.html","searchKeys":["BaseMatcherZoomKeyHandler","abstract class BaseMatcherZoomKeyHandler(val keyMatchers: ImmutableList<KeyMatcher>) : MatcherZoomKeyHandler","com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler"]},{"name":"abstract class MatcherKeyHandler(val keyMatchers: List<KeyMatcher>) : KeyHandler","description":"com.github.panpf.zoomimage.compose.util.MatcherKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-matcher-key-handler/index.html","searchKeys":["MatcherKeyHandler","abstract class MatcherKeyHandler(val keyMatchers: List<KeyMatcher>) : KeyHandler","com.github.panpf.zoomimage.compose.util.MatcherKeyHandler"]},{"name":"abstract class MatcherZoomKeyHandler(val keyMatchers: List<KeyMatcher>) : ZoomKeyHandler","description":"com.github.panpf.zoomimage.compose.zoom.internal.MatcherZoomKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-matcher-zoom-key-handler/index.html","searchKeys":["MatcherZoomKeyHandler","abstract class MatcherZoomKeyHandler(val keyMatchers: List<KeyMatcher>) : ZoomKeyHandler","com.github.panpf.zoomimage.compose.zoom.internal.MatcherZoomKeyHandler"]},{"name":"abstract class StepMatcherZoomKeyHandler(val keyMatchers: ImmutableList<KeyMatcher>) : BaseMatcherZoomKeyHandler","description":"com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-step-matcher-zoom-key-handler/index.html","searchKeys":["StepMatcherZoomKeyHandler","abstract class StepMatcherZoomKeyHandler(val keyMatchers: ImmutableList<KeyMatcher>) : BaseMatcherZoomKeyHandler","com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler"]},{"name":"abstract fun calculateLongPressAddValue(zoomableState: ZoomableState, lastElapsedTime: Long?, elapsedTime: Long): Float","description":"com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.calculateLongPressAddValue","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-base-matcher-zoom-key-handler/calculate-long-press-add-value.html","searchKeys":["calculateLongPressAddValue","abstract fun calculateLongPressAddValue(zoomableState: ZoomableState, lastElapsedTime: Long?, elapsedTime: Long): Float","com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.calculateLongPressAddValue"]},{"name":"abstract fun calculateScale(currentScale: Float, scrollDelta: Float): Float","description":"com.github.panpf.zoomimage.zoom.MouseWheelScaleCalculator.calculateScale","location":"zoomimage-compose/com.github.panpf.zoomimage.zoom/-mouse-wheel-scale-calculator/calculate-scale.html","searchKeys":["calculateScale","abstract fun calculateScale(currentScale: Float, scrollDelta: Float): Float","com.github.panpf.zoomimage.zoom.MouseWheelScaleCalculator.calculateScale"]},{"name":"abstract fun calculateShortPressAddValue(zoomableState: ZoomableState): Float","description":"com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.calculateShortPressAddValue","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-base-matcher-zoom-key-handler/calculate-short-press-add-value.html","searchKeys":["calculateShortPressAddValue","abstract fun calculateShortPressAddValue(zoomableState: ZoomableState): Float","com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.calculateShortPressAddValue"]},{"name":"abstract fun getLongPressStep(zoomableState: ZoomableState): Float","description":"com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.getLongPressStep","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-step-matcher-zoom-key-handler/get-long-press-step.html","searchKeys":["getLongPressStep","abstract fun getLongPressStep(zoomableState: ZoomableState): Float","com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.getLongPressStep"]},{"name":"abstract fun getShortPressStep(zoomableState: ZoomableState): Float","description":"com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.getShortPressStep","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-step-matcher-zoom-key-handler/get-short-press-step.html","searchKeys":["getShortPressStep","abstract fun getShortPressStep(zoomableState: ZoomableState): Float","com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.getShortPressStep"]},{"name":"abstract fun handle(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.internal.ZoomKeyHandler.handle","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-zoom-key-handler/handle.html","searchKeys":["handle","abstract fun handle(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent): Boolean","com.github.panpf.zoomimage.compose.zoom.internal.ZoomKeyHandler.handle"]},{"name":"abstract fun handle(event: KeyEvent): Boolean","description":"com.github.panpf.zoomimage.compose.util.KeyHandler.handle","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-key-handler/handle.html","searchKeys":["handle","abstract fun handle(event: KeyEvent): Boolean","com.github.panpf.zoomimage.compose.util.KeyHandler.handle"]},{"name":"abstract fun onCanceled(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent)","description":"com.github.panpf.zoomimage.compose.zoom.internal.MatcherZoomKeyHandler.onCanceled","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-matcher-zoom-key-handler/on-canceled.html","searchKeys":["onCanceled","abstract fun onCanceled(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent)","com.github.panpf.zoomimage.compose.zoom.internal.MatcherZoomKeyHandler.onCanceled"]},{"name":"abstract fun onCanceled(event: KeyEvent)","description":"com.github.panpf.zoomimage.compose.util.MatcherKeyHandler.onCanceled","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-matcher-key-handler/on-canceled.html","searchKeys":["onCanceled","abstract fun onCanceled(event: KeyEvent)","com.github.panpf.zoomimage.compose.util.MatcherKeyHandler.onCanceled"]},{"name":"abstract fun onKey(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent)","description":"com.github.panpf.zoomimage.compose.zoom.internal.MatcherZoomKeyHandler.onKey","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-matcher-zoom-key-handler/on-key.html","searchKeys":["onKey","abstract fun onKey(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent)","com.github.panpf.zoomimage.compose.zoom.internal.MatcherZoomKeyHandler.onKey"]},{"name":"abstract fun onKey(event: KeyEvent)","description":"com.github.panpf.zoomimage.compose.util.MatcherKeyHandler.onKey","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-matcher-key-handler/on-key.html","searchKeys":["onKey","abstract fun onKey(event: KeyEvent)","com.github.panpf.zoomimage.compose.util.MatcherKeyHandler.onKey"]},{"name":"abstract suspend fun updateValue(zoomableState: ZoomableState, animationSpec: ZoomAnimationSpec? = null, add: Float)","description":"com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.updateValue","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-base-matcher-zoom-key-handler/update-value.html","searchKeys":["updateValue","abstract suspend fun updateValue(zoomableState: ZoomableState, animationSpec: ZoomAnimationSpec? = null, add: Float)","com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.updateValue"]},{"name":"abstract val longPressAccelerateBase: Float","description":"com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.longPressAccelerateBase","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-step-matcher-zoom-key-handler/long-press-accelerate-base.html","searchKeys":["longPressAccelerateBase","abstract val longPressAccelerateBase: Float","com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.longPressAccelerateBase"]},{"name":"abstract val longPressAccelerateInterval: Int","description":"com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.longPressAccelerateInterval","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-step-matcher-zoom-key-handler/long-press-accelerate-interval.html","searchKeys":["longPressAccelerateInterval","abstract val longPressAccelerateInterval: Int","com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.longPressAccelerateInterval"]},{"name":"class ComposeAnimationAdapter : AnimationAdapter","description":"com.github.panpf.zoomimage.compose.zoom.internal.ComposeAnimationAdapter","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-compose-animation-adapter/index.html","searchKeys":["ComposeAnimationAdapter","class ComposeAnimationAdapter : AnimationAdapter","com.github.panpf.zoomimage.compose.zoom.internal.ComposeAnimationAdapter"]},{"name":"class ComposeTileImage(tileImage: BitmapTileImage) : TileImage","description":"com.github.panpf.zoomimage.compose.subsampling.ComposeTileImage","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-compose-tile-image/index.html","searchKeys":["ComposeTileImage","class ComposeTileImage(tileImage: BitmapTileImage) : TileImage","com.github.panpf.zoomimage.compose.subsampling.ComposeTileImage"]},{"name":"class ComposeTileImageConvertor : TileImageConvertor","description":"com.github.panpf.zoomimage.compose.subsampling.ComposeTileImageConvertor","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-compose-tile-image-convertor/index.html","searchKeys":["ComposeTileImageConvertor","class ComposeTileImageConvertor : TileImageConvertor","com.github.panpf.zoomimage.compose.subsampling.ComposeTileImageConvertor"]},{"name":"class KeyMatcher(val key: Key, val assistKeys: Array<AssistKey>? = null, val type: KeyEventType? = null)","description":"com.github.panpf.zoomimage.compose.util.KeyMatcher","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-key-matcher/index.html","searchKeys":["KeyMatcher","class KeyMatcher(val key: Key, val assistKeys: Array<AssistKey>? = null, val type: KeyEventType? = null)","com.github.panpf.zoomimage.compose.util.KeyMatcher"]},{"name":"class SubsamplingState(val zoomableState: ZoomableState, val lifecycle: Lifecycle) : RememberObserver","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/index.html","searchKeys":["SubsamplingState","class SubsamplingState(val zoomableState: ZoomableState, val lifecycle: Lifecycle) : RememberObserver","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState"]},{"name":"class ZoomableState(val logger: Logger, val layoutDirection: LayoutDirection) : RememberObserver","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/index.html","searchKeys":["ZoomableState","class ZoomableState(val logger: Logger, val layoutDirection: LayoutDirection) : RememberObserver","com.github.panpf.zoomimage.compose.zoom.ZoomableState"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.compose.subsampling.ComposeTileImageConvertor.ComposeTileImageConvertor","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-compose-tile-image-convertor/-compose-tile-image-convertor.html","searchKeys":["ComposeTileImageConvertor","constructor()","com.github.panpf.zoomimage.compose.subsampling.ComposeTileImageConvertor.ComposeTileImageConvertor"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.compose.zoom.internal.ComposeAnimationAdapter.ComposeAnimationAdapter","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-compose-animation-adapter/-compose-animation-adapter.html","searchKeys":["ComposeAnimationAdapter","constructor()","com.github.panpf.zoomimage.compose.zoom.internal.ComposeAnimationAdapter.ComposeAnimationAdapter"]},{"name":"constructor(color: Color = Color(0xB2888888), size: Dp = 3.dp, margin: Dp = 6.dp)","description":"com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec.ScrollBarSpec","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scroll-bar-spec/-scroll-bar-spec.html","searchKeys":["ScrollBarSpec","constructor(color: Color = Color(0xB2888888), size: Dp = 3.dp, margin: Dp = 6.dp)","com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec.ScrollBarSpec"]},{"name":"constructor(durationMillis: Int = DEFAULT_DURATION_MILLIS, easing: Easing = FastOutSlowInEasing, initialVelocity: Float = 0.0f)","description":"com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.ZoomAnimationSpec","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoom-animation-spec/-zoom-animation-spec.html","searchKeys":["ZoomAnimationSpec","constructor(durationMillis: Int = DEFAULT_DURATION_MILLIS, easing: Easing = FastOutSlowInEasing, initialVelocity: Float = 0.0f)","com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.ZoomAnimationSpec"]},{"name":"constructor(key: Key, assistKey: AssistKey, type: KeyEventType? = null)","description":"com.github.panpf.zoomimage.compose.util.KeyMatcher.KeyMatcher","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-key-matcher/-key-matcher.html","searchKeys":["KeyMatcher","constructor(key: Key, assistKey: AssistKey, type: KeyEventType? = null)","com.github.panpf.zoomimage.compose.util.KeyMatcher.KeyMatcher"]},{"name":"constructor(key: Key, assistKeys: Array<AssistKey>? = null, type: KeyEventType? = null)","description":"com.github.panpf.zoomimage.compose.util.KeyMatcher.KeyMatcher","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-key-matcher/-key-matcher.html","searchKeys":["KeyMatcher","constructor(key: Key, assistKeys: Array<AssistKey>? = null, type: KeyEventType? = null)","com.github.panpf.zoomimage.compose.util.KeyMatcher.KeyMatcher"]},{"name":"constructor(keyMatchers: ImmutableList<KeyMatcher>)","description":"com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.BaseMatcherZoomKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-base-matcher-zoom-key-handler/-base-matcher-zoom-key-handler.html","searchKeys":["BaseMatcherZoomKeyHandler","constructor(keyMatchers: ImmutableList<KeyMatcher>)","com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.BaseMatcherZoomKeyHandler"]},{"name":"constructor(keyMatchers: ImmutableList<KeyMatcher>)","description":"com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.StepMatcherZoomKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-step-matcher-zoom-key-handler/-step-matcher-zoom-key-handler.html","searchKeys":["StepMatcherZoomKeyHandler","constructor(keyMatchers: ImmutableList<KeyMatcher>)","com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.StepMatcherZoomKeyHandler"]},{"name":"constructor(keyMatchers: ImmutableList<KeyMatcher>, moveArrow: MoveArrow, shortPressStepWithContainerPercentage: Float = 0.33f, longPressStepWithContainerPercentage: Float = 0.075f, longPressAccelerateBase: Float = 0.5f, longPressAccelerateInterval: Int = 500)","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.MoveKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/-move-key-handler.html","searchKeys":["MoveKeyHandler","constructor(keyMatchers: ImmutableList<KeyMatcher>, moveArrow: MoveArrow, shortPressStepWithContainerPercentage: Float = 0.33f, longPressStepWithContainerPercentage: Float = 0.075f, longPressAccelerateBase: Float = 0.5f, longPressAccelerateInterval: Int = 500)","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.MoveKeyHandler"]},{"name":"constructor(keyMatchers: ImmutableList<KeyMatcher>, scaleIn: Boolean, shortPressStepScaleFactor: Float = 2.0f, longPressStep: Float = 0.25f, longPressAccelerateBase: Float = 0.5f, longPressAccelerateInterval: Int = 500)","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.ScaleKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/-scale-key-handler.html","searchKeys":["ScaleKeyHandler","constructor(keyMatchers: ImmutableList<KeyMatcher>, scaleIn: Boolean, shortPressStepScaleFactor: Float = 2.0f, longPressStep: Float = 0.25f, longPressAccelerateBase: Float = 0.5f, longPressAccelerateInterval: Int = 500)","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.ScaleKeyHandler"]},{"name":"constructor(keyMatchers: List<KeyMatcher>)","description":"com.github.panpf.zoomimage.compose.util.MatcherKeyHandler.MatcherKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-matcher-key-handler/-matcher-key-handler.html","searchKeys":["MatcherKeyHandler","constructor(keyMatchers: List<KeyMatcher>)","com.github.panpf.zoomimage.compose.util.MatcherKeyHandler.MatcherKeyHandler"]},{"name":"constructor(keyMatchers: List<KeyMatcher>)","description":"com.github.panpf.zoomimage.compose.zoom.internal.MatcherZoomKeyHandler.MatcherZoomKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-matcher-zoom-key-handler/-matcher-zoom-key-handler.html","searchKeys":["MatcherZoomKeyHandler","constructor(keyMatchers: List<KeyMatcher>)","com.github.panpf.zoomimage.compose.zoom.internal.MatcherZoomKeyHandler.MatcherZoomKeyHandler"]},{"name":"constructor(logger: Logger, layoutDirection: LayoutDirection)","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.ZoomableState","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/-zoomable-state.html","searchKeys":["ZoomableState","constructor(logger: Logger, layoutDirection: LayoutDirection)","com.github.panpf.zoomimage.compose.zoom.ZoomableState.ZoomableState"]},{"name":"constructor(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState)","description":"com.github.panpf.zoomimage.compose.ZoomState.ZoomState","location":"zoomimage-compose/com.github.panpf.zoomimage.compose/-zoom-state/-zoom-state.html","searchKeys":["ZoomState","constructor(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState)","com.github.panpf.zoomimage.compose.ZoomState.ZoomState"]},{"name":"constructor(scale: ScaleFactor, offset: Offset, rotation: Float = 0.0f, scaleOrigin: TransformOrigin = TransformOrigin.TopStart, rotationOrigin: TransformOrigin = TransformOrigin.TopStart)","description":"com.github.panpf.zoomimage.compose.zoom.Transform.Transform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/-transform.html","searchKeys":["Transform","constructor(scale: ScaleFactor, offset: Offset, rotation: Float = 0.0f, scaleOrigin: TransformOrigin = TransformOrigin.TopStart, rotationOrigin: TransformOrigin = TransformOrigin.TopStart)","com.github.panpf.zoomimage.compose.zoom.Transform.Transform"]},{"name":"constructor(stepScrollDelta: Float = platformMouseWheelStepScrollDelta(), stepScaleFactor: Float = 0.3f)","description":"com.github.panpf.zoomimage.zoom.DefaultMouseWheelScaleCalculator.DefaultMouseWheelScaleCalculator","location":"zoomimage-compose/com.github.panpf.zoomimage.zoom/-default-mouse-wheel-scale-calculator/-default-mouse-wheel-scale-calculator.html","searchKeys":["DefaultMouseWheelScaleCalculator","constructor(stepScrollDelta: Float = platformMouseWheelStepScrollDelta(), stepScaleFactor: Float = 0.3f)","com.github.panpf.zoomimage.zoom.DefaultMouseWheelScaleCalculator.DefaultMouseWheelScaleCalculator"]},{"name":"constructor(tileImage: BitmapTileImage)","description":"com.github.panpf.zoomimage.compose.subsampling.ComposeTileImage.ComposeTileImage","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-compose-tile-image/-compose-tile-image.html","searchKeys":["ComposeTileImage","constructor(tileImage: BitmapTileImage)","com.github.panpf.zoomimage.compose.subsampling.ComposeTileImage.ComposeTileImage"]},{"name":"constructor(zoomableState: ZoomableState, lifecycle: Lifecycle)","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.SubsamplingState","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/-subsampling-state.html","searchKeys":["SubsamplingState","constructor(zoomableState: ZoomableState, lifecycle: Lifecycle)","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.SubsamplingState"]},{"name":"data class DefaultMouseWheelScaleCalculator(val stepScrollDelta: Float = platformMouseWheelStepScrollDelta(), val stepScaleFactor: Float = 0.3f) : MouseWheelScaleCalculator","description":"com.github.panpf.zoomimage.zoom.DefaultMouseWheelScaleCalculator","location":"zoomimage-compose/com.github.panpf.zoomimage.zoom/-default-mouse-wheel-scale-calculator/index.html","searchKeys":["DefaultMouseWheelScaleCalculator","data class DefaultMouseWheelScaleCalculator(val stepScrollDelta: Float = platformMouseWheelStepScrollDelta(), val stepScaleFactor: Float = 0.3f) : MouseWheelScaleCalculator","com.github.panpf.zoomimage.zoom.DefaultMouseWheelScaleCalculator"]},{"name":"data class ScrollBarSpec(val color: Color = Color(0xB2888888), val size: Dp = 3.dp, val margin: Dp = 6.dp)","description":"com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scroll-bar-spec/index.html","searchKeys":["ScrollBarSpec","data class ScrollBarSpec(val color: Color = Color(0xB2888888), val size: Dp = 3.dp, val margin: Dp = 6.dp)","com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec"]},{"name":"data class Transform(val scale: ScaleFactor, val offset: Offset, val rotation: Float = 0.0f, val scaleOrigin: TransformOrigin = TransformOrigin.TopStart, val rotationOrigin: TransformOrigin = TransformOrigin.TopStart)","description":"com.github.panpf.zoomimage.compose.zoom.Transform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/index.html","searchKeys":["Transform","data class Transform(val scale: ScaleFactor, val offset: Offset, val rotation: Float = 0.0f, val scaleOrigin: TransformOrigin = TransformOrigin.TopStart, val rotationOrigin: TransformOrigin = TransformOrigin.TopStart)","com.github.panpf.zoomimage.compose.zoom.Transform"]},{"name":"data class ZoomAnimationSpec(val durationMillis: Int = DEFAULT_DURATION_MILLIS, val easing: Easing = FastOutSlowInEasing, val initialVelocity: Float = 0.0f) : BaseZoomAnimationSpec","description":"com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoom-animation-spec/index.html","searchKeys":["ZoomAnimationSpec","data class ZoomAnimationSpec(val durationMillis: Int = DEFAULT_DURATION_MILLIS, val easing: Easing = FastOutSlowInEasing, val initialVelocity: Float = 0.0f) : BaseZoomAnimationSpec","com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec"]},{"name":"enum AssistKey : Enum<AssistKey> ","description":"com.github.panpf.zoomimage.compose.util.AssistKey","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-assist-key/index.html","searchKeys":["AssistKey","enum AssistKey : Enum<AssistKey> ","com.github.panpf.zoomimage.compose.util.AssistKey"]},{"name":"enum MoveArrow : Enum<MoveArrow> ","description":"com.github.panpf.zoomimage.compose.zoom.MoveArrow","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-arrow/index.html","searchKeys":["MoveArrow","enum MoveArrow : Enum<MoveArrow> ","com.github.panpf.zoomimage.compose.zoom.MoveArrow"]},{"name":"expect fun TileBitmap.asComposeBitmap(): ImageBitmap","description":"com.github.panpf.zoomimage.compose.subsampling.asComposeBitmap","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/as-compose-bitmap.html","searchKeys":["asComposeBitmap","expect fun TileBitmap.asComposeBitmap(): ImageBitmap","com.github.panpf.zoomimage.compose.subsampling.asComposeBitmap"]},{"name":"expect fun isCloseAntiAliasForDrawTile(): Boolean","description":"com.github.panpf.zoomimage.compose.subsampling.isCloseAntiAliasForDrawTile","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/is-close-anti-alias-for-draw-tile.html","searchKeys":["isCloseAntiAliasForDrawTile","expect fun isCloseAntiAliasForDrawTile(): Boolean","com.github.panpf.zoomimage.compose.subsampling.isCloseAntiAliasForDrawTile"]},{"name":"expect fun platformAssistKey(): AssistKey","description":"com.github.panpf.zoomimage.compose.util.platformAssistKey","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/platform-assist-key.html","searchKeys":["platformAssistKey","expect fun platformAssistKey(): AssistKey","com.github.panpf.zoomimage.compose.util.platformAssistKey"]},{"name":"expect fun platformMouseWheelStepScrollDelta(): Float","description":"com.github.panpf.zoomimage.zoom.platformMouseWheelStepScrollDelta","location":"zoomimage-compose/com.github.panpf.zoomimage.zoom/platform-mouse-wheel-step-scroll-delta.html","searchKeys":["platformMouseWheelStepScrollDelta","expect fun platformMouseWheelStepScrollDelta(): Float","com.github.panpf.zoomimage.zoom.platformMouseWheelStepScrollDelta"]},{"name":"fun Alignment.rtlFlipped(layoutDirection: LayoutDirection? = null): Alignment","description":"com.github.panpf.zoomimage.compose.util.rtlFlipped","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/rtl-flipped.html","searchKeys":["rtlFlipped","fun Alignment.rtlFlipped(layoutDirection: LayoutDirection? = null): Alignment","com.github.panpf.zoomimage.compose.util.rtlFlipped"]},{"name":"fun Alignment.toCompat(): AlignmentCompat","description":"com.github.panpf.zoomimage.compose.util.toCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat.html","searchKeys":["toCompat","fun Alignment.toCompat(): AlignmentCompat","com.github.panpf.zoomimage.compose.util.toCompat"]},{"name":"fun AlignmentCompat.toPlatform(): Alignment","description":"com.github.panpf.zoomimage.compose.util.toPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform.html","searchKeys":["toPlatform","fun AlignmentCompat.toPlatform(): Alignment","com.github.panpf.zoomimage.compose.util.toPlatform"]},{"name":"fun ContentScale.toCompat(): ContentScaleCompat","description":"com.github.panpf.zoomimage.compose.util.toCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat.html","searchKeys":["toCompat","fun ContentScale.toCompat(): ContentScaleCompat","com.github.panpf.zoomimage.compose.util.toCompat"]},{"name":"fun ContentScaleCompat.toPlatform(): ContentScale","description":"com.github.panpf.zoomimage.compose.util.toPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform.html","searchKeys":["toPlatform","fun ContentScaleCompat.toPlatform(): ContentScale","com.github.panpf.zoomimage.compose.util.toPlatform"]},{"name":"fun IntOffset.toCompat(): IntOffsetCompat","description":"com.github.panpf.zoomimage.compose.util.toCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat.html","searchKeys":["toCompat","fun IntOffset.toCompat(): IntOffsetCompat","com.github.panpf.zoomimage.compose.util.toCompat"]},{"name":"fun IntOffset.toCompatOffset(): OffsetCompat","description":"com.github.panpf.zoomimage.compose.util.toCompatOffset","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat-offset.html","searchKeys":["toCompatOffset","fun IntOffset.toCompatOffset(): OffsetCompat","com.github.panpf.zoomimage.compose.util.toCompatOffset"]},{"name":"fun IntOffsetCompat.toPlatform(): IntOffset","description":"com.github.panpf.zoomimage.compose.util.toPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform.html","searchKeys":["toPlatform","fun IntOffsetCompat.toPlatform(): IntOffset","com.github.panpf.zoomimage.compose.util.toPlatform"]},{"name":"fun IntOffsetCompat.toPlatformOffset(): Offset","description":"com.github.panpf.zoomimage.compose.util.toPlatformOffset","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform-offset.html","searchKeys":["toPlatformOffset","fun IntOffsetCompat.toPlatformOffset(): Offset","com.github.panpf.zoomimage.compose.util.toPlatformOffset"]},{"name":"fun IntRect.flip(spaceSize: IntSize, vertical: Boolean = false): IntRect","description":"com.github.panpf.zoomimage.compose.util.flip","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/flip.html","searchKeys":["flip","fun IntRect.flip(spaceSize: IntSize, vertical: Boolean = false): IntRect","com.github.panpf.zoomimage.compose.util.flip"]},{"name":"fun IntRect.toCompat(): IntRectCompat","description":"com.github.panpf.zoomimage.compose.util.toCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat.html","searchKeys":["toCompat","fun IntRect.toCompat(): IntRectCompat","com.github.panpf.zoomimage.compose.util.toCompat"]},{"name":"fun IntRect.toCompatRect(): RectCompat","description":"com.github.panpf.zoomimage.compose.util.toCompatRect","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat-rect.html","searchKeys":["toCompatRect","fun IntRect.toCompatRect(): RectCompat","com.github.panpf.zoomimage.compose.util.toCompatRect"]},{"name":"fun IntRectCompat.toPlatform(): IntRect","description":"com.github.panpf.zoomimage.compose.util.toPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform.html","searchKeys":["toPlatform","fun IntRectCompat.toPlatform(): IntRect","com.github.panpf.zoomimage.compose.util.toPlatform"]},{"name":"fun IntRectCompat.toPlatformRect(): Rect","description":"com.github.panpf.zoomimage.compose.util.toPlatformRect","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform-rect.html","searchKeys":["toPlatformRect","fun IntRectCompat.toPlatformRect(): Rect","com.github.panpf.zoomimage.compose.util.toPlatformRect"]},{"name":"fun IntSize.toCompat(): IntSizeCompat","description":"com.github.panpf.zoomimage.compose.util.toCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat.html","searchKeys":["toCompat","fun IntSize.toCompat(): IntSizeCompat","com.github.panpf.zoomimage.compose.util.toCompat"]},{"name":"fun IntSize.toCompatSize(): SizeCompat","description":"com.github.panpf.zoomimage.compose.util.toCompatSize","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat-size.html","searchKeys":["toCompatSize","fun IntSize.toCompatSize(): SizeCompat","com.github.panpf.zoomimage.compose.util.toCompatSize"]},{"name":"fun IntSizeCompat.toPlatform(): IntSize","description":"com.github.panpf.zoomimage.compose.util.toPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform.html","searchKeys":["toPlatform","fun IntSizeCompat.toPlatform(): IntSize","com.github.panpf.zoomimage.compose.util.toPlatform"]},{"name":"fun IntSizeCompat.toPlatformSize(): Size","description":"com.github.panpf.zoomimage.compose.util.toPlatformSize","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform-size.html","searchKeys":["toPlatformSize","fun IntSizeCompat.toPlatformSize(): Size","com.github.panpf.zoomimage.compose.util.toPlatformSize"]},{"name":"fun Modifier.keyZoom(zoomable: ZoomableState, keyHandlers: ImmutableList<ZoomKeyHandler> = DefaultZoomKeyHandlers): Modifier","description":"com.github.panpf.zoomimage.compose.zoom.keyZoom","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/key-zoom.html","searchKeys":["keyZoom","fun Modifier.keyZoom(zoomable: ZoomableState, keyHandlers: ImmutableList<ZoomKeyHandler> = DefaultZoomKeyHandlers): Modifier","com.github.panpf.zoomimage.compose.zoom.keyZoom"]},{"name":"fun Modifier.mouseZoom(zoomable: ZoomableState): Modifier","description":"com.github.panpf.zoomimage.compose.zoom.mouseZoom","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/mouse-zoom.html","searchKeys":["mouseZoom","fun Modifier.mouseZoom(zoomable: ZoomableState): Modifier","com.github.panpf.zoomimage.compose.zoom.mouseZoom"]},{"name":"fun Modifier.subsampling(zoomable: ZoomableState, subsampling: SubsamplingState): Modifier","description":"com.github.panpf.zoomimage.compose.subsampling.subsampling","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/subsampling.html","searchKeys":["subsampling","fun Modifier.subsampling(zoomable: ZoomableState, subsampling: SubsamplingState): Modifier","com.github.panpf.zoomimage.compose.subsampling.subsampling"]},{"name":"fun Modifier.zoom(zoomable: ZoomableState, userSetupContentSize: Boolean = false, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): Modifier","description":"com.github.panpf.zoomimage.compose.zoom.zoom","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/zoom.html","searchKeys":["zoom","fun Modifier.zoom(zoomable: ZoomableState, userSetupContentSize: Boolean = false, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): Modifier","com.github.panpf.zoomimage.compose.zoom.zoom"]},{"name":"fun Modifier.zoomScrollBar(zoomable: ZoomableState, scrollBarSpec: ScrollBarSpec = ScrollBarSpec.Default): Modifier","description":"com.github.panpf.zoomimage.compose.zoom.zoomScrollBar","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/zoom-scroll-bar.html","searchKeys":["zoomScrollBar","fun Modifier.zoomScrollBar(zoomable: ZoomableState, scrollBarSpec: ScrollBarSpec = ScrollBarSpec.Default): Modifier","com.github.panpf.zoomimage.compose.zoom.zoomScrollBar"]},{"name":"fun Modifier.zoomable(zoomable: ZoomableState, userSetupContentSize: Boolean = false, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): Modifier","description":"com.github.panpf.zoomimage.compose.zoom.zoomable","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/zoomable.html","searchKeys":["zoomable","fun Modifier.zoomable(zoomable: ZoomableState, userSetupContentSize: Boolean = false, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null): Modifier","com.github.panpf.zoomimage.compose.zoom.zoomable"]},{"name":"fun Modifier.zooming(zoomable: ZoomableState): Modifier","description":"com.github.panpf.zoomimage.compose.zoom.zooming","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/zooming.html","searchKeys":["zooming","fun Modifier.zooming(zoomable: ZoomableState): Modifier","com.github.panpf.zoomimage.compose.zoom.zooming"]},{"name":"fun Offset.roundToCompat(): IntOffsetCompat","description":"com.github.panpf.zoomimage.compose.util.roundToCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/round-to-compat.html","searchKeys":["roundToCompat","fun Offset.roundToCompat(): IntOffsetCompat","com.github.panpf.zoomimage.compose.util.roundToCompat"]},{"name":"fun Offset.toCompat(): OffsetCompat","description":"com.github.panpf.zoomimage.compose.util.toCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat.html","searchKeys":["toCompat","fun Offset.toCompat(): OffsetCompat","com.github.panpf.zoomimage.compose.util.toCompat"]},{"name":"fun OffsetCompat.roundToPlatform(): IntOffset","description":"com.github.panpf.zoomimage.compose.util.roundToPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/round-to-platform.html","searchKeys":["roundToPlatform","fun OffsetCompat.roundToPlatform(): IntOffset","com.github.panpf.zoomimage.compose.util.roundToPlatform"]},{"name":"fun OffsetCompat.toPlatform(): Offset","description":"com.github.panpf.zoomimage.compose.util.toPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform.html","searchKeys":["toPlatform","fun OffsetCompat.toPlatform(): Offset","com.github.panpf.zoomimage.compose.util.toPlatform"]},{"name":"fun Rect.flip(spaceSize: Size, vertical: Boolean = false): Rect","description":"com.github.panpf.zoomimage.compose.util.flip","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/flip.html","searchKeys":["flip","fun Rect.flip(spaceSize: Size, vertical: Boolean = false): Rect","com.github.panpf.zoomimage.compose.util.flip"]},{"name":"fun Rect.roundToCompat(): IntRectCompat","description":"com.github.panpf.zoomimage.compose.util.roundToCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/round-to-compat.html","searchKeys":["roundToCompat","fun Rect.roundToCompat(): IntRectCompat","com.github.panpf.zoomimage.compose.util.roundToCompat"]},{"name":"fun Rect.toCompat(): RectCompat","description":"com.github.panpf.zoomimage.compose.util.toCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat.html","searchKeys":["toCompat","fun Rect.toCompat(): RectCompat","com.github.panpf.zoomimage.compose.util.toCompat"]},{"name":"fun RectCompat.roundToPlatform(): IntRect","description":"com.github.panpf.zoomimage.compose.util.roundToPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/round-to-platform.html","searchKeys":["roundToPlatform","fun RectCompat.roundToPlatform(): IntRect","com.github.panpf.zoomimage.compose.util.roundToPlatform"]},{"name":"fun RectCompat.toPlatform(): Rect","description":"com.github.panpf.zoomimage.compose.util.toPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform.html","searchKeys":["toPlatform","fun RectCompat.toPlatform(): Rect","com.github.panpf.zoomimage.compose.util.toPlatform"]},{"name":"fun ScaleFactor.toCompat(): ScaleFactorCompat","description":"com.github.panpf.zoomimage.compose.util.toCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat.html","searchKeys":["toCompat","fun ScaleFactor.toCompat(): ScaleFactorCompat","com.github.panpf.zoomimage.compose.util.toCompat"]},{"name":"fun ScaleFactorCompat.toPlatform(): ScaleFactor","description":"com.github.panpf.zoomimage.compose.util.toPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform.html","searchKeys":["toPlatform","fun ScaleFactorCompat.toPlatform(): ScaleFactor","com.github.panpf.zoomimage.compose.util.toPlatform"]},{"name":"fun Size.roundToCompat(): IntSizeCompat","description":"com.github.panpf.zoomimage.compose.util.roundToCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/round-to-compat.html","searchKeys":["roundToCompat","fun Size.roundToCompat(): IntSizeCompat","com.github.panpf.zoomimage.compose.util.roundToCompat"]},{"name":"fun Size.toCompat(): SizeCompat","description":"com.github.panpf.zoomimage.compose.util.toCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat.html","searchKeys":["toCompat","fun Size.toCompat(): SizeCompat","com.github.panpf.zoomimage.compose.util.toCompat"]},{"name":"fun SizeCompat.roundToPlatform(): IntSize","description":"com.github.panpf.zoomimage.compose.util.roundToPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/round-to-platform.html","searchKeys":["roundToPlatform","fun SizeCompat.roundToPlatform(): IntSize","com.github.panpf.zoomimage.compose.util.roundToPlatform"]},{"name":"fun SizeCompat.toPlatform(): Size","description":"com.github.panpf.zoomimage.compose.util.toPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform.html","searchKeys":["toPlatform","fun SizeCompat.toPlatform(): Size","com.github.panpf.zoomimage.compose.util.toPlatform"]},{"name":"fun Transform.isEmpty(): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.isEmpty","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/is-empty.html","searchKeys":["isEmpty","fun Transform.isEmpty(): Boolean","com.github.panpf.zoomimage.compose.zoom.isEmpty"]},{"name":"fun Transform.isNotEmpty(): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.isNotEmpty","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/is-not-empty.html","searchKeys":["isNotEmpty","fun Transform.isNotEmpty(): Boolean","com.github.panpf.zoomimage.compose.zoom.isNotEmpty"]},{"name":"fun Transform.toCompat(): TransformCompat","description":"com.github.panpf.zoomimage.compose.util.toCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat.html","searchKeys":["toCompat","fun Transform.toCompat(): TransformCompat","com.github.panpf.zoomimage.compose.util.toCompat"]},{"name":"fun Transform.toShortString(): String","description":"com.github.panpf.zoomimage.compose.zoom.toShortString","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/to-short-string.html","searchKeys":["toShortString","fun Transform.toShortString(): String","com.github.panpf.zoomimage.compose.zoom.toShortString"]},{"name":"fun TransformCompat.toPlatform(): Transform","description":"com.github.panpf.zoomimage.compose.util.toPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform.html","searchKeys":["toPlatform","fun TransformCompat.toPlatform(): Transform","com.github.panpf.zoomimage.compose.util.toPlatform"]},{"name":"fun TransformOrigin.toCompat(): TransformOriginCompat","description":"com.github.panpf.zoomimage.compose.util.toCompat","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-compat.html","searchKeys":["toCompat","fun TransformOrigin.toCompat(): TransformOriginCompat","com.github.panpf.zoomimage.compose.util.toCompat"]},{"name":"fun TransformOriginCompat.toPlatform(): TransformOrigin","description":"com.github.panpf.zoomimage.compose.util.toPlatform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/to-platform.html","searchKeys":["toPlatform","fun TransformOriginCompat.toPlatform(): TransformOrigin","com.github.panpf.zoomimage.compose.util.toPlatform"]},{"name":"fun ZoomImage(painter: Painter, contentDescription: String?, modifier: Modifier = Modifier, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, zoomState: ZoomState = rememberZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.ZoomImage","location":"zoomimage-compose/com.github.panpf.zoomimage/-zoom-image.html","searchKeys":["ZoomImage","fun ZoomImage(painter: Painter, contentDescription: String?, modifier: Modifier = Modifier, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, zoomState: ZoomState = rememberZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.ZoomImage"]},{"name":"fun bindKeyZoomWithKeyEventFlow(eventFlow: SharedFlow<KeyEvent>, zoomable: ZoomableState, keyHandlers: ImmutableList<ZoomKeyHandler> = DefaultZoomKeyHandlers)","description":"com.github.panpf.zoomimage.compose.zoom.bindKeyZoomWithKeyEventFlow","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/bind-key-zoom-with-key-event-flow.html","searchKeys":["bindKeyZoomWithKeyEventFlow","fun bindKeyZoomWithKeyEventFlow(eventFlow: SharedFlow<KeyEvent>, zoomable: ZoomableState, keyHandlers: ImmutableList<ZoomKeyHandler> = DefaultZoomKeyHandlers)","com.github.panpf.zoomimage.compose.zoom.bindKeyZoomWithKeyEventFlow"]},{"name":"fun canScroll(horizontal: Boolean, direction: Int): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.canScroll","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/can-scroll.html","searchKeys":["canScroll","fun canScroll(horizontal: Boolean, direction: Int): Boolean","com.github.panpf.zoomimage.compose.zoom.ZoomableState.canScroll"]},{"name":"fun check(event: KeyEvent): Boolean","description":"com.github.panpf.zoomimage.compose.util.AssistKey.check","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-assist-key/check.html","searchKeys":["check","fun check(event: KeyEvent): Boolean","com.github.panpf.zoomimage.compose.util.AssistKey.check"]},{"name":"fun getNextStepScale(): Float","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.getNextStepScale","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/get-next-step-scale.html","searchKeys":["getNextStepScale","fun getNextStepScale(): Float","com.github.panpf.zoomimage.compose.zoom.ZoomableState.getNextStepScale"]},{"name":"fun interface MouseWheelScaleCalculator","description":"com.github.panpf.zoomimage.zoom.MouseWheelScaleCalculator","location":"zoomimage-compose/com.github.panpf.zoomimage.zoom/-mouse-wheel-scale-calculator/index.html","searchKeys":["MouseWheelScaleCalculator","fun interface MouseWheelScaleCalculator","com.github.panpf.zoomimage.zoom.MouseWheelScaleCalculator"]},{"name":"fun lerp(start: Transform, stop: Transform, fraction: Float): Transform","description":"com.github.panpf.zoomimage.compose.zoom.lerp","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/lerp.html","searchKeys":["lerp","fun lerp(start: Transform, stop: Transform, fraction: Float): Transform","com.github.panpf.zoomimage.compose.zoom.lerp"]},{"name":"fun match(event: KeyEvent): Boolean","description":"com.github.panpf.zoomimage.compose.util.KeyMatcher.match","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-key-matcher/match.html","searchKeys":["match","fun match(event: KeyEvent): Boolean","com.github.panpf.zoomimage.compose.util.KeyMatcher.match"]},{"name":"fun matcherKeyHandler(keyMatchers: List<KeyMatcher>, onCanceled: (KeyEvent) -> Unit? = null, onKey: (KeyEvent) -> Unit): KeyHandler","description":"com.github.panpf.zoomimage.compose.util.matcherKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/matcher-key-handler.html","searchKeys":["matcherKeyHandler","fun matcherKeyHandler(keyMatchers: List<KeyMatcher>, onCanceled: (KeyEvent) -> Unit? = null, onKey: (KeyEvent) -> Unit): KeyHandler","com.github.panpf.zoomimage.compose.util.matcherKeyHandler"]},{"name":"fun rememberSubsamplingState(zoomableState: ZoomableState): SubsamplingState","description":"com.github.panpf.zoomimage.compose.subsampling.rememberSubsamplingState","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/remember-subsampling-state.html","searchKeys":["rememberSubsamplingState","fun rememberSubsamplingState(zoomableState: ZoomableState): SubsamplingState","com.github.panpf.zoomimage.compose.subsampling.rememberSubsamplingState"]},{"name":"fun rememberZoomImageLogger(tag: String = \"ZoomImage\", level: Logger.Level? = null, pipeline: Logger.Pipeline? = null): Logger","description":"com.github.panpf.zoomimage.compose.rememberZoomImageLogger","location":"zoomimage-compose/com.github.panpf.zoomimage.compose/remember-zoom-image-logger.html","searchKeys":["rememberZoomImageLogger","fun rememberZoomImageLogger(tag: String = \"ZoomImage\", level: Logger.Level? = null, pipeline: Logger.Pipeline? = null): Logger","com.github.panpf.zoomimage.compose.rememberZoomImageLogger"]},{"name":"fun rememberZoomState(logLevel: Logger.Level? = null): ZoomState","description":"com.github.panpf.zoomimage.compose.rememberZoomState","location":"zoomimage-compose/com.github.panpf.zoomimage.compose/remember-zoom-state.html","searchKeys":["rememberZoomState","fun rememberZoomState(logLevel: Logger.Level? = null): ZoomState","com.github.panpf.zoomimage.compose.rememberZoomState"]},{"name":"fun rememberZoomableState(logger: Logger = rememberZoomImageLogger()): ZoomableState","description":"com.github.panpf.zoomimage.compose.zoom.rememberZoomableState","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/remember-zoomable-state.html","searchKeys":["rememberZoomableState","fun rememberZoomableState(logger: Logger = rememberZoomImageLogger()): ZoomableState","com.github.panpf.zoomimage.compose.zoom.rememberZoomableState"]},{"name":"fun setImage(imageSource: ImageSource.Factory?, imageInfo: ImageInfo? = null): Boolean","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.setImage","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/set-image.html","searchKeys":["setImage","fun setImage(imageSource: ImageSource.Factory?, imageInfo: ImageInfo? = null): Boolean","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.setImage"]},{"name":"fun setImage(imageSource: ImageSource?, imageInfo: ImageInfo? = null): Boolean","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.setImage","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/set-image.html","searchKeys":["setImage","fun setImage(imageSource: ImageSource?, imageInfo: ImageInfo? = null): Boolean","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.setImage"]},{"name":"fun setImage(subsamplingImage: SubsamplingImage?): Boolean","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.setImage","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/set-image.html","searchKeys":["setImage","fun setImage(subsamplingImage: SubsamplingImage?): Boolean","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.setImage"]},{"name":"fun setImageSource(imageSource1: ImageSource.Factory?): Boolean","description":"com.github.panpf.zoomimage.compose.ZoomState.setImageSource","location":"zoomimage-compose/com.github.panpf.zoomimage.compose/-zoom-state/set-image-source.html","searchKeys":["setImageSource","fun setImageSource(imageSource1: ImageSource.Factory?): Boolean","com.github.panpf.zoomimage.compose.ZoomState.setImageSource"]},{"name":"fun setImageSource(imageSource: ImageSource.Factory?): Boolean","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.setImageSource","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/set-image-source.html","searchKeys":["setImageSource","fun setImageSource(imageSource: ImageSource.Factory?): Boolean","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.setImageSource"]},{"name":"fun setImageSource(imageSource: ImageSource?): Boolean","description":"com.github.panpf.zoomimage.compose.ZoomState.setImageSource","location":"zoomimage-compose/com.github.panpf.zoomimage.compose/-zoom-state/set-image-source.html","searchKeys":["setImageSource","fun setImageSource(imageSource: ImageSource?): Boolean","com.github.panpf.zoomimage.compose.ZoomState.setImageSource"]},{"name":"fun setImageSource(imageSource: ImageSource?): Boolean","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.setImageSource","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/set-image-source.html","searchKeys":["setImageSource","fun setImageSource(imageSource: ImageSource?): Boolean","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.setImageSource"]},{"name":"fun setSubsamplingImage(imageSource1: ImageSource.Factory?, imageInfo: ImageInfo? = null): Boolean","description":"com.github.panpf.zoomimage.compose.ZoomState.setSubsamplingImage","location":"zoomimage-compose/com.github.panpf.zoomimage.compose/-zoom-state/set-subsampling-image.html","searchKeys":["setSubsamplingImage","fun setSubsamplingImage(imageSource1: ImageSource.Factory?, imageInfo: ImageInfo? = null): Boolean","com.github.panpf.zoomimage.compose.ZoomState.setSubsamplingImage"]},{"name":"fun setSubsamplingImage(imageSource: ImageSource?, imageInfo: ImageInfo? = null): Boolean","description":"com.github.panpf.zoomimage.compose.ZoomState.setSubsamplingImage","location":"zoomimage-compose/com.github.panpf.zoomimage.compose/-zoom-state/set-subsampling-image.html","searchKeys":["setSubsamplingImage","fun setSubsamplingImage(imageSource: ImageSource?, imageInfo: ImageInfo? = null): Boolean","com.github.panpf.zoomimage.compose.ZoomState.setSubsamplingImage"]},{"name":"fun setSubsamplingImage(subsamplingImage: SubsamplingImage?): Boolean","description":"com.github.panpf.zoomimage.compose.ZoomState.setSubsamplingImage","location":"zoomimage-compose/com.github.panpf.zoomimage.compose/-zoom-state/set-subsampling-image.html","searchKeys":["setSubsamplingImage","fun setSubsamplingImage(subsamplingImage: SubsamplingImage?): Boolean","com.github.panpf.zoomimage.compose.ZoomState.setSubsamplingImage"]},{"name":"fun touchPointToContentPoint(touchPoint: Offset): IntOffset","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.touchPointToContentPoint","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/touch-point-to-content-point.html","searchKeys":["touchPointToContentPoint","fun touchPointToContentPoint(touchPoint: Offset): IntOffset","com.github.panpf.zoomimage.compose.zoom.ZoomableState.touchPointToContentPoint"]},{"name":"fun touchPointToContentPointF(touchPoint: Offset): Offset","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.touchPointToContentPointF","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/touch-point-to-content-point-f.html","searchKeys":["touchPointToContentPointF","fun touchPointToContentPointF(touchPoint: Offset): Offset","com.github.panpf.zoomimage.compose.zoom.ZoomableState.touchPointToContentPointF"]},{"name":"fun valueOf(value: String): AssistKey","description":"com.github.panpf.zoomimage.compose.util.AssistKey.valueOf","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-assist-key/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AssistKey","com.github.panpf.zoomimage.compose.util.AssistKey.valueOf"]},{"name":"fun valueOf(value: String): MoveArrow","description":"com.github.panpf.zoomimage.compose.zoom.MoveArrow.valueOf","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-arrow/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MoveArrow","com.github.panpf.zoomimage.compose.zoom.MoveArrow.valueOf"]},{"name":"fun values(): Array<AssistKey>","description":"com.github.panpf.zoomimage.compose.util.AssistKey.values","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-assist-key/values.html","searchKeys":["values","fun values(): Array<AssistKey>","com.github.panpf.zoomimage.compose.util.AssistKey.values"]},{"name":"fun values(): Array<MoveArrow>","description":"com.github.panpf.zoomimage.compose.zoom.MoveArrow.values","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-arrow/values.html","searchKeys":["values","fun values(): Array<MoveArrow>","com.github.panpf.zoomimage.compose.zoom.MoveArrow.values"]},{"name":"interface KeyHandler","description":"com.github.panpf.zoomimage.compose.util.KeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-key-handler/index.html","searchKeys":["KeyHandler","interface KeyHandler","com.github.panpf.zoomimage.compose.util.KeyHandler"]},{"name":"interface ZoomKeyHandler","description":"com.github.panpf.zoomimage.compose.zoom.internal.ZoomKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-zoom-key-handler/index.html","searchKeys":["ZoomKeyHandler","interface ZoomKeyHandler","com.github.panpf.zoomimage.compose.zoom.internal.ZoomKeyHandler"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec.Companion","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scroll-bar-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.compose.zoom.Transform.Companion","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.compose.zoom.Transform.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.Companion","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoom-animation-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.Companion"]},{"name":"object Companion","description":"com.github.panpf.zoomimage.zoom.MouseWheelScaleCalculator.Companion","location":"zoomimage-compose/com.github.panpf.zoomimage.zoom/-mouse-wheel-scale-calculator/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.zoomimage.zoom.MouseWheelScaleCalculator.Companion"]},{"name":"open class MoveKeyHandler(val keyMatchers: ImmutableList<KeyMatcher>, val moveArrow: MoveArrow, val shortPressStepWithContainerPercentage: Float = 0.33f, val longPressStepWithContainerPercentage: Float = 0.075f, val longPressAccelerateBase: Float = 0.5f, val longPressAccelerateInterval: Int = 500) : StepMatcherZoomKeyHandler","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/index.html","searchKeys":["MoveKeyHandler","open class MoveKeyHandler(val keyMatchers: ImmutableList<KeyMatcher>, val moveArrow: MoveArrow, val shortPressStepWithContainerPercentage: Float = 0.33f, val longPressStepWithContainerPercentage: Float = 0.075f, val longPressAccelerateBase: Float = 0.5f, val longPressAccelerateInterval: Int = 500) : StepMatcherZoomKeyHandler","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler"]},{"name":"open class ScaleKeyHandler(val keyMatchers: ImmutableList<KeyMatcher>, val scaleIn: Boolean, val shortPressStepScaleFactor: Float = 2.0f, val longPressStep: Float = 0.25f, val longPressAccelerateBase: Float = 0.5f, val longPressAccelerateInterval: Int = 500) : StepMatcherZoomKeyHandler","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/index.html","searchKeys":["ScaleKeyHandler","open class ScaleKeyHandler(val keyMatchers: ImmutableList<KeyMatcher>, val scaleIn: Boolean, val shortPressStepScaleFactor: Float = 2.0f, val longPressStep: Float = 0.25f, val longPressAccelerateBase: Float = 0.5f, val longPressAccelerateInterval: Int = 500) : StepMatcherZoomKeyHandler","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler"]},{"name":"open class ZoomState(val logger: Logger, val zoomable: ZoomableState, val subsampling: SubsamplingState)","description":"com.github.panpf.zoomimage.compose.ZoomState","location":"zoomimage-compose/com.github.panpf.zoomimage.compose/-zoom-state/index.html","searchKeys":["ZoomState","open class ZoomState(val logger: Logger, val zoomable: ZoomableState, val subsampling: SubsamplingState)","com.github.panpf.zoomimage.compose.ZoomState"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.subsampling.ComposeTileImage.equals","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-compose-tile-image/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.subsampling.ComposeTileImage.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.util.KeyMatcher.equals","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-key-matcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.util.KeyMatcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.equals","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.equals","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.equals"]},{"name":"open override fun calculateLongPressAddValue(zoomableState: ZoomableState, lastElapsedTime: Long?, elapsedTime: Long): Float","description":"com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.calculateLongPressAddValue","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-step-matcher-zoom-key-handler/calculate-long-press-add-value.html","searchKeys":["calculateLongPressAddValue","open override fun calculateLongPressAddValue(zoomableState: ZoomableState, lastElapsedTime: Long?, elapsedTime: Long): Float","com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.calculateLongPressAddValue"]},{"name":"open override fun calculateScale(currentScale: Float, scrollDelta: Float): Float","description":"com.github.panpf.zoomimage.zoom.DefaultMouseWheelScaleCalculator.calculateScale","location":"zoomimage-compose/com.github.panpf.zoomimage.zoom/-default-mouse-wheel-scale-calculator/calculate-scale.html","searchKeys":["calculateScale","open override fun calculateScale(currentScale: Float, scrollDelta: Float): Float","com.github.panpf.zoomimage.zoom.DefaultMouseWheelScaleCalculator.calculateScale"]},{"name":"open override fun calculateShortPressAddValue(zoomableState: ZoomableState): Float","description":"com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.calculateShortPressAddValue","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-step-matcher-zoom-key-handler/calculate-short-press-add-value.html","searchKeys":["calculateShortPressAddValue","open override fun calculateShortPressAddValue(zoomableState: ZoomableState): Float","com.github.panpf.zoomimage.compose.zoom.StepMatcherZoomKeyHandler.calculateShortPressAddValue"]},{"name":"open override fun getLongPressStep(zoomableState: ZoomableState): Float","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.getLongPressStep","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/get-long-press-step.html","searchKeys":["getLongPressStep","open override fun getLongPressStep(zoomableState: ZoomableState): Float","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.getLongPressStep"]},{"name":"open override fun getLongPressStep(zoomableState: ZoomableState): Float","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.getLongPressStep","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/get-long-press-step.html","searchKeys":["getLongPressStep","open override fun getLongPressStep(zoomableState: ZoomableState): Float","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.getLongPressStep"]},{"name":"open override fun getShortPressStep(zoomableState: ZoomableState): Float","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.getShortPressStep","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/get-short-press-step.html","searchKeys":["getShortPressStep","open override fun getShortPressStep(zoomableState: ZoomableState): Float","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.getShortPressStep"]},{"name":"open override fun getShortPressStep(zoomableState: ZoomableState): Float","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.getShortPressStep","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/get-short-press-step.html","searchKeys":["getShortPressStep","open override fun getShortPressStep(zoomableState: ZoomableState): Float","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.getShortPressStep"]},{"name":"open override fun handle(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.handle","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/handle.html","searchKeys":["handle","open override fun handle(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent): Boolean","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.handle"]},{"name":"open override fun handle(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.handle","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/handle.html","searchKeys":["handle","open override fun handle(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent): Boolean","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.handle"]},{"name":"open override fun handle(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.internal.MatcherZoomKeyHandler.handle","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-matcher-zoom-key-handler/handle.html","searchKeys":["handle","open override fun handle(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent): Boolean","com.github.panpf.zoomimage.compose.zoom.internal.MatcherZoomKeyHandler.handle"]},{"name":"open override fun handle(event: KeyEvent): Boolean","description":"com.github.panpf.zoomimage.compose.util.MatcherKeyHandler.handle","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-matcher-key-handler/handle.html","searchKeys":["handle","open override fun handle(event: KeyEvent): Boolean","com.github.panpf.zoomimage.compose.util.MatcherKeyHandler.handle"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.subsampling.ComposeTileImage.hashCode","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-compose-tile-image/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.compose.subsampling.ComposeTileImage.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.util.KeyMatcher.hashCode","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-key-matcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.compose.util.KeyMatcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.hashCode","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.hashCode","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.hashCode"]},{"name":"open override fun onAbandoned()","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.onAbandoned","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/on-abandoned.html","searchKeys":["onAbandoned","open override fun onAbandoned()","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.onAbandoned"]},{"name":"open override fun onAbandoned()","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.onAbandoned","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/on-abandoned.html","searchKeys":["onAbandoned","open override fun onAbandoned()","com.github.panpf.zoomimage.compose.zoom.ZoomableState.onAbandoned"]},{"name":"open override fun onCanceled(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent)","description":"com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.onCanceled","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-base-matcher-zoom-key-handler/on-canceled.html","searchKeys":["onCanceled","open override fun onCanceled(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent)","com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.onCanceled"]},{"name":"open override fun onForgotten()","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.onForgotten","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/on-forgotten.html","searchKeys":["onForgotten","open override fun onForgotten()","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.onForgotten"]},{"name":"open override fun onForgotten()","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.onForgotten","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/on-forgotten.html","searchKeys":["onForgotten","open override fun onForgotten()","com.github.panpf.zoomimage.compose.zoom.ZoomableState.onForgotten"]},{"name":"open override fun onKey(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent)","description":"com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.onKey","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-base-matcher-zoom-key-handler/on-key.html","searchKeys":["onKey","open override fun onKey(coroutineScope: CoroutineScope, zoomableState: ZoomableState, event: KeyEvent)","com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.onKey"]},{"name":"open override fun onRemembered()","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.onRemembered","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/on-remembered.html","searchKeys":["onRemembered","open override fun onRemembered()","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.onRemembered"]},{"name":"open override fun onRemembered()","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.onRemembered","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/on-remembered.html","searchKeys":["onRemembered","open override fun onRemembered()","com.github.panpf.zoomimage.compose.zoom.ZoomableState.onRemembered"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.subsampling.ComposeTileImage.toString","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-compose-tile-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.compose.subsampling.ComposeTileImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.util.KeyMatcher.toString","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-key-matcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.compose.util.KeyMatcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.toString","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.toString","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.zoom.Transform.toString","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.compose.zoom.Transform.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.toString","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.compose.zoom.ZoomableState.toString"]},{"name":"open override val durationMillis: Int","description":"com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.durationMillis","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoom-animation-spec/duration-millis.html","searchKeys":["durationMillis","open override val durationMillis: Int","com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.durationMillis"]},{"name":"open override val keyMatchers: ImmutableList<KeyMatcher>","description":"com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.keyMatchers","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-base-matcher-zoom-key-handler/key-matchers.html","searchKeys":["keyMatchers","open override val keyMatchers: ImmutableList<KeyMatcher>","com.github.panpf.zoomimage.compose.zoom.BaseMatcherZoomKeyHandler.keyMatchers"]},{"name":"open override val keyMatchers: ImmutableList<KeyMatcher>","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.keyMatchers","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/key-matchers.html","searchKeys":["keyMatchers","open override val keyMatchers: ImmutableList<KeyMatcher>","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.keyMatchers"]},{"name":"open override val keyMatchers: ImmutableList<KeyMatcher>","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.keyMatchers","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/key-matchers.html","searchKeys":["keyMatchers","open override val keyMatchers: ImmutableList<KeyMatcher>","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.keyMatchers"]},{"name":"open override val longPressAccelerateBase: Float = 0.5f","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.longPressAccelerateBase","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/long-press-accelerate-base.html","searchKeys":["longPressAccelerateBase","open override val longPressAccelerateBase: Float = 0.5f","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.longPressAccelerateBase"]},{"name":"open override val longPressAccelerateBase: Float = 0.5f","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.longPressAccelerateBase","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/long-press-accelerate-base.html","searchKeys":["longPressAccelerateBase","open override val longPressAccelerateBase: Float = 0.5f","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.longPressAccelerateBase"]},{"name":"open override val longPressAccelerateInterval: Int = 500","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.longPressAccelerateInterval","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/long-press-accelerate-interval.html","searchKeys":["longPressAccelerateInterval","open override val longPressAccelerateInterval: Int = 500","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.longPressAccelerateInterval"]},{"name":"open override val longPressAccelerateInterval: Int = 500","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.longPressAccelerateInterval","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/long-press-accelerate-interval.html","searchKeys":["longPressAccelerateInterval","open override val longPressAccelerateInterval: Int = 500","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.longPressAccelerateInterval"]},{"name":"open suspend override fun convert(tileImage: TileImage): TileImage","description":"com.github.panpf.zoomimage.compose.subsampling.ComposeTileImageConvertor.convert","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-compose-tile-image-convertor/convert.html","searchKeys":["convert","open suspend override fun convert(tileImage: TileImage): TileImage","com.github.panpf.zoomimage.compose.subsampling.ComposeTileImageConvertor.convert"]},{"name":"open suspend override fun startAnimation(animationSpec: BaseZoomAnimationSpec?, onProgress: (progress: Float) -> Unit, onEnd: () -> Unit)","description":"com.github.panpf.zoomimage.compose.zoom.internal.ComposeAnimationAdapter.startAnimation","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-compose-animation-adapter/start-animation.html","searchKeys":["startAnimation","open suspend override fun startAnimation(animationSpec: BaseZoomAnimationSpec?, onProgress: (progress: Float) -> Unit, onEnd: () -> Unit)","com.github.panpf.zoomimage.compose.zoom.internal.ComposeAnimationAdapter.startAnimation"]},{"name":"open suspend override fun startFlingAnimation(startUserOffset: OffsetCompat, userOffsetBounds: RectCompat?, velocity: OffsetCompat, extras: Map<String, Any>, onUpdateValue: (value: OffsetCompat) -> Boolean, onEnd: () -> Unit)","description":"com.github.panpf.zoomimage.compose.zoom.internal.ComposeAnimationAdapter.startFlingAnimation","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-compose-animation-adapter/start-fling-animation.html","searchKeys":["startFlingAnimation","open suspend override fun startFlingAnimation(startUserOffset: OffsetCompat, userOffsetBounds: RectCompat?, velocity: OffsetCompat, extras: Map<String, Any>, onUpdateValue: (value: OffsetCompat) -> Boolean, onEnd: () -> Unit)","com.github.panpf.zoomimage.compose.zoom.internal.ComposeAnimationAdapter.startFlingAnimation"]},{"name":"open suspend override fun stopAnimation(): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.internal.ComposeAnimationAdapter.stopAnimation","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-compose-animation-adapter/stop-animation.html","searchKeys":["stopAnimation","open suspend override fun stopAnimation(): Boolean","com.github.panpf.zoomimage.compose.zoom.internal.ComposeAnimationAdapter.stopAnimation"]},{"name":"open suspend override fun stopFlingAnimation(): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.internal.ComposeAnimationAdapter.stopFlingAnimation","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-compose-animation-adapter/stop-fling-animation.html","searchKeys":["stopFlingAnimation","open suspend override fun stopFlingAnimation(): Boolean","com.github.panpf.zoomimage.compose.zoom.internal.ComposeAnimationAdapter.stopFlingAnimation"]},{"name":"open suspend override fun updateValue(zoomableState: ZoomableState, animationSpec: ZoomAnimationSpec?, add: Float)","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.updateValue","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/update-value.html","searchKeys":["updateValue","open suspend override fun updateValue(zoomableState: ZoomableState, animationSpec: ZoomAnimationSpec?, add: Float)","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.updateValue"]},{"name":"open suspend override fun updateValue(zoomableState: ZoomableState, animationSpec: ZoomAnimationSpec?, add: Float)","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.updateValue","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/update-value.html","searchKeys":["updateValue","open suspend override fun updateValue(zoomableState: ZoomableState, animationSpec: ZoomAnimationSpec?, add: Float)","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.updateValue"]},{"name":"open val keyMatchers: List<KeyMatcher>","description":"com.github.panpf.zoomimage.compose.util.MatcherKeyHandler.keyMatchers","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-matcher-key-handler/key-matchers.html","searchKeys":["keyMatchers","open val keyMatchers: List<KeyMatcher>","com.github.panpf.zoomimage.compose.util.MatcherKeyHandler.keyMatchers"]},{"name":"open val keyMatchers: List<KeyMatcher>","description":"com.github.panpf.zoomimage.compose.zoom.internal.MatcherZoomKeyHandler.keyMatchers","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom.internal/-matcher-zoom-key-handler/key-matchers.html","searchKeys":["keyMatchers","open val keyMatchers: List<KeyMatcher>","com.github.panpf.zoomimage.compose.zoom.internal.MatcherZoomKeyHandler.keyMatchers"]},{"name":"operator fun IntSize.minus(other: IntSize): IntSize","description":"com.github.panpf.zoomimage.compose.util.minus","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/minus.html","searchKeys":["minus","operator fun IntSize.minus(other: IntSize): IntSize","com.github.panpf.zoomimage.compose.util.minus"]},{"name":"operator fun IntSize.plus(other: IntSize): IntSize","description":"com.github.panpf.zoomimage.compose.util.plus","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/plus.html","searchKeys":["plus","operator fun IntSize.plus(other: IntSize): IntSize","com.github.panpf.zoomimage.compose.util.plus"]},{"name":"operator fun Size.minus(other: Size): Size","description":"com.github.panpf.zoomimage.compose.util.minus","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/minus.html","searchKeys":["minus","operator fun Size.minus(other: Size): Size","com.github.panpf.zoomimage.compose.util.minus"]},{"name":"operator fun Size.plus(other: Size): Size","description":"com.github.panpf.zoomimage.compose.util.plus","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/plus.html","searchKeys":["plus","operator fun Size.plus(other: Size): Size","com.github.panpf.zoomimage.compose.util.plus"]},{"name":"operator fun Transform.div(scaleFactor: ScaleFactor): Transform","description":"com.github.panpf.zoomimage.compose.zoom.div","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/div.html","searchKeys":["div","operator fun Transform.div(scaleFactor: ScaleFactor): Transform","com.github.panpf.zoomimage.compose.zoom.div"]},{"name":"operator fun Transform.minus(other: Transform): Transform","description":"com.github.panpf.zoomimage.compose.zoom.minus","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/minus.html","searchKeys":["minus","operator fun Transform.minus(other: Transform): Transform","com.github.panpf.zoomimage.compose.zoom.minus"]},{"name":"operator fun Transform.plus(other: Transform): Transform","description":"com.github.panpf.zoomimage.compose.zoom.plus","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/plus.html","searchKeys":["plus","operator fun Transform.plus(other: Transform): Transform","com.github.panpf.zoomimage.compose.zoom.plus"]},{"name":"operator fun Transform.times(scaleFactor: ScaleFactor): Transform","description":"com.github.panpf.zoomimage.compose.zoom.times","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/times.html","searchKeys":["times","operator fun Transform.times(scaleFactor: ScaleFactor): Transform","com.github.panpf.zoomimage.compose.zoom.times"]},{"name":"operator fun plus(assistKey: AssistKey): Array<AssistKey>","description":"com.github.panpf.zoomimage.compose.util.AssistKey.plus","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-assist-key/plus.html","searchKeys":["plus","operator fun plus(assistKey: AssistKey): Array<AssistKey>","com.github.panpf.zoomimage.compose.util.AssistKey.plus"]},{"name":"suspend fun locate(contentPoint: IntOffset, targetScale: Float = transform.scaleX, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.locate","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/locate.html","searchKeys":["locate","suspend fun locate(contentPoint: IntOffset, targetScale: Float = transform.scaleX, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","com.github.panpf.zoomimage.compose.zoom.ZoomableState.locate"]},{"name":"suspend fun locate(contentPoint: Offset, targetScale: Float = transform.scaleX, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.locate","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/locate.html","searchKeys":["locate","suspend fun locate(contentPoint: Offset, targetScale: Float = transform.scaleX, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","com.github.panpf.zoomimage.compose.zoom.ZoomableState.locate"]},{"name":"suspend fun offset(targetOffset: Offset, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.offset","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/offset.html","searchKeys":["offset","suspend fun offset(targetOffset: Offset, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","com.github.panpf.zoomimage.compose.zoom.ZoomableState.offset"]},{"name":"suspend fun offsetBy(addOffset: Offset, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.offsetBy","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/offset-by.html","searchKeys":["offsetBy","suspend fun offsetBy(addOffset: Offset, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null): Boolean","com.github.panpf.zoomimage.compose.zoom.ZoomableState.offsetBy"]},{"name":"suspend fun reset()","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.reset","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/reset.html","searchKeys":["reset","suspend fun reset()","com.github.panpf.zoomimage.compose.zoom.ZoomableState.reset"]},{"name":"suspend fun rotate(targetRotation: Int)","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.rotate","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/rotate.html","searchKeys":["rotate","suspend fun rotate(targetRotation: Int)","com.github.panpf.zoomimage.compose.zoom.ZoomableState.rotate"]},{"name":"suspend fun rotateBy(addRotation: Int)","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.rotateBy","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/rotate-by.html","searchKeys":["rotateBy","suspend fun rotateBy(addRotation: Int)","com.github.panpf.zoomimage.compose.zoom.ZoomableState.rotateBy"]},{"name":"suspend fun scale(targetScale: Float, centroidContentPoint: IntOffset? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: Offset = contentVisibleRectF.center): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.scale","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/scale.html","searchKeys":["scale","suspend fun scale(targetScale: Float, centroidContentPoint: IntOffset? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: Offset = contentVisibleRectF.center): Boolean","com.github.panpf.zoomimage.compose.zoom.ZoomableState.scale"]},{"name":"suspend fun scaleBy(addScale: Float, centroidContentPoint: IntOffset? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: Offset = contentVisibleRectF.center): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.scaleBy","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/scale-by.html","searchKeys":["scaleBy","suspend fun scaleBy(addScale: Float, centroidContentPoint: IntOffset? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: Offset = contentVisibleRectF.center): Boolean","com.github.panpf.zoomimage.compose.zoom.ZoomableState.scaleBy"]},{"name":"suspend fun scaleByPlus(addScale: Float, centroidContentPoint: IntOffset? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: Offset = contentVisibleRectF.center): Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.scaleByPlus","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/scale-by-plus.html","searchKeys":["scaleByPlus","suspend fun scaleByPlus(addScale: Float, centroidContentPoint: IntOffset? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: Offset = contentVisibleRectF.center): Boolean","com.github.panpf.zoomimage.compose.zoom.ZoomableState.scaleByPlus"]},{"name":"suspend fun switchScale(centroidContentPoint: IntOffset? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: Offset = contentVisibleRectF.center): Float?","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.switchScale","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/switch-scale.html","searchKeys":["switchScale","suspend fun switchScale(centroidContentPoint: IntOffset? = null, animated: Boolean = false, animationSpec: ZoomAnimationSpec? = null, centroidContentPointF: Offset = contentVisibleRectF.center): Float?","com.github.panpf.zoomimage.compose.zoom.ZoomableState.switchScale"]},{"name":"val DEFAULT_DURATION_MILLIS: Int","description":"com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.Companion.DEFAULT_DURATION_MILLIS","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoom-animation-spec/-companion/-d-e-f-a-u-l-t_-d-u-r-a-t-i-o-n_-m-i-l-l-i-s.html","searchKeys":["DEFAULT_DURATION_MILLIS","val DEFAULT_DURATION_MILLIS: Int","com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.Companion.DEFAULT_DURATION_MILLIS"]},{"name":"val Default: MouseWheelScaleCalculator","description":"com.github.panpf.zoomimage.zoom.MouseWheelScaleCalculator.Companion.Default","location":"zoomimage-compose/com.github.panpf.zoomimage.zoom/-mouse-wheel-scale-calculator/-companion/-default.html","searchKeys":["Default","val Default: MouseWheelScaleCalculator","com.github.panpf.zoomimage.zoom.MouseWheelScaleCalculator.Companion.Default"]},{"name":"val Default: ScrollBarSpec","description":"com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec.Companion.Default","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scroll-bar-spec/-companion/-default.html","searchKeys":["Default","val Default: ScrollBarSpec","com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec.Companion.Default"]},{"name":"val Default: ZoomAnimationSpec","description":"com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.Companion.Default","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoom-animation-spec/-companion/-default.html","searchKeys":["Default","val Default: ZoomAnimationSpec","com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.Companion.Default"]},{"name":"val DefaultMoveDownKeyMatchers: ImmutableList<KeyMatcher>","description":"com.github.panpf.zoomimage.compose.zoom.DefaultMoveDownKeyMatchers","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-default-move-down-key-matchers.html","searchKeys":["DefaultMoveDownKeyMatchers","val DefaultMoveDownKeyMatchers: ImmutableList<KeyMatcher>","com.github.panpf.zoomimage.compose.zoom.DefaultMoveDownKeyMatchers"]},{"name":"val DefaultMoveLeftKeyMatchers: ImmutableList<KeyMatcher>","description":"com.github.panpf.zoomimage.compose.zoom.DefaultMoveLeftKeyMatchers","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-default-move-left-key-matchers.html","searchKeys":["DefaultMoveLeftKeyMatchers","val DefaultMoveLeftKeyMatchers: ImmutableList<KeyMatcher>","com.github.panpf.zoomimage.compose.zoom.DefaultMoveLeftKeyMatchers"]},{"name":"val DefaultMoveRightKeyMatchers: ImmutableList<KeyMatcher>","description":"com.github.panpf.zoomimage.compose.zoom.DefaultMoveRightKeyMatchers","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-default-move-right-key-matchers.html","searchKeys":["DefaultMoveRightKeyMatchers","val DefaultMoveRightKeyMatchers: ImmutableList<KeyMatcher>","com.github.panpf.zoomimage.compose.zoom.DefaultMoveRightKeyMatchers"]},{"name":"val DefaultMoveUpKeyMatchers: ImmutableList<KeyMatcher>","description":"com.github.panpf.zoomimage.compose.zoom.DefaultMoveUpKeyMatchers","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-default-move-up-key-matchers.html","searchKeys":["DefaultMoveUpKeyMatchers","val DefaultMoveUpKeyMatchers: ImmutableList<KeyMatcher>","com.github.panpf.zoomimage.compose.zoom.DefaultMoveUpKeyMatchers"]},{"name":"val DefaultScaleInKeyMatchers: ImmutableList<KeyMatcher>","description":"com.github.panpf.zoomimage.compose.zoom.DefaultScaleInKeyMatchers","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-default-scale-in-key-matchers.html","searchKeys":["DefaultScaleInKeyMatchers","val DefaultScaleInKeyMatchers: ImmutableList<KeyMatcher>","com.github.panpf.zoomimage.compose.zoom.DefaultScaleInKeyMatchers"]},{"name":"val DefaultScaleOutKeyMatchers: ImmutableList<KeyMatcher>","description":"com.github.panpf.zoomimage.compose.zoom.DefaultScaleOutKeyMatchers","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-default-scale-out-key-matchers.html","searchKeys":["DefaultScaleOutKeyMatchers","val DefaultScaleOutKeyMatchers: ImmutableList<KeyMatcher>","com.github.panpf.zoomimage.compose.zoom.DefaultScaleOutKeyMatchers"]},{"name":"val DefaultZoomKeyHandlers: ImmutableList<StepMatcherZoomKeyHandler>","description":"com.github.panpf.zoomimage.compose.zoom.DefaultZoomKeyHandlers","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-default-zoom-key-handlers.html","searchKeys":["DefaultZoomKeyHandlers","val DefaultZoomKeyHandlers: ImmutableList<StepMatcherZoomKeyHandler>","com.github.panpf.zoomimage.compose.zoom.DefaultZoomKeyHandlers"]},{"name":"val None: ZoomAnimationSpec","description":"com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.Companion.None","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoom-animation-spec/-companion/-none.html","searchKeys":["None","val None: ZoomAnimationSpec","com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.Companion.None"]},{"name":"val Origin: Transform","description":"com.github.panpf.zoomimage.compose.zoom.Transform.Companion.Origin","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/-companion/-origin.html","searchKeys":["Origin","val Origin: Transform","com.github.panpf.zoomimage.compose.zoom.Transform.Companion.Origin"]},{"name":"val assistKeys: Array<AssistKey>? = null","description":"com.github.panpf.zoomimage.compose.util.KeyMatcher.assistKeys","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-key-matcher/assist-keys.html","searchKeys":["assistKeys","val assistKeys: Array<AssistKey>? = null","com.github.panpf.zoomimage.compose.util.KeyMatcher.assistKeys"]},{"name":"val bitmap: ImageBitmap","description":"com.github.panpf.zoomimage.compose.subsampling.ComposeTileImage.bitmap","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-compose-tile-image/bitmap.html","searchKeys":["bitmap","val bitmap: ImageBitmap","com.github.panpf.zoomimage.compose.subsampling.ComposeTileImage.bitmap"]},{"name":"val color: Color","description":"com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec.color","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scroll-bar-spec/color.html","searchKeys":["color","val color: Color","com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec.color"]},{"name":"val easing: Easing","description":"com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.easing","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoom-animation-spec/easing.html","searchKeys":["easing","val easing: Easing","com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.easing"]},{"name":"val entries: EnumEntries<AssistKey>","description":"com.github.panpf.zoomimage.compose.util.AssistKey.entries","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-assist-key/entries.html","searchKeys":["entries","val entries: EnumEntries<AssistKey>","com.github.panpf.zoomimage.compose.util.AssistKey.entries"]},{"name":"val entries: EnumEntries<MoveArrow>","description":"com.github.panpf.zoomimage.compose.zoom.MoveArrow.entries","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-arrow/entries.html","searchKeys":["entries","val entries: EnumEntries<MoveArrow>","com.github.panpf.zoomimage.compose.zoom.MoveArrow.entries"]},{"name":"val initialVelocity: Float = 0.0f","description":"com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.initialVelocity","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoom-animation-spec/initial-velocity.html","searchKeys":["initialVelocity","val initialVelocity: Float = 0.0f","com.github.panpf.zoomimage.compose.zoom.ZoomAnimationSpec.initialVelocity"]},{"name":"val key: Key","description":"com.github.panpf.zoomimage.compose.util.KeyMatcher.key","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-key-matcher/key.html","searchKeys":["key","val key: Key","com.github.panpf.zoomimage.compose.util.KeyMatcher.key"]},{"name":"val layoutDirection: LayoutDirection","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.layoutDirection","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/layout-direction.html","searchKeys":["layoutDirection","val layoutDirection: LayoutDirection","com.github.panpf.zoomimage.compose.zoom.ZoomableState.layoutDirection"]},{"name":"val lifecycle: Lifecycle","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.lifecycle","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/lifecycle.html","searchKeys":["lifecycle","val lifecycle: Lifecycle","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.lifecycle"]},{"name":"val logger: Logger","description":"com.github.panpf.zoomimage.compose.ZoomState.logger","location":"zoomimage-compose/com.github.panpf.zoomimage.compose/-zoom-state/logger.html","searchKeys":["logger","val logger: Logger","com.github.panpf.zoomimage.compose.ZoomState.logger"]},{"name":"val logger: Logger","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.logger","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/logger.html","searchKeys":["logger","val logger: Logger","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.logger"]},{"name":"val logger: Logger","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.logger","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/logger.html","searchKeys":["logger","val logger: Logger","com.github.panpf.zoomimage.compose.zoom.ZoomableState.logger"]},{"name":"val longPressStep: Float = 0.25f","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.longPressStep","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/long-press-step.html","searchKeys":["longPressStep","val longPressStep: Float = 0.25f","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.longPressStep"]},{"name":"val longPressStepWithContainerPercentage: Float = 0.075f","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.longPressStepWithContainerPercentage","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/long-press-step-with-container-percentage.html","searchKeys":["longPressStepWithContainerPercentage","val longPressStepWithContainerPercentage: Float = 0.075f","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.longPressStepWithContainerPercentage"]},{"name":"val margin: Dp","description":"com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec.margin","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scroll-bar-spec/margin.html","searchKeys":["margin","val margin: Dp","com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec.margin"]},{"name":"val moveArrow: MoveArrow","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.moveArrow","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/move-arrow.html","searchKeys":["moveArrow","val moveArrow: MoveArrow","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.moveArrow"]},{"name":"val offset: Offset","description":"com.github.panpf.zoomimage.compose.zoom.Transform.offset","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/offset.html","searchKeys":["offset","val offset: Offset","com.github.panpf.zoomimage.compose.zoom.Transform.offset"]},{"name":"val offsetX: Float","description":"com.github.panpf.zoomimage.compose.zoom.Transform.offsetX","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/offset-x.html","searchKeys":["offsetX","val offsetX: Float","com.github.panpf.zoomimage.compose.zoom.Transform.offsetX"]},{"name":"val offsetY: Float","description":"com.github.panpf.zoomimage.compose.zoom.Transform.offsetY","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/offset-y.html","searchKeys":["offsetY","val offsetY: Float","com.github.panpf.zoomimage.compose.zoom.Transform.offsetY"]},{"name":"val rotation: Float = 0.0f","description":"com.github.panpf.zoomimage.compose.zoom.Transform.rotation","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/rotation.html","searchKeys":["rotation","val rotation: Float = 0.0f","com.github.panpf.zoomimage.compose.zoom.Transform.rotation"]},{"name":"val rotationOrigin: TransformOrigin","description":"com.github.panpf.zoomimage.compose.zoom.Transform.rotationOrigin","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/rotation-origin.html","searchKeys":["rotationOrigin","val rotationOrigin: TransformOrigin","com.github.panpf.zoomimage.compose.zoom.Transform.rotationOrigin"]},{"name":"val rotationOriginX: Float","description":"com.github.panpf.zoomimage.compose.zoom.Transform.rotationOriginX","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/rotation-origin-x.html","searchKeys":["rotationOriginX","val rotationOriginX: Float","com.github.panpf.zoomimage.compose.zoom.Transform.rotationOriginX"]},{"name":"val rotationOriginY: Float","description":"com.github.panpf.zoomimage.compose.zoom.Transform.rotationOriginY","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/rotation-origin-y.html","searchKeys":["rotationOriginY","val rotationOriginY: Float","com.github.panpf.zoomimage.compose.zoom.Transform.rotationOriginY"]},{"name":"val scale: ScaleFactor","description":"com.github.panpf.zoomimage.compose.zoom.Transform.scale","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/scale.html","searchKeys":["scale","val scale: ScaleFactor","com.github.panpf.zoomimage.compose.zoom.Transform.scale"]},{"name":"val scaleIn: Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.scaleIn","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/scale-in.html","searchKeys":["scaleIn","val scaleIn: Boolean","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.scaleIn"]},{"name":"val scaleOrigin: TransformOrigin","description":"com.github.panpf.zoomimage.compose.zoom.Transform.scaleOrigin","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/scale-origin.html","searchKeys":["scaleOrigin","val scaleOrigin: TransformOrigin","com.github.panpf.zoomimage.compose.zoom.Transform.scaleOrigin"]},{"name":"val scaleOriginX: Float","description":"com.github.panpf.zoomimage.compose.zoom.Transform.scaleOriginX","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/scale-origin-x.html","searchKeys":["scaleOriginX","val scaleOriginX: Float","com.github.panpf.zoomimage.compose.zoom.Transform.scaleOriginX"]},{"name":"val scaleOriginY: Float","description":"com.github.panpf.zoomimage.compose.zoom.Transform.scaleOriginY","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/scale-origin-y.html","searchKeys":["scaleOriginY","val scaleOriginY: Float","com.github.panpf.zoomimage.compose.zoom.Transform.scaleOriginY"]},{"name":"val scaleX: Float","description":"com.github.panpf.zoomimage.compose.zoom.Transform.scaleX","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/scale-x.html","searchKeys":["scaleX","val scaleX: Float","com.github.panpf.zoomimage.compose.zoom.Transform.scaleX"]},{"name":"val scaleY: Float","description":"com.github.panpf.zoomimage.compose.zoom.Transform.scaleY","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-transform/scale-y.html","searchKeys":["scaleY","val scaleY: Float","com.github.panpf.zoomimage.compose.zoom.Transform.scaleY"]},{"name":"val shortPressStepScaleFactor: Float = 2.0f","description":"com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.shortPressStepScaleFactor","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scale-key-handler/short-press-step-scale-factor.html","searchKeys":["shortPressStepScaleFactor","val shortPressStepScaleFactor: Float = 2.0f","com.github.panpf.zoomimage.compose.zoom.ScaleKeyHandler.shortPressStepScaleFactor"]},{"name":"val shortPressStepWithContainerPercentage: Float = 0.33f","description":"com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.shortPressStepWithContainerPercentage","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-move-key-handler/short-press-step-with-container-percentage.html","searchKeys":["shortPressStepWithContainerPercentage","val shortPressStepWithContainerPercentage: Float = 0.33f","com.github.panpf.zoomimage.compose.zoom.MoveKeyHandler.shortPressStepWithContainerPercentage"]},{"name":"val size: Dp","description":"com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec.size","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-scroll-bar-spec/size.html","searchKeys":["size","val size: Dp","com.github.panpf.zoomimage.compose.zoom.ScrollBarSpec.size"]},{"name":"val stepScaleFactor: Float = 0.3f","description":"com.github.panpf.zoomimage.zoom.DefaultMouseWheelScaleCalculator.stepScaleFactor","location":"zoomimage-compose/com.github.panpf.zoomimage.zoom/-default-mouse-wheel-scale-calculator/step-scale-factor.html","searchKeys":["stepScaleFactor","val stepScaleFactor: Float = 0.3f","com.github.panpf.zoomimage.zoom.DefaultMouseWheelScaleCalculator.stepScaleFactor"]},{"name":"val stepScrollDelta: Float","description":"com.github.panpf.zoomimage.zoom.DefaultMouseWheelScaleCalculator.stepScrollDelta","location":"zoomimage-compose/com.github.panpf.zoomimage.zoom/-default-mouse-wheel-scale-calculator/step-scroll-delta.html","searchKeys":["stepScrollDelta","val stepScrollDelta: Float","com.github.panpf.zoomimage.zoom.DefaultMouseWheelScaleCalculator.stepScrollDelta"]},{"name":"val subsampling: SubsamplingState","description":"com.github.panpf.zoomimage.compose.ZoomState.subsampling","location":"zoomimage-compose/com.github.panpf.zoomimage.compose/-zoom-state/subsampling.html","searchKeys":["subsampling","val subsampling: SubsamplingState","com.github.panpf.zoomimage.compose.ZoomState.subsampling"]},{"name":"val subsamplingImage: SubsamplingImage?","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.subsamplingImage","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/subsampling-image.html","searchKeys":["subsamplingImage","val subsamplingImage: SubsamplingImage?","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.subsamplingImage"]},{"name":"val type: KeyEventType? = null","description":"com.github.panpf.zoomimage.compose.util.KeyMatcher.type","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.util/-key-matcher/type.html","searchKeys":["type","val type: KeyEventType? = null","com.github.panpf.zoomimage.compose.util.KeyMatcher.type"]},{"name":"val zoomable: ZoomableState","description":"com.github.panpf.zoomimage.compose.ZoomState.zoomable","location":"zoomimage-compose/com.github.panpf.zoomimage.compose/-zoom-state/zoomable.html","searchKeys":["zoomable","val zoomable: ZoomableState","com.github.panpf.zoomimage.compose.ZoomState.zoomable"]},{"name":"val zoomableState: ZoomableState","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.zoomableState","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/zoomable-state.html","searchKeys":["zoomableState","val zoomableState: ZoomableState","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.zoomableState"]},{"name":"var alignment: Alignment","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.alignment","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/alignment.html","searchKeys":["alignment","var alignment: Alignment","com.github.panpf.zoomimage.compose.zoom.ZoomableState.alignment"]},{"name":"var animationSpec: ZoomAnimationSpec","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.animationSpec","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/animation-spec.html","searchKeys":["animationSpec","var animationSpec: ZoomAnimationSpec","com.github.panpf.zoomimage.compose.zoom.ZoomableState.animationSpec"]},{"name":"var backgroundTiles: List<TileSnapshot>","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.backgroundTiles","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/background-tiles.html","searchKeys":["backgroundTiles","var backgroundTiles: List<TileSnapshot>","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.backgroundTiles"]},{"name":"var baseTransform: Transform","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.baseTransform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/base-transform.html","searchKeys":["baseTransform","var baseTransform: Transform","com.github.panpf.zoomimage.compose.zoom.ZoomableState.baseTransform"]},{"name":"var containerSize: IntSize","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.containerSize","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/container-size.html","searchKeys":["containerSize","var containerSize: IntSize","com.github.panpf.zoomimage.compose.zoom.ZoomableState.containerSize"]},{"name":"var containerWhitespace: ContainerWhitespace","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.containerWhitespace","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/container-whitespace.html","searchKeys":["containerWhitespace","var containerWhitespace: ContainerWhitespace","com.github.panpf.zoomimage.compose.zoom.ZoomableState.containerWhitespace"]},{"name":"var containerWhitespaceMultiple: Float","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.containerWhitespaceMultiple","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/container-whitespace-multiple.html","searchKeys":["containerWhitespaceMultiple","var containerWhitespaceMultiple: Float","com.github.panpf.zoomimage.compose.zoom.ZoomableState.containerWhitespaceMultiple"]},{"name":"var contentBaseDisplayRect: IntRect","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentBaseDisplayRect","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/content-base-display-rect.html","searchKeys":["contentBaseDisplayRect","var contentBaseDisplayRect: IntRect","com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentBaseDisplayRect"]},{"name":"var contentBaseDisplayRectF: Rect","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentBaseDisplayRectF","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/content-base-display-rect-f.html","searchKeys":["contentBaseDisplayRectF","var contentBaseDisplayRectF: Rect","com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentBaseDisplayRectF"]},{"name":"var contentBaseVisibleRect: IntRect","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentBaseVisibleRect","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/content-base-visible-rect.html","searchKeys":["contentBaseVisibleRect","var contentBaseVisibleRect: IntRect","com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentBaseVisibleRect"]},{"name":"var contentBaseVisibleRectF: Rect","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentBaseVisibleRectF","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/content-base-visible-rect-f.html","searchKeys":["contentBaseVisibleRectF","var contentBaseVisibleRectF: Rect","com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentBaseVisibleRectF"]},{"name":"var contentDisplayRect: IntRect","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentDisplayRect","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/content-display-rect.html","searchKeys":["contentDisplayRect","var contentDisplayRect: IntRect","com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentDisplayRect"]},{"name":"var contentDisplayRectF: Rect","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentDisplayRectF","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/content-display-rect-f.html","searchKeys":["contentDisplayRectF","var contentDisplayRectF: Rect","com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentDisplayRectF"]},{"name":"var contentOriginSize: IntSize","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentOriginSize","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/content-origin-size.html","searchKeys":["contentOriginSize","var contentOriginSize: IntSize","com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentOriginSize"]},{"name":"var contentScale: ContentScale","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentScale","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/content-scale.html","searchKeys":["contentScale","var contentScale: ContentScale","com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentScale"]},{"name":"var contentSize: IntSize","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentSize","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/content-size.html","searchKeys":["contentSize","var contentSize: IntSize","com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentSize"]},{"name":"var contentVisibleRect: IntRect","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentVisibleRect","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/content-visible-rect.html","searchKeys":["contentVisibleRect","var contentVisibleRect: IntRect","com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentVisibleRect"]},{"name":"var contentVisibleRectF: Rect","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentVisibleRectF","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/content-visible-rect-f.html","searchKeys":["contentVisibleRectF","var contentVisibleRectF: Rect","com.github.panpf.zoomimage.compose.zoom.ZoomableState.contentVisibleRectF"]},{"name":"var continuousTransformType: Int","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.continuousTransformType","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/continuous-transform-type.html","searchKeys":["continuousTransformType","var continuousTransformType: Int","com.github.panpf.zoomimage.compose.zoom.ZoomableState.continuousTransformType"]},{"name":"var disabledBackgroundTiles: Boolean","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.disabledBackgroundTiles","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/disabled-background-tiles.html","searchKeys":["disabledBackgroundTiles","var disabledBackgroundTiles: Boolean","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.disabledBackgroundTiles"]},{"name":"var disabledGestureTypes: Int","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.disabledGestureTypes","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/disabled-gesture-types.html","searchKeys":["disabledGestureTypes","var disabledGestureTypes: Int","com.github.panpf.zoomimage.compose.zoom.ZoomableState.disabledGestureTypes"]},{"name":"var disabledTileImageCache: Boolean","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.disabledTileImageCache","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/disabled-tile-image-cache.html","searchKeys":["disabledTileImageCache","var disabledTileImageCache: Boolean","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.disabledTileImageCache"]},{"name":"var foregroundTiles: List<TileSnapshot>","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.foregroundTiles","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/foreground-tiles.html","searchKeys":["foregroundTiles","var foregroundTiles: List<TileSnapshot>","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.foregroundTiles"]},{"name":"var imageInfo: ImageInfo?","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.imageInfo","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/image-info.html","searchKeys":["imageInfo","var imageInfo: ImageInfo?","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.imageInfo"]},{"name":"var imageLoadRect: IntRect","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.imageLoadRect","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/image-load-rect.html","searchKeys":["imageLoadRect","var imageLoadRect: IntRect","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.imageLoadRect"]},{"name":"var keepTransformWhenSameAspectRatioContentSizeChanged: Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.keepTransformWhenSameAspectRatioContentSizeChanged","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/keep-transform-when-same-aspect-ratio-content-size-changed.html","searchKeys":["keepTransformWhenSameAspectRatioContentSizeChanged","var keepTransformWhenSameAspectRatioContentSizeChanged: Boolean","com.github.panpf.zoomimage.compose.zoom.ZoomableState.keepTransformWhenSameAspectRatioContentSizeChanged"]},{"name":"var limitOffsetWithinBaseVisibleRect: Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.limitOffsetWithinBaseVisibleRect","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/limit-offset-within-base-visible-rect.html","searchKeys":["limitOffsetWithinBaseVisibleRect","var limitOffsetWithinBaseVisibleRect: Boolean","com.github.panpf.zoomimage.compose.zoom.ZoomableState.limitOffsetWithinBaseVisibleRect"]},{"name":"var maxScale: Float","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.maxScale","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/max-scale.html","searchKeys":["maxScale","var maxScale: Float","com.github.panpf.zoomimage.compose.zoom.ZoomableState.maxScale"]},{"name":"var mediumScale: Float","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.mediumScale","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/medium-scale.html","searchKeys":["mediumScale","var mediumScale: Float","com.github.panpf.zoomimage.compose.zoom.ZoomableState.mediumScale"]},{"name":"var minScale: Float","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.minScale","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/min-scale.html","searchKeys":["minScale","var minScale: Float","com.github.panpf.zoomimage.compose.zoom.ZoomableState.minScale"]},{"name":"var mouseWheelScaleCalculator: MouseWheelScaleCalculator","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.mouseWheelScaleCalculator","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/mouse-wheel-scale-calculator.html","searchKeys":["mouseWheelScaleCalculator","var mouseWheelScaleCalculator: MouseWheelScaleCalculator","com.github.panpf.zoomimage.compose.zoom.ZoomableState.mouseWheelScaleCalculator"]},{"name":"var mouseWheelScaleScrollDeltaConverter: (Float) -> Float?","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.mouseWheelScaleScrollDeltaConverter","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/mouse-wheel-scale-scroll-delta-converter.html","searchKeys":["mouseWheelScaleScrollDeltaConverter","var mouseWheelScaleScrollDeltaConverter: (Float) -> Float?","com.github.panpf.zoomimage.compose.zoom.ZoomableState.mouseWheelScaleScrollDeltaConverter"]},{"name":"var oneFingerScaleSpec: OneFingerScaleSpec","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.oneFingerScaleSpec","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/one-finger-scale-spec.html","searchKeys":["oneFingerScaleSpec","var oneFingerScaleSpec: OneFingerScaleSpec","com.github.panpf.zoomimage.compose.zoom.ZoomableState.oneFingerScaleSpec"]},{"name":"var pausedContinuousTransformTypes: Int","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.pausedContinuousTransformTypes","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/paused-continuous-transform-types.html","searchKeys":["pausedContinuousTransformTypes","var pausedContinuousTransformTypes: Int","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.pausedContinuousTransformTypes"]},{"name":"var readMode: ReadMode?","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.readMode","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/read-mode.html","searchKeys":["readMode","var readMode: ReadMode?","com.github.panpf.zoomimage.compose.zoom.ZoomableState.readMode"]},{"name":"var ready: Boolean","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.ready","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/ready.html","searchKeys":["ready","var ready: Boolean","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.ready"]},{"name":"var regionDecoders: List<RegionDecoder.Factory>","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.regionDecoders","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/region-decoders.html","searchKeys":["regionDecoders","var regionDecoders: List<RegionDecoder.Factory>","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.regionDecoders"]},{"name":"var reverseMouseWheelScale: Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.reverseMouseWheelScale","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/reverse-mouse-wheel-scale.html","searchKeys":["reverseMouseWheelScale","var reverseMouseWheelScale: Boolean","com.github.panpf.zoomimage.compose.zoom.ZoomableState.reverseMouseWheelScale"]},{"name":"var rubberBandScale: Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.rubberBandScale","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/rubber-band-scale.html","searchKeys":["rubberBandScale","var rubberBandScale: Boolean","com.github.panpf.zoomimage.compose.zoom.ZoomableState.rubberBandScale"]},{"name":"var sampleSize: Int","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.sampleSize","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/sample-size.html","searchKeys":["sampleSize","var sampleSize: Int","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.sampleSize"]},{"name":"var scalesCalculator: ScalesCalculator","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.scalesCalculator","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/scales-calculator.html","searchKeys":["scalesCalculator","var scalesCalculator: ScalesCalculator","com.github.panpf.zoomimage.compose.zoom.ZoomableState.scalesCalculator"]},{"name":"var scrollEdge: ScrollEdge","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.scrollEdge","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/scroll-edge.html","searchKeys":["scrollEdge","var scrollEdge: ScrollEdge","com.github.panpf.zoomimage.compose.zoom.ZoomableState.scrollEdge"]},{"name":"var showTileBounds: Boolean","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.showTileBounds","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/show-tile-bounds.html","searchKeys":["showTileBounds","var showTileBounds: Boolean","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.showTileBounds"]},{"name":"var stopped: Boolean","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.stopped","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/stopped.html","searchKeys":["stopped","var stopped: Boolean","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.stopped"]},{"name":"var threeStepScale: Boolean","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.threeStepScale","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/three-step-scale.html","searchKeys":["threeStepScale","var threeStepScale: Boolean","com.github.panpf.zoomimage.compose.zoom.ZoomableState.threeStepScale"]},{"name":"var tileAnimationSpec: TileAnimationSpec","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.tileAnimationSpec","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/tile-animation-spec.html","searchKeys":["tileAnimationSpec","var tileAnimationSpec: TileAnimationSpec","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.tileAnimationSpec"]},{"name":"var tileGridSizeMap: Map<Int, IntOffset>","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.tileGridSizeMap","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/tile-grid-size-map.html","searchKeys":["tileGridSizeMap","var tileGridSizeMap: Map<Int, IntOffset>","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.tileGridSizeMap"]},{"name":"var tileImageCache: TileImageCache?","description":"com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.tileImageCache","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.subsampling/-subsampling-state/tile-image-cache.html","searchKeys":["tileImageCache","var tileImageCache: TileImageCache?","com.github.panpf.zoomimage.compose.subsampling.SubsamplingState.tileImageCache"]},{"name":"var transform: Transform","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.transform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/transform.html","searchKeys":["transform","var transform: Transform","com.github.panpf.zoomimage.compose.zoom.ZoomableState.transform"]},{"name":"var userOffsetBounds: IntRect","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.userOffsetBounds","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/user-offset-bounds.html","searchKeys":["userOffsetBounds","var userOffsetBounds: IntRect","com.github.panpf.zoomimage.compose.zoom.ZoomableState.userOffsetBounds"]},{"name":"var userOffsetBoundsRect: IntRect","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.userOffsetBoundsRect","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/user-offset-bounds-rect.html","searchKeys":["userOffsetBoundsRect","var userOffsetBoundsRect: IntRect","com.github.panpf.zoomimage.compose.zoom.ZoomableState.userOffsetBoundsRect"]},{"name":"var userOffsetBoundsRectF: Rect","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.userOffsetBoundsRectF","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/user-offset-bounds-rect-f.html","searchKeys":["userOffsetBoundsRectF","var userOffsetBoundsRectF: Rect","com.github.panpf.zoomimage.compose.zoom.ZoomableState.userOffsetBoundsRectF"]},{"name":"var userTransform: Transform","description":"com.github.panpf.zoomimage.compose.zoom.ZoomableState.userTransform","location":"zoomimage-compose/com.github.panpf.zoomimage.compose.zoom/-zoomable-state/user-transform.html","searchKeys":["userTransform","var userTransform: Transform","com.github.panpf.zoomimage.compose.zoom.ZoomableState.userTransform"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.equals","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch/-sketch-compose-subsampling-image-generator/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.equals"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.hashCode","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch/-sketch-compose-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.toString","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch/-sketch-compose-subsampling-image-generator/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.toString"]},{"name":"abstract suspend fun generateImage(sketch: Sketch, result: ImageResult.Success, painter: Painter): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.generateImage","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch/-sketch-compose-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","abstract suspend fun generateImage(sketch: Sketch, result: ImageResult.Success, painter: Painter): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator.generateImage"]},{"name":"class AnimatableSketchComposeSubsamplingImageGenerator : SketchComposeSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch.internal/-animatable-sketch-compose-subsampling-image-generator/index.html","searchKeys":["AnimatableSketchComposeSubsamplingImageGenerator","class AnimatableSketchComposeSubsamplingImageGenerator : SketchComposeSubsamplingImageGenerator","com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator"]},{"name":"class EngineSketchComposeSubsamplingImageGenerator : SketchComposeSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch.internal/-engine-sketch-compose-subsampling-image-generator/index.html","searchKeys":["EngineSketchComposeSubsamplingImageGenerator","class EngineSketchComposeSubsamplingImageGenerator : SketchComposeSubsamplingImageGenerator","com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator"]},{"name":"class SketchZoomState(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<SketchComposeSubsamplingImageGenerator>?) : ZoomState","description":"com.github.panpf.zoomimage.SketchZoomState","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage/-sketch-zoom-state/index.html","searchKeys":["SketchZoomState","class SketchZoomState(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<SketchComposeSubsamplingImageGenerator>?) : ZoomState","com.github.panpf.zoomimage.SketchZoomState"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.AnimatableSketchComposeSubsamplingImageGenerator","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch.internal/-animatable-sketch-compose-subsampling-image-generator/-animatable-sketch-compose-subsampling-image-generator.html","searchKeys":["AnimatableSketchComposeSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.AnimatableSketchComposeSubsamplingImageGenerator"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.EngineSketchComposeSubsamplingImageGenerator","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch.internal/-engine-sketch-compose-subsampling-image-generator/-engine-sketch-compose-subsampling-image-generator.html","searchKeys":["EngineSketchComposeSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.EngineSketchComposeSubsamplingImageGenerator"]},{"name":"constructor(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<SketchComposeSubsamplingImageGenerator>?)","description":"com.github.panpf.zoomimage.SketchZoomState.SketchZoomState","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage/-sketch-zoom-state/-sketch-zoom-state.html","searchKeys":["SketchZoomState","constructor(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<SketchComposeSubsamplingImageGenerator>?)","com.github.panpf.zoomimage.SketchZoomState.SketchZoomState"]},{"name":"fun SketchZoomAsyncImage(request: ImageRequest, contentDescription: String?, sketch: Sketch, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.SketchZoomAsyncImage","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage/-sketch-zoom-async-image.html","searchKeys":["SketchZoomAsyncImage","fun SketchZoomAsyncImage(request: ImageRequest, contentDescription: String?, sketch: Sketch, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.SketchZoomAsyncImage"]},{"name":"fun SketchZoomAsyncImage(uri: String?, contentDescription: String?, sketch: Sketch, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","description":"com.github.panpf.zoomimage.SketchZoomAsyncImage","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage/-sketch-zoom-async-image.html","searchKeys":["SketchZoomAsyncImage","fun SketchZoomAsyncImage(uri: String?, contentDescription: String?, sketch: Sketch, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality, zoomState: SketchZoomState = rememberSketchZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null)","com.github.panpf.zoomimage.SketchZoomAsyncImage"]},{"name":"fun rememberSketchZoomState(subsamplingImageGenerators: ImmutableList<SketchComposeSubsamplingImageGenerator>? = null, logLevel: Logger.Level? = null): SketchZoomState","description":"com.github.panpf.zoomimage.rememberSketchZoomState","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage/remember-sketch-zoom-state.html","searchKeys":["rememberSketchZoomState","fun rememberSketchZoomState(subsamplingImageGenerators: ImmutableList<SketchComposeSubsamplingImageGenerator>? = null, logLevel: Logger.Level? = null): SketchZoomState","com.github.panpf.zoomimage.rememberSketchZoomState"]},{"name":"interface SketchComposeSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch/-sketch-compose-subsampling-image-generator/index.html","searchKeys":["SketchComposeSubsamplingImageGenerator","interface SketchComposeSubsamplingImageGenerator","com.github.panpf.zoomimage.compose.sketch.SketchComposeSubsamplingImageGenerator"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.equals","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch.internal/-animatable-sketch-compose-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.equals","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch.internal/-engine-sketch-compose-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.equals"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.hashCode","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch.internal/-animatable-sketch-compose-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.hashCode","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch.internal/-engine-sketch-compose-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.toString","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch.internal/-animatable-sketch-compose-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.toString","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch.internal/-engine-sketch-compose-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.toString"]},{"name":"open suspend override fun generateImage(sketch: Sketch, result: ImageResult.Success, painter: Painter): SubsamplingImageGenerateResult","description":"com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.generateImage","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch.internal/-engine-sketch-compose-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(sketch: Sketch, result: ImageResult.Success, painter: Painter): SubsamplingImageGenerateResult","com.github.panpf.zoomimage.compose.sketch.internal.EngineSketchComposeSubsamplingImageGenerator.generateImage"]},{"name":"open suspend override fun generateImage(sketch: Sketch, result: ImageResult.Success, painter: Painter): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.generateImage","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage.compose.sketch.internal/-animatable-sketch-compose-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(sketch: Sketch, result: ImageResult.Success, painter: Painter): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.compose.sketch.internal.AnimatableSketchComposeSubsamplingImageGenerator.generateImage"]},{"name":"val subsamplingImageGenerators: List<SketchComposeSubsamplingImageGenerator>","description":"com.github.panpf.zoomimage.SketchZoomState.subsamplingImageGenerators","location":"zoomimage-compose-sketch4-core/com.github.panpf.zoomimage/-sketch-zoom-state/subsampling-image-generators.html","searchKeys":["subsamplingImageGenerators","val subsamplingImageGenerators: List<SketchComposeSubsamplingImageGenerator>","com.github.panpf.zoomimage.SketchZoomState.subsamplingImageGenerators"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.equals","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil/-coil-view-subsampling-image-generator/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.equals"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.hashCode","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil/-coil-view-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.toString","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil/-coil-view-subsampling-image-generator/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.toString"]},{"name":"abstract suspend fun generateImage(context: Context, imageLoader: ImageLoader, result: SuccessResult, drawable: Drawable): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.generateImage","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil/-coil-view-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","abstract suspend fun generateImage(context: Context, imageLoader: ImageLoader, result: SuccessResult, drawable: Drawable): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator.generateImage"]},{"name":"class AnimatableCoilViewSubsamplingImageGenerator : CoilViewSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil.internal/-animatable-coil-view-subsampling-image-generator/index.html","searchKeys":["AnimatableCoilViewSubsamplingImageGenerator","class AnimatableCoilViewSubsamplingImageGenerator : CoilViewSubsamplingImageGenerator","com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator"]},{"name":"class EngineCoilViewSubsamplingImageGenerator : CoilViewSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil.internal/-engine-coil-view-subsampling-image-generator/index.html","searchKeys":["EngineCoilViewSubsamplingImageGenerator","class EngineCoilViewSubsamplingImageGenerator : CoilViewSubsamplingImageGenerator","com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.AnimatableCoilViewSubsamplingImageGenerator","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil.internal/-animatable-coil-view-subsampling-image-generator/-animatable-coil-view-subsampling-image-generator.html","searchKeys":["AnimatableCoilViewSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.AnimatableCoilViewSubsamplingImageGenerator"]},{"name":"constructor()","description":"com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.EngineCoilViewSubsamplingImageGenerator","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil.internal/-engine-coil-view-subsampling-image-generator/-engine-coil-view-subsampling-image-generator.html","searchKeys":["EngineCoilViewSubsamplingImageGenerator","constructor()","com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.EngineCoilViewSubsamplingImageGenerator"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"com.github.panpf.zoomimage.CoilZoomImageView.CoilZoomImageView","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage/-coil-zoom-image-view/-coil-zoom-image-view.html","searchKeys":["CoilZoomImageView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","com.github.panpf.zoomimage.CoilZoomImageView.CoilZoomImageView"]},{"name":"fun setSubsamplingImageGenerators(subsamplingImageGenerators: List<CoilViewSubsamplingImageGenerator>?)","description":"com.github.panpf.zoomimage.CoilZoomImageView.setSubsamplingImageGenerators","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage/-coil-zoom-image-view/set-subsampling-image-generators.html","searchKeys":["setSubsamplingImageGenerators","fun setSubsamplingImageGenerators(subsamplingImageGenerators: List<CoilViewSubsamplingImageGenerator>?)","com.github.panpf.zoomimage.CoilZoomImageView.setSubsamplingImageGenerators"]},{"name":"fun setSubsamplingImageGenerators(vararg subsamplingImageGenerators: CoilViewSubsamplingImageGenerator)","description":"com.github.panpf.zoomimage.CoilZoomImageView.setSubsamplingImageGenerators","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage/-coil-zoom-image-view/set-subsampling-image-generators.html","searchKeys":["setSubsamplingImageGenerators","fun setSubsamplingImageGenerators(vararg subsamplingImageGenerators: CoilViewSubsamplingImageGenerator)","com.github.panpf.zoomimage.CoilZoomImageView.setSubsamplingImageGenerators"]},{"name":"interface CoilViewSubsamplingImageGenerator","description":"com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil/-coil-view-subsampling-image-generator/index.html","searchKeys":["CoilViewSubsamplingImageGenerator","interface CoilViewSubsamplingImageGenerator","com.github.panpf.zoomimage.view.coil.CoilViewSubsamplingImageGenerator"]},{"name":"open class CoilZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : ZoomImageView","description":"com.github.panpf.zoomimage.CoilZoomImageView","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage/-coil-zoom-image-view/index.html","searchKeys":["CoilZoomImageView","open class CoilZoomImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : ZoomImageView","com.github.panpf.zoomimage.CoilZoomImageView"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.equals","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil.internal/-animatable-coil-view-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.equals","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil.internal/-engine-coil-view-subsampling-image-generator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.equals"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.hashCode","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil.internal/-animatable-coil-view-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.hashCode","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil.internal/-engine-coil-view-subsampling-image-generator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.hashCode"]},{"name":"open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","description":"com.github.panpf.zoomimage.CoilZoomImageView.onDrawableChanged","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage/-coil-zoom-image-view/on-drawable-changed.html","searchKeys":["onDrawableChanged","open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","com.github.panpf.zoomimage.CoilZoomImageView.onDrawableChanged"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.toString","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil.internal/-animatable-coil-view-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.toString","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil.internal/-engine-coil-view-subsampling-image-generator/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.toString"]},{"name":"open suspend override fun generateImage(context: Context, imageLoader: ImageLoader, result: SuccessResult, drawable: Drawable): SubsamplingImageGenerateResult","description":"com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.generateImage","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil.internal/-engine-coil-view-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(context: Context, imageLoader: ImageLoader, result: SuccessResult, drawable: Drawable): SubsamplingImageGenerateResult","com.github.panpf.zoomimage.view.coil.internal.EngineCoilViewSubsamplingImageGenerator.generateImage"]},{"name":"open suspend override fun generateImage(context: Context, imageLoader: ImageLoader, result: SuccessResult, drawable: Drawable): SubsamplingImageGenerateResult?","description":"com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.generateImage","location":"zoomimage-view-coil2-core/com.github.panpf.zoomimage.view.coil.internal/-animatable-coil-view-subsampling-image-generator/generate-image.html","searchKeys":["generateImage","open suspend override fun generateImage(context: Context, imageLoader: ImageLoader, result: SuccessResult, drawable: Drawable): SubsamplingImageGenerateResult?","com.github.panpf.zoomimage.view.coil.internal.AnimatableCoilViewSubsamplingImageGenerator.generateImage"]},{"name":"abstract fun build(): Transition","description":"com.github.panpf.zoomimage.compose.glide.Transition.Factory.build","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-transition/-factory/build.html","searchKeys":["build","abstract fun build(): Transition","com.github.panpf.zoomimage.compose.glide.Transition.Factory.build"]},{"name":"abstract operator fun get(index: Int): Pair<DataT, RequestBuilder<Drawable>>","description":"com.github.panpf.zoomimage.compose.glide.GlidePreloadingData.get","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-glide-preloading-data/get.html","searchKeys":["get","abstract operator fun get(index: Int): Pair<DataT, RequestBuilder<Drawable>>","com.github.panpf.zoomimage.compose.glide.GlidePreloadingData.get"]},{"name":"abstract suspend fun stop()","description":"com.github.panpf.zoomimage.compose.glide.Transition.stop","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-transition/stop.html","searchKeys":["stop","abstract suspend fun stop()","com.github.panpf.zoomimage.compose.glide.Transition.stop"]},{"name":"abstract suspend fun transition(invalidate: () -> Unit)","description":"com.github.panpf.zoomimage.compose.glide.Transition.transition","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-transition/transition.html","searchKeys":["transition","abstract suspend fun transition(invalidate: () -> Unit)","com.github.panpf.zoomimage.compose.glide.Transition.transition"]},{"name":"abstract val drawCurrent: DrawPainter","description":"com.github.panpf.zoomimage.compose.glide.Transition.drawCurrent","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-transition/draw-current.html","searchKeys":["drawCurrent","abstract val drawCurrent: DrawPainter","com.github.panpf.zoomimage.compose.glide.Transition.drawCurrent"]},{"name":"abstract val drawPlaceholder: DrawPainter?","description":"com.github.panpf.zoomimage.compose.glide.Transition.drawPlaceholder","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-transition/draw-placeholder.html","searchKeys":["drawPlaceholder","abstract val drawPlaceholder: DrawPainter?","com.github.panpf.zoomimage.compose.glide.Transition.drawPlaceholder"]},{"name":"abstract val painter: Painter","description":"com.github.panpf.zoomimage.compose.glide.GlideSubcompositionScope.painter","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-glide-subcomposition-scope/painter.html","searchKeys":["painter","abstract val painter: Painter","com.github.panpf.zoomimage.compose.glide.GlideSubcompositionScope.painter"]},{"name":"abstract val size: Int","description":"com.github.panpf.zoomimage.compose.glide.GlidePreloadingData.size","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-glide-preloading-data/size.html","searchKeys":["size","abstract val size: Int","com.github.panpf.zoomimage.compose.glide.GlidePreloadingData.size"]},{"name":"abstract val state: RequestState","description":"com.github.panpf.zoomimage.compose.glide.GlideSubcompositionScope.state","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-glide-subcomposition-scope/state.html","searchKeys":["state","abstract val state: RequestState","com.github.panpf.zoomimage.compose.glide.GlideSubcompositionScope.state"]},{"name":"annotation class ExperimentalGlideComposeApi","description":"com.github.panpf.zoomimage.compose.glide.ExperimentalGlideComposeApi","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-experimental-glide-compose-api/index.html","searchKeys":["ExperimentalGlideComposeApi","annotation class ExperimentalGlideComposeApi","com.github.panpf.zoomimage.compose.glide.ExperimentalGlideComposeApi"]},{"name":"class CrossFade(animationSpec: AnimationSpec<Float>) : Transition.Factory","description":"com.github.panpf.zoomimage.compose.glide.CrossFade","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-cross-fade/index.html","searchKeys":["CrossFade","class CrossFade(animationSpec: AnimationSpec<Float>) : Transition.Factory","com.github.panpf.zoomimage.compose.glide.CrossFade"]},{"name":"class GlideZoomState(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<GlideSubsamplingImageGenerator>?) : ZoomState","description":"com.github.panpf.zoomimage.GlideZoomState","location":"zoomimage-compose-glide/com.github.panpf.zoomimage/-glide-zoom-state/index.html","searchKeys":["GlideZoomState","class GlideZoomState(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<GlideSubsamplingImageGenerator>?) : ZoomState","com.github.panpf.zoomimage.GlideZoomState"]},{"name":"constructor(animationSpec: AnimationSpec<Float>)","description":"com.github.panpf.zoomimage.compose.glide.CrossFade.CrossFade","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-cross-fade/-cross-fade.html","searchKeys":["CrossFade","constructor(animationSpec: AnimationSpec<Float>)","com.github.panpf.zoomimage.compose.glide.CrossFade.CrossFade"]},{"name":"constructor(dataSource: DataSource)","description":"com.github.panpf.zoomimage.compose.glide.RequestState.Success.Success","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-request-state/-success/-success.html","searchKeys":["Success","constructor(dataSource: DataSource)","com.github.panpf.zoomimage.compose.glide.RequestState.Success.Success"]},{"name":"constructor(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<GlideSubsamplingImageGenerator>?)","description":"com.github.panpf.zoomimage.GlideZoomState.GlideZoomState","location":"zoomimage-compose-glide/com.github.panpf.zoomimage/-glide-zoom-state/-glide-zoom-state.html","searchKeys":["GlideZoomState","constructor(logger: Logger, zoomable: ZoomableState, subsampling: SubsamplingState, subsamplingImageGenerators: ImmutableList<GlideSubsamplingImageGenerator>?)","com.github.panpf.zoomimage.GlideZoomState.GlideZoomState"]},{"name":"data class Success(val dataSource: DataSource) : RequestState","description":"com.github.panpf.zoomimage.compose.glide.RequestState.Success","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-request-state/-success/index.html","searchKeys":["Success","data class Success(val dataSource: DataSource) : RequestState","com.github.panpf.zoomimage.compose.glide.RequestState.Success"]},{"name":"fun <DataT : Any> rememberGlidePreloadingData(data: List<DataT>, preloadImageSize: Size, numberOfItemsToPreload: Int = DEFAULT_ITEMS_TO_PRELOAD, fixedVisibleItemCount: Int? = null, requestBuilderTransform: PreloadRequestBuilderTransform<DataT>): GlidePreloadingData<DataT>","description":"com.github.panpf.zoomimage.compose.glide.rememberGlidePreloadingData","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/remember-glide-preloading-data.html","searchKeys":["rememberGlidePreloadingData","fun <DataT : Any> rememberGlidePreloadingData(data: List<DataT>, preloadImageSize: Size, numberOfItemsToPreload: Int = DEFAULT_ITEMS_TO_PRELOAD, fixedVisibleItemCount: Int? = null, requestBuilderTransform: PreloadRequestBuilderTransform<DataT>): GlidePreloadingData<DataT>","com.github.panpf.zoomimage.compose.glide.rememberGlidePreloadingData"]},{"name":"fun <DataT : Any> rememberGlidePreloadingData(dataSize: Int, dataGetter: (Int) -> DataT, preloadImageSize: Size, numberOfItemsToPreload: Int = DEFAULT_ITEMS_TO_PRELOAD, fixedVisibleItemCount: Int? = null, requestBuilderTransform: PreloadRequestBuilderTransform<DataT>): GlidePreloadingData<DataT>","description":"com.github.panpf.zoomimage.compose.glide.rememberGlidePreloadingData","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/remember-glide-preloading-data.html","searchKeys":["rememberGlidePreloadingData","fun <DataT : Any> rememberGlidePreloadingData(dataSize: Int, dataGetter: (Int) -> DataT, preloadImageSize: Size, numberOfItemsToPreload: Int = DEFAULT_ITEMS_TO_PRELOAD, fixedVisibleItemCount: Int? = null, requestBuilderTransform: PreloadRequestBuilderTransform<DataT>): GlidePreloadingData<DataT>","com.github.panpf.zoomimage.compose.glide.rememberGlidePreloadingData"]},{"name":"fun GlideImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, clipToBounds: Boolean = true, loading: Placeholder? = null, failure: Placeholder? = null, transition: Transition.Factory? = null, requestBuilderTransform: RequestBuilderTransform<Drawable> = { it })","description":"com.github.panpf.zoomimage.compose.glide.GlideImage","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-glide-image.html","searchKeys":["GlideImage","fun GlideImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, clipToBounds: Boolean = true, loading: Placeholder? = null, failure: Placeholder? = null, transition: Transition.Factory? = null, requestBuilderTransform: RequestBuilderTransform<Drawable> = { it })","com.github.panpf.zoomimage.compose.glide.GlideImage"]},{"name":"fun GlideSubcomposition(model: Any?, modifier: Modifier = Modifier, requestBuilderTransform: RequestBuilderTransform<Drawable> = { it }, content: GlideSubcompositionScope.() -> Unit)","description":"com.github.panpf.zoomimage.compose.glide.GlideSubcomposition","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-glide-subcomposition.html","searchKeys":["GlideSubcomposition","fun GlideSubcomposition(model: Any?, modifier: Modifier = Modifier, requestBuilderTransform: RequestBuilderTransform<Drawable> = { it }, content: GlideSubcompositionScope.() -> Unit)","com.github.panpf.zoomimage.compose.glide.GlideSubcomposition"]},{"name":"fun GlideZoomAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, zoomState: GlideZoomState = rememberGlideZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null, loading: Placeholder? = null, failure: Placeholder? = null, transition: Transition.Factory? = null, requestBuilderTransform: RequestBuilderTransform<Drawable> = { it })","description":"com.github.panpf.zoomimage.GlideZoomAsyncImage","location":"zoomimage-compose-glide/com.github.panpf.zoomimage/-glide-zoom-async-image.html","searchKeys":["GlideZoomAsyncImage","fun GlideZoomAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, zoomState: GlideZoomState = rememberGlideZoomState(), scrollBar: ScrollBarSpec? = ScrollBarSpec.Default, onLongPress: (Offset) -> Unit? = null, onTap: (Offset) -> Unit? = null, loading: Placeholder? = null, failure: Placeholder? = null, transition: Transition.Factory? = null, requestBuilderTransform: RequestBuilderTransform<Drawable> = { it })","com.github.panpf.zoomimage.GlideZoomAsyncImage"]},{"name":"fun placeholder(composable: () -> Unit): Placeholder","description":"com.github.panpf.zoomimage.compose.glide.placeholder","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/placeholder.html","searchKeys":["placeholder","fun placeholder(composable: () -> Unit): Placeholder","com.github.panpf.zoomimage.compose.glide.placeholder"]},{"name":"fun placeholder(drawable: Drawable?): Placeholder","description":"com.github.panpf.zoomimage.compose.glide.placeholder","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/placeholder.html","searchKeys":["placeholder","fun placeholder(drawable: Drawable?): Placeholder","com.github.panpf.zoomimage.compose.glide.placeholder"]},{"name":"fun placeholder(painter: Painter?): Placeholder","description":"com.github.panpf.zoomimage.compose.glide.placeholder","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/placeholder.html","searchKeys":["placeholder","fun placeholder(painter: Painter?): Placeholder","com.github.panpf.zoomimage.compose.glide.placeholder"]},{"name":"fun placeholder(resourceId: Int): Placeholder","description":"com.github.panpf.zoomimage.compose.glide.placeholder","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/placeholder.html","searchKeys":["placeholder","fun placeholder(resourceId: Int): Placeholder","com.github.panpf.zoomimage.compose.glide.placeholder"]},{"name":"fun rememberGlideZoomState(subsamplingImageGenerators: ImmutableList<GlideSubsamplingImageGenerator>? = null, logLevel: Logger.Level? = null): GlideZoomState","description":"com.github.panpf.zoomimage.rememberGlideZoomState","location":"zoomimage-compose-glide/com.github.panpf.zoomimage/remember-glide-zoom-state.html","searchKeys":["rememberGlideZoomState","fun rememberGlideZoomState(subsamplingImageGenerators: ImmutableList<GlideSubsamplingImageGenerator>? = null, logLevel: Logger.Level? = null): GlideZoomState","com.github.panpf.zoomimage.rememberGlideZoomState"]},{"name":"interface Factory","description":"com.github.panpf.zoomimage.compose.glide.Transition.Factory","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-transition/-factory/index.html","searchKeys":["Factory","interface Factory","com.github.panpf.zoomimage.compose.glide.Transition.Factory"]},{"name":"interface GlidePreloadingData<DataT>","description":"com.github.panpf.zoomimage.compose.glide.GlidePreloadingData","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-glide-preloading-data/index.html","searchKeys":["GlidePreloadingData","interface GlidePreloadingData<DataT>","com.github.panpf.zoomimage.compose.glide.GlidePreloadingData"]},{"name":"interface GlideSubcompositionScope","description":"com.github.panpf.zoomimage.compose.glide.GlideSubcompositionScope","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-glide-subcomposition-scope/index.html","searchKeys":["GlideSubcompositionScope","interface GlideSubcompositionScope","com.github.panpf.zoomimage.compose.glide.GlideSubcompositionScope"]},{"name":"interface Transition","description":"com.github.panpf.zoomimage.compose.glide.Transition","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-transition/index.html","searchKeys":["Transition","interface Transition","com.github.panpf.zoomimage.compose.glide.Transition"]},{"name":"object Companion : Transition.Factory","description":"com.github.panpf.zoomimage.compose.glide.CrossFade.Companion","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-cross-fade/-companion/index.html","searchKeys":["Companion","object Companion : Transition.Factory","com.github.panpf.zoomimage.compose.glide.CrossFade.Companion"]},{"name":"object Failure : RequestState","description":"com.github.panpf.zoomimage.compose.glide.RequestState.Failure","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-request-state/-failure/index.html","searchKeys":["Failure","object Failure : RequestState","com.github.panpf.zoomimage.compose.glide.RequestState.Failure"]},{"name":"object Loading : RequestState","description":"com.github.panpf.zoomimage.compose.glide.RequestState.Loading","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-request-state/-loading/index.html","searchKeys":["Loading","object Loading : RequestState","com.github.panpf.zoomimage.compose.glide.RequestState.Loading"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.zoomimage.compose.glide.CrossFade.equals","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-cross-fade/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.zoomimage.compose.glide.CrossFade.equals"]},{"name":"open override fun build(): Transition","description":"com.github.panpf.zoomimage.compose.glide.CrossFade.Companion.build","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-cross-fade/-companion/build.html","searchKeys":["build","open override fun build(): Transition","com.github.panpf.zoomimage.compose.glide.CrossFade.Companion.build"]},{"name":"open override fun build(): Transition","description":"com.github.panpf.zoomimage.compose.glide.CrossFade.build","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-cross-fade/build.html","searchKeys":["build","open override fun build(): Transition","com.github.panpf.zoomimage.compose.glide.CrossFade.build"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.zoomimage.compose.glide.CrossFade.hashCode","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-cross-fade/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.zoomimage.compose.glide.CrossFade.hashCode"]},{"name":"sealed class Placeholder","description":"com.github.panpf.zoomimage.compose.glide.Placeholder","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-placeholder/index.html","searchKeys":["Placeholder","sealed class Placeholder","com.github.panpf.zoomimage.compose.glide.Placeholder"]},{"name":"sealed class RequestState","description":"com.github.panpf.zoomimage.compose.glide.RequestState","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-request-state/index.html","searchKeys":["RequestState","sealed class RequestState","com.github.panpf.zoomimage.compose.glide.RequestState"]},{"name":"typealias DrawPainter = DrawScope.(Painter, Size, Float, ColorFilter?) -> Unit","description":"com.github.panpf.zoomimage.compose.glide.DrawPainter","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-draw-painter/index.html","searchKeys":["DrawPainter","typealias DrawPainter = DrawScope.(Painter, Size, Float, ColorFilter?) -> Unit","com.github.panpf.zoomimage.compose.glide.DrawPainter"]},{"name":"typealias PreloadRequestBuilderTransform<DataTypeT> = (item: DataTypeT, requestBuilder: RequestBuilder<Drawable>) -> RequestBuilder<Drawable>","description":"com.github.panpf.zoomimage.compose.glide.PreloadRequestBuilderTransform","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-preload-request-builder-transform/index.html","searchKeys":["PreloadRequestBuilderTransform","typealias PreloadRequestBuilderTransform<DataTypeT> = (item: DataTypeT, requestBuilder: RequestBuilder<Drawable>) -> RequestBuilder<Drawable>","com.github.panpf.zoomimage.compose.glide.PreloadRequestBuilderTransform"]},{"name":"typealias RequestBuilderTransform<T> = (RequestBuilder<T>) -> RequestBuilder<T>","description":"com.github.panpf.zoomimage.compose.glide.RequestBuilderTransform","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-request-builder-transform/index.html","searchKeys":["RequestBuilderTransform","typealias RequestBuilderTransform<T> = (RequestBuilder<T>) -> RequestBuilder<T>","com.github.panpf.zoomimage.compose.glide.RequestBuilderTransform"]},{"name":"val dataSource: DataSource","description":"com.github.panpf.zoomimage.compose.glide.RequestState.Success.dataSource","location":"zoomimage-compose-glide/com.github.panpf.zoomimage.compose.glide/-request-state/-success/data-source.html","searchKeys":["dataSource","val dataSource: DataSource","com.github.panpf.zoomimage.compose.glide.RequestState.Success.dataSource"]},{"name":"val subsamplingImageGenerators: List<GlideSubsamplingImageGenerator>","description":"com.github.panpf.zoomimage.GlideZoomState.subsamplingImageGenerators","location":"zoomimage-compose-glide/com.github.panpf.zoomimage/-glide-zoom-state/subsampling-image-generators.html","searchKeys":["subsamplingImageGenerators","val subsamplingImageGenerators: List<GlideSubsamplingImageGenerator>","com.github.panpf.zoomimage.GlideZoomState.subsamplingImageGenerators"]}]